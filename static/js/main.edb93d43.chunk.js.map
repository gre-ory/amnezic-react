{"version":3,"sources":["static/music.png","data/Card.ts","data/Constants.ts","data/Settings.ts","data/Question.ts","data/Util.ts","data/QuestionStats.ts","data/PlayerStats.ts","data/Album.ts","data/Artist.ts","data/Media.ts","data/Quizz.ts","data/Game.ts","data/GameStats.ts","data/Navigate.ts","component/Header.tsx","component/Footer.tsx","component/Page.tsx","component/GameCard.tsx","component/NextButton.tsx","page/HomePage.tsx","component/PlayerAvatar.tsx","component/GamePage.tsx","page/SettingsPage.tsx","component/icon/ClubIcon.tsx","component/icon/DiamondIcon.tsx","component/icon/CircleIcon.tsx","component/icon/HeartIcon.tsx","component/icon/SpadeIcon.tsx","component/icon/SquareIcon.tsx","component/icon/StarIcon.tsx","component/icon/TriangleIcon.tsx","component/icon/CrossIcon.tsx","component/PlayingCardIcon.tsx","component/PlayingCard.tsx","component/PlayingCardModal.tsx","data/Avatar.ts","component/AvatarModal.tsx","component/PlayerCard.tsx","page/PlayersPage.tsx","page/StartPage.tsx","component/MediaCard.tsx","component/MusicPlayer.tsx","component/QuestionCard.tsx","page/QuestionPage.tsx","component/PlayerScoreCard.tsx","page/ScoresPage.tsx","page/AvatarsPage.tsx","page/PlayingCardsPage.tsx","App.tsx","index.jsx"],"names":["module","exports","__webpack_require__","p","CardSymbol","CardColor","CardSize","MAX_NB_GAME","DEFAULT_NB_PLAYER","PLAYER_ID_SUFFIX","DEFAULT_NB_QUESTION","QUESTION_ID_SUFFIX","DEFAULT_NB_ANSWER_PER_QUESTION","ANSWER_ID_SUFFIX","newSettings","nbPlayer","arguments","length","undefined","nbQuestion","nbAnswer","addAnswer","question","answer","hint","correct","number","answers","current","id","push","getPlayerAnswerIndex","playerId","answerId","playerAnswers","findIndex","playerAnswer","hasPlayerAnswer","onQuestionPlayed","console","log","concat","status","onQuestionCompleted","range","nb","Array","from","keys","toZeroPadString","value","padSize","padStart","toDateTimeString","date","Date","year","getFullYear","month","getMonth","day","getDate","toDateString","hours","getHours","minutes","getMinutes","seconds","getSeconds","toTimeString","onUserEvent","callback","event","stopPropagation","preventDefault","onKeyEvent","keyCallback","key","HeartCard","symbol","HEART","color","RED","DiamondCard","DIAMOND","DefaultCards","CLUB","BLACK","SPADE","CIRCLE","BLUE","YELLOW","GREEN","TRIANGLE","ORANGE","PURPLE","getAnswerStats","stats","find","getOrSetAnswerStats","answerStats","success","score","getQuestionStats","questionId","questions","getOrSetQuestionStats","questionStats","error","flagQuestionAsError","nbError","newAlbum","title","picture","newArtist","name","newMedia","music","artist","album","_regeneratorRuntime","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","_createForOfIteratorHelper","o","allowArrayLike","it","isArray","minLen","_arrayLikeToArray","n","toString","test","_unsupportedIterableToArray","F","s","e","_e","f","normalCompletion","didErr","step","_e2","arr","len","arr2","_buildQuestionsFromApi","_asyncToGenerator","_callee","game","requestURL","response","message","jsonResponse","jsonGame","_iterator5","_step5","jsonQuestion","jsonMusic","jsonTheme","media","_iterator6","_step6","jsonAnswer","_context","process","settings","fetch","ok","body","json","theme","imgUrl","mp3Url","addQuestion","text","t0","apply","GameStep","newGameId","customAlphabet","newGameCode","newGame","code","created","now","updated","SETTINGS","players","started","ended","previous","nextNumber","previousNumber","updateSettings","update","_objectSpread","updatePlayer","map","player","GAMES","sortGames","games","_toConsumableArray","sort","left","right","storeGames","sanitizedGames","localStorage","setItem","JSON","stringify","loadGames","parse","getItem","selectGame","gameId","g","isSetUp","hasPlayers","hasQuestions","OnStep","gameStep","onSetUp","_x","buildQuestionsFromApi","index","card","avatarId","nbSuccess","nbFailure","nbMiss","addPlayer","PLAYERS","onStartGame","questionNumber","nbCompleted","progress","QUIZZ","onAnswers","_step","nbPoint","_iterator","_loop","some","isCorrect","flagAnswerAsIncorrect","flagAnswerAsCorrect","_step2","_iterator2","_step3","miss","_iterator3","onEndGame","SCORES","toGamePage","toSettingsPage","toPlayersPage","toQuizzPage","toScoresPage","Header","props","updateGame","onPrevious","onNext","navigate","useNavigate","isHomeSelected","isSettingsSelected","isPlayersSelected","isQuizzSelected","isScoresSelected","isSettingsDisabled","isSettingsPageDisabled","isPlayersDisabled","isPlayersPageDisabled","isQuizzDisabled","isQuizzPageDisabled","isScoresDisabled","isScoresPageDisabled","updateGameStep","onHomePage","onSettingsPage","onPlayersPage","onQuizzPage","onScoresPage","handleKeyPress","React","useCallback","useEffect","document","addEventListener","removeEventListener","_React$useState","useState","_React$useState2","_slicedToArray","menuElement","setMenuElement","open","Boolean","finalTitle","createElement","Box","className","sx","flexGrow","style","marginBottom","AppBar","position","Toolbar","width","display","alignItems","justifyContent","Fragment","IconButton","aria-label","aria-controls","aria-expanded","aria-haspopup","onClick","currentTarget","MenuIcon","Menu","anchorEl","onClose","MenuListProps","aria-labelledby","MenuItem","selected","disabled","ListItemIcon","Home","fontSize","ListItemText","Settings","Group","MusicNote","MilitaryTech","fontWeight","textTransform","SkipPreviousIcon","SkipNextIcon","Footer","Page","children","useStyles","makeStyles","gameCard","flexDirection","padding","borderRadius","border","&:hover","backgroundColor","gameLine","gameItem","GameCard","startGame","resumeGame","deleteGame","classes","onStart","margin","onResume","onDelete","Math","round","Stack","direction","spacing","opacity","Chip","label","CloseIcon","marginLeft","PersonIcon","marginRight","MusicNoteIcon","CalendarTodayIcon","marginTop","height","LinearProgress","variant","valueBuffer","NextButton","description","AvatarSize","HomePage","addGame","deleteGames","oldGameIds","sortedGames","Accordion","AccordionSummary","expandIcon","ExpandMoreIcon","AccordionDetails","Grid","container","item","xs","textAlign","allGameIds","DeleteIcon","GamePage","replace","toLowerCase","SettingsPage","useParams","lessPlayerDisabled","morePlayerDisabled","lessQuestionDisabled","moreQuestionDisabled","lessAnswerDisabled","moreAnswerDisabled","updateNbPlayer","updateNbQuestion","updateNbAnswer","lessPlayer","morePlayer","lessQuestion","moreQuestion","lessAnswer","moreAnswer","Button","size","QuizIcon","ClubIcon","xmlns","viewBox","d","DiamondIcon","CircleIcon","HeartIcon","SpadeIcon","SquareIcon","StarIcon","TriangleIcon","CrossIcon","PlayingCardIcon","CROSS","SQUARE","STAR","PlayingCard","cardSize","cardClassNames","PlayerAvatar","avatarClassNames","PlayingCardModal","closeModal","onSymbolChange","onColorChange","onCardChange","Modal","aria-describedby","top","transform","bgcolor","boxShadow","Typography","filter","GRAY","newColor","XL","newSymbol","defaultCard","XS","ALL_AVATAR_IDS","AvatarModal","onAvatarChange","newAvatarId","M","PlayerCard","avatarSize","setName","editMode","_React$useState3","_React$useState4","playingCardModal","setPlayingCardModal","_React$useState5","_React$useState6","avatarModal","setAvatarModal","updatePlayerCard","Card","CardContent","L","TextField","onChange","target","onBlur","updatePlayerName","S","updatePlayerAvatar","PlayersPage","StartPage","MediaCard","mediaImage","musicBackground","artistName","albumName","component","pl","pb","CardMedia","image","MusicPlayer","loading","playing","played","onMusicLoaded","onMusicPlaying","onMusicPaused","onMusicEnded","audioRef","useRef","Audio","toggleMusic","play","pause","lessVolume","volume","max","moreVolume","min","src","loop","onAudioLoad","currentTime","duration","onAudioReady","onAudioEnd","playingMusic","pausingMusic","onPause","onPlay","LightTooltip","withStyles","tooltip","arrow","Tooltip","icon","PlayArrowIcon","cursor","background","backgroundSize","CircularProgress","bottom","QuestionCard","updateQuestion","setQuestionId","musicLoading","setMusicLoading","nbSecondsTotal","setNbSecondsTotal","_React$useState7","_React$useState8","nbShownAnswers","setNbShownAnswers","_React$useState9","_React$useState10","musicReady","setMusicReady","_React$useState11","_React$useState12","countDown","setCountDown","_React$useState13","_React$useState14","musicStarted","setMusicStarted","_React$useState15","_React$useState16","musicPlaying","setMusicPlaying","_React$useState17","_React$useState18","nbSecondsPlayed","setNbSecondsPlayed","_React$useState19","_React$useState20","musicEnded","setMusicEnded","musicError","musicPlayed","addPlayerAnswer","removeAnswer","splice","removePlayerAnswer","flagQuestionAsFailed","onQuestionError","_step4","_iterator4","onErrorAnswers","sortedPlayers","badgeValue","badgeColor","resetOnPlayed","onMusicFailed","showNextAnswer","showCountDown","showNbSecondsPlayed","timerId","clearInterval","setInterval","ONE_SECOND","ceil","musicPaused","showHints","musicPlayerInfo","Alert","severity","hidden","Paper","elevation","Avatar","lineHeight","justifyItems","failed","nbSeconds","getQuestionAnswerStats","transition","Badge","badgeContent","tooltipId","disableTooltip","disableFocusListener","disableHoverListener","QuestionPage","_useParams","questionParam","parseInt","selectQuestion","updateQuestionNumber","onQuestionNumber","PlayerScoreCard","medalColor","prettyPoints","prettyPercent","nbTotal","successPercent","failurePercent","missPercent","sumBySuccessAnswer","sumByFailureAnswer","nbSuccessAnswer","nbFailureAnswer","avgSuccessDelta","avgFailureDelta","avgDelta","aspectRatio","MilitaryTechIcon","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","scope","ScoresPage","previousPosition","previousScore","colorScale","medalColorScale","VictoryChart","data","intermediateScore","x","y","computeVizualiationScoreData","VictoryGroup","labels","_ref","datum","labelComponent","VictoryTooltip","VictoryLine","VictoryScatter","fill","AvatarsPage","PlayingCardsPage","App","setGames","Router","Routes","Route","path","element","gameIds","newGames","indexOf","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.edb93d43.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/music.45a44973.png\";","\nexport enum CardSymbol {\n  HEART = 'HEART',\n  DIAMOND = 'DIAMOND',\n  CLUB = 'CLUB',\n  SPADE = 'SPADE',\n  STAR = 'STAR',\n  CIRCLE = 'CIRCLE',\n  SQUARE = 'SQUARE',\n  TRIANGLE = 'TRIANGLE',\n  CROSS = 'CROSS',\n}  \n\nexport enum CardColor {\n  BLACK = 'BLACK',\n  RED = 'RED',\n  BLUE = 'BLUE',\n  GREEN = 'GREEN',\n  PURPLE = 'PURPLE',\n  YELLOW = 'YELLOW',\n  ORANGE = 'ORANGE',\n  PINK = 'PINK',\n  BROWN = 'BROWN',\n  GRAY = 'GRAY',\n}\n\nexport enum CardSize {\n  XS = 'XS',\n  S = 'S',\n  M = 'M',\n  L = 'L',\n  XL = 'XL',\n}\n\nexport interface Card {\n  readonly symbol: CardSymbol\n  readonly color: CardColor\n  size?: CardSize\n  number?: number\n  value?: string\n}\n\nexport const HeartCard: Card = { symbol: CardSymbol.HEART, color: CardColor.RED }\nexport const DiamondCard: Card = { symbol: CardSymbol.DIAMOND, color: CardColor.RED }\nexport const ClubCard: Card = { symbol: CardSymbol.CLUB, color: CardColor.BLACK }\nexport const SpadeCard: Card = { symbol: CardSymbol.SPADE, color: CardColor.BLACK }\n\nexport const BlueCircleCard: Card = { symbol: CardSymbol.CIRCLE, color: CardColor.BLUE }\nexport const YellowCircleCard: Card = { symbol: CardSymbol.CIRCLE, color: CardColor.YELLOW }\nexport const RedCircleCard: Card = { symbol: CardSymbol.CIRCLE, color: CardColor.RED }\nexport const GreenCircleCard: Card = { symbol: CardSymbol.CIRCLE, color: CardColor.GREEN }\n\nexport const OrangeTriangleCard: Card = { symbol: CardSymbol.TRIANGLE, color: CardColor.ORANGE }\nexport const PurpleTriangleCard: Card = { symbol: CardSymbol.TRIANGLE, color: CardColor.PURPLE }\n\nexport const DefaultCards: Card[] = [ \n  ClubCard, \n  DiamondCard, \n  HeartCard, \n  SpadeCard,\n\n  BlueCircleCard, \n  YellowCircleCard, \n  RedCircleCard, \n  GreenCircleCard,\n  \n  OrangeTriangleCard,\n  PurpleTriangleCard \n]","\nexport const DEBUG = false\n\nexport const HEADER_KEYBOARD_SHORTCUTS = true\nexport const MUSIC_PLAYER_KEYBOARD_SHORTCUTS = true\n\nexport const MAX_NB_GAME = 4\n\nexport const DEFAULT_NB_PLAYER = 2\nexport const MIN_NB_PLAYER = 2\nexport const MAX_NB_PLAYER = 9\nexport const INCREMENT_NB_PLAYER = 1\nexport const PLAYER_ID_SUFFIX = 9000\n\nexport const DEFAULT_NB_QUESTION = 50\nexport const MIN_NB_QUESTION = 10\nexport const MAX_NB_QUESTION = 99\nexport const INCREMENT_NB_QUESTION = 10\nexport const QUESTION_ID_SUFFIX = 0\n\nexport const DEFAULT_NB_ANSWER_PER_QUESTION = 5\nexport const MIN_NB_ANSWER_PER_QUESTION = 3\nexport const MAX_NB_ANSWER_PER_QUESTION = 6\nexport const INCREMENT_NB_ANSWER_PER_QUESTION = 1\nexport const ANSWER_ID_SUFFIX = 100\n\nexport const ONE_SECOND = DEBUG ? 300 : 1000\nexport const MAX_NB_SECONDS_LOADING = DEBUG ? 10 : 15\nexport const MAX_NB_SECONDS_PLAYING = DEBUG ? 20 : 30\n\nexport const MAX_NB_AVATAR = 20","// //////////////////////////////////////////////////\n// model\n\nimport { DEFAULT_NB_ANSWER_PER_QUESTION, DEFAULT_NB_PLAYER, DEFAULT_NB_QUESTION } from \"./Constants\"\n\nexport interface Settings {\n  nbPlayer: number\n  nbQuestion: number\n  nbAnswer: number\n}\n\nexport type SettingsUpdater = ( settings: Settings ) => Settings\n\n// //////////////////////////////////////////////////\n// create\n\nexport function newSettings( nbPlayer: number = DEFAULT_NB_PLAYER, nbQuestion: number = DEFAULT_NB_QUESTION, nbAnswer: number = DEFAULT_NB_ANSWER_PER_QUESTION ): Settings {\n  return {\n    nbPlayer: nbPlayer,\n    nbQuestion: nbQuestion,\n    nbAnswer: nbAnswer,\n  }\n}","import { Answer, AnswerId } from './Answer'\nimport { GameId } from './Game'\nimport { Media } from './Media'\nimport { PlayerId } from './Player'\nimport { PlayerAnswer } from './PlayerAnswer'\nimport { toZeroPadString } from './Util'\n\n// //////////////////////////////////////////////////\n// status\n\nexport type QuestionStatus = \n  | 'not-played' \n  | 'played'\n  | 'completed'\n  | 'error'\n\n// //////////////////////////////////////////////////\n// model\n\nexport type QuestionId = number\n\nexport interface Question {\n  id: QuestionId\n  number: number\n  status: QuestionStatus\n  title: string\n  media: Media\n  answers: Answer[] \n  playerAnswers: PlayerAnswer[] \n  previousNumber?: number\n  nextNumber?: number\n}\n\nexport type QuestionUpdater = ( question: Question ) => Question\nexport type OnQuestionUpdate = ( gameId: GameId, questionId: QuestionId, questionUpdater: QuestionUpdater ) => void\n\n// //////////////////////////////////////////////////\n// add\n\nexport function addAnswer( question: Question, answer: string, hint: string = \"\", correct: boolean = false ): Answer {\n  const number = question.answers.length + 1\n  const current: Answer = {\n    id: question.id + number, \n    number: number,\n    answer: answer,\n    hint: hint,\n    correct: correct,\n  }\n  question.answers.push( current )\n  return current\n}\n\nexport function addPlayerAnswer( question: Question, playerId: PlayerId, answerId: AnswerId ): Question {\n  if ( !hasPlayerAnswer( question, playerId, answerId ) ) {\n    question.playerAnswers.push( {\n      playerId: playerId, \n      answerId: answerId,\n    } )\n  }\n  return question\n}\n\nexport function getPlayerAnswerIndex( question: Question, playerId: PlayerId, answerId: AnswerId ): number {\n  return question.playerAnswers.findIndex( playerAnswer => ( playerAnswer.playerId === playerId ) && ( playerAnswer.answerId === answerId ) )\n}\n\nexport function hasPlayerAnswer( question: Question, playerId: PlayerId, answerId: AnswerId ): boolean {\n  return getPlayerAnswerIndex( question, playerId, answerId ) > -1\n}\n\nexport function removePlayerAnswer( question: Question, playerId: PlayerId, answerId: AnswerId ): Question {\n  let index = getPlayerAnswerIndex( question, playerId, answerId )\n  while ( index > -1 ) {\n    question.playerAnswers.splice( index, 1 )\n    index = getPlayerAnswerIndex( question, playerId, answerId )\n  }\n  return question\n}\n\nexport function isCorrect( question: Question, playerAnswer: PlayerAnswer ): boolean {\n  return question.answers.some( answer => ( answer.id ===  playerAnswer.answerId ) && answer.correct )\n}\n\n// //////////////////////////////////////////////////\n// state\n\nexport function onQuestionPlayed( question: Question ): Question {\n  console.log( `[on-question-played] question: ${question.id}` )\n\n  question.status = 'played'\n  \n  return question\n}\n\nexport function onQuestionCompleted( question: Question ): Question {\n  console.log( `[on-question-completed] question: ${question.id}` )\n\n  question.status = 'completed'\n  \n  return question\n}\n\nexport function onQuestionError( question: Question ): Question {\n  console.log( `[on-question-error] question: ${question.id}` )\n\n  question.status = 'error'\n  \n  return question\n}","\n// //////////////////////////////////////////////////\n// range\n\nexport function range( nb: number ): number[] {\n    return Array.from( Array( nb ).keys() )\n}\n\nexport function pickIndexes( nbSelected: number, nbTotal: number ): number[] {    \n\n    if ( nbTotal <= nbSelected ) {\n        return shuffle( range( nbTotal ) )\n    }\n\n    var selected = new Set<number>();\n    for( var i = 0; i < nbSelected; i++ ) {\n        var j = Math.random() * nbTotal | 0;\n        while(selected.has(j)){\n            j = Math.random() * nbTotal | 0;\n        }\n        selected.add( j );\n    }\n    return Array.from( selected )\n}\n\nexport function pick<T>( values: T[] ): T {\n    return values[ Math.random() * values.length | 0 ];\n}\n\nexport function shuffle<T>( values: T[] ) {\n    for ( let i = values.length - 1; i > 0; i-- ) {\n        let j = Math.random() * ( i + 1 ) | 0;\n        [ values[ i ], values[ j ] ] = [ values[ j ], values[ i ] ];\n    }\n    return values\n}\n\n// //////////////////////////////////////////////////\n// format\n\nexport function toZeroPadString( value: number, padSize: number ): string {\n    return `${value}`.padStart( padSize, '0' )\n}\n\nexport function toDateString( value: number ): string {\n    if ( value <= 0 ) {\n        return '-'\n    }\n    const date = new Date( value )\n    const year = date.getFullYear()\n    const month = toZeroPadString( date.getMonth() + 1, 2 )\n    const day = toZeroPadString( date.getDate(), 2 )\n    return `${year}-${month}-${day}`\n}\n\nexport function toTimeString( value: number ): string {\n    if ( value <= 0 ) {\n        return '-'\n    }\n    const date = new Date( value )\n    const hours = toZeroPadString( date.getHours(), 2 )\n    const minutes = toZeroPadString( date.getMinutes(), 2 )\n    const seconds = toZeroPadString( date.getSeconds(), 2 )\n    return `${hours}:${minutes}:${seconds}`\n}\n\nexport function toDateTimeString( value: number ): string {\n    if ( value <= 0 ) {\n        return '-'\n    }\n    return `${toDateString(value)} ${toTimeString(value)}`\n}\n\n// //////////////////////////////////////////////////\n// user event\n\nexport type Callback = () => void\nexport type EventCallback = ( event: any ) => void\n\nexport function onUserEvent( callback: Callback ): EventCallback {\n    return ( event: any ) => {\n        callback()\n        event.stopPropagation()\n        event.preventDefault()\n    }\n}\n\n// //////////////////////////////////////////////////\n// key event\n\nexport type KeyCallback = ( key: string ) => boolean\nexport type KeyEventCallback = ( event: any ) => void\n\nexport function onKeyEvent( keyCallback: KeyCallback ): EventCallback {\n    return ( event: any ) => {\n        if ( keyCallback( event.key ) ) {\n            console.log( `key-event [${event.key}] >>> handled! >>> stop propagation!` )    \n            event.stopPropagation()\n            event.preventDefault()\n        } else {\n            console.log( `key-event [${event.key}] >>> propagate...` )    \n        }\n    }\n}\n","\n// //////////////////////////////////////////////////\n// model\n\nimport { AnswerId } from \"./Answer\"\nimport { AnswerStats } from \"./AnswerStats\"\nimport { QuestionId } from \"./Question\"\n\nexport interface QuestionStats {\n  id: QuestionId\n  score: number\n  answers: AnswerStats[]\n  error: boolean\n}\n\nexport function getAnswerStats( stats: QuestionStats, answerId: AnswerId ): AnswerStats | undefined {  \n  return stats.answers.find( answer => answer.id === answerId )\n}\n\nexport function getOrSetAnswerStats( stats: QuestionStats, answerId: AnswerId ): AnswerStats {  \n  const current = getAnswerStats( stats, answerId )\n  if ( current !== undefined ) {\n    return current\n  }\n  const answerStats: AnswerStats = {\n    id: answerId,\n    success: false,\n    score: 0\n  }\n  stats.answers.push( answerStats )\n  return answerStats\n}\n\n\n","import { AnswerId } from './Answer'\nimport { AnswerStats } from './AnswerStats'\nimport { QuestionId } from './Question'\nimport { getAnswerStats, getOrSetAnswerStats, QuestionStats } from './QuestionStats'\n\n// //////////////////////////////////////////////////\n// model\n\nexport interface PlayerStats {\n  score: number\n  nbAnswer: number\n  nbSuccess: number\n  nbFailure: number\n  nbMiss: number,\n  nbError: number,\n  questions: QuestionStats[]\n}\n\nexport interface PlayerVizualiationScoreData {\n  x: string // question number\n  y: number // player score\n  tooltip: string\n}\n\n// //////////////////////////////////////////////////\n// create\n\nexport function newPlayerStats(): PlayerStats {\n  return {\n    score: 0,\n    nbAnswer: 0,\n    nbSuccess: 0,\n    nbFailure: 0,\n    nbMiss: 0,\n    nbError: 0,\n    questions: [],\n  }\n}\n\nexport function getQuestionStats( stats: PlayerStats, questionId: QuestionId ): QuestionStats | undefined {  \n  return stats.questions.find( question => question.id === questionId )\n}\n\nexport function getQuestionAnswerStats( stats: PlayerStats, questionId: QuestionId, answerId: AnswerId ): AnswerStats | undefined {  \n  const questionStats = getQuestionStats( stats, questionId )\n  return questionStats ? getAnswerStats( questionStats, answerId ) : undefined\n}\n\nexport function getOrSetQuestionStats( stats: PlayerStats, questionId: QuestionId ): QuestionStats {  \n  const current = getQuestionStats( stats, questionId )\n  if ( current !== undefined ) {\n    return current\n  }\n  const questionStats: QuestionStats = {\n    id: questionId,\n    score: 0,\n    answers: [],\n    error: false\n  }\n  stats.questions.push( questionStats )\n  return questionStats\n}\n\nexport function flagAnswerAsCorrect( stats: PlayerStats, questionId: QuestionId, answerId: AnswerId, nbPoint: number ) {\n  \n  // global\n  stats.nbAnswer += 1\n  stats.nbSuccess++\n  stats.score += nbPoint\n  \n  // per question\n  const questionStats = getOrSetQuestionStats( stats, questionId )\n  questionStats.score += nbPoint\n\n  // per asnwer\n  const answerStats = getOrSetAnswerStats( questionStats, answerId )\n  answerStats.success = true\n  answerStats.score = nbPoint\n}\n\nexport function flagAnswerAsIncorrect( stats: PlayerStats, questionId: QuestionId, answerId: AnswerId, nbPoint: number ) {\n  \n  // global\n  stats.nbAnswer += 1\n  stats.nbFailure++\n  stats.score += nbPoint // should be negative\n  \n  // per question\n  const questionStats = getOrSetQuestionStats( stats, questionId )\n  questionStats.score += nbPoint // should be negative\n\n  // per asnwer\n  const answerStats = getOrSetAnswerStats( questionStats, answerId )\n  answerStats.success = false\n  answerStats.score = nbPoint // should be negative\n}\n\nexport function flagQuestionAsMiss( stats: PlayerStats, questionId: QuestionId ) {\n  \n  // global\n  stats.nbMiss++\n  stats.score += 0\n  \n  // per question\n  const questionStats = getOrSetQuestionStats( stats, questionId )\n  questionStats.score = 0\n}\n\nexport function flagQuestionAsError( stats: PlayerStats, questionId: QuestionId ) {\n  \n  // global\n  stats.nbError++\n  stats.score += 0\n  \n  // per question\n  const questionStats = getOrSetQuestionStats( stats, questionId )\n  questionStats.score = 0\n  questionStats.error = true\n}\n\nexport function computeVizualiationScoreData( stats: PlayerStats ): PlayerVizualiationScoreData[] {\n  const data:PlayerVizualiationScoreData[] = []\n  \n  let questionNumber = 0\n  let intermediateScore = 0\n\n  data.push({\n    x: ` `,\n    y: intermediateScore,\n    tooltip : `${intermediateScore} (start)`\n  })\n\n  for ( const question of stats.questions ) {\n    questionNumber++\n    intermediateScore += question.score\n    \n    let tooltip = ''\n    if ( question.error ) {\n      tooltip = `${intermediateScore} (error)`\n    } else if ( question.answers.length == 0 ) {\n      tooltip = `${intermediateScore} (miss)`\n    } else if ( question.score >= 0 ) {\n      tooltip = `${intermediateScore} (+${question.score})`\n    } else {\n      tooltip = `${intermediateScore} (${question.score})`\n    }\n    \n    data.push({\n      x: `Q${questionNumber}`,\n      y: intermediateScore,\n      tooltip : tooltip\n    })\n  }\n  return data\n}\n","\n// //////////////////////////////////////////////////\n// model\n\nexport interface Album {\n  title: string\n  picture: string\n}\n\n// //////////////////////////////////////////////////\n// create\n\nexport function newAlbum( title: string, picture: string = \"\" ): Album {\n  return {\n    title: title,\n    picture: picture,\n  }\n}","\n// //////////////////////////////////////////////////\n// model\n\nexport interface Artist {\n  name: string\n  picture: string\n}\n\n// //////////////////////////////////////////////////\n// create\n\nexport function newArtist( name: string, picture: string = \"\" ): Artist {\n  return {\n    name: name,\n    picture: picture,\n  }\n}","import { Album } from './Album'\nimport { Artist } from './Artist'\n\n// //////////////////////////////////////////////////\n// model\n\nexport interface Media {\n  title: string\n  music: string \n  artist?: Artist\n  album?: Album  \n}\n\n// //////////////////////////////////////////////////\n// create\n\nexport function newMedia( title: string, music: string, artist?: Artist, album?: Album ): Media {\n  return {\n    title: title,\n    music: music,\n    artist: artist,\n    album: album,\n  }\n}","// //////////////////////////////////////////////////\n// import\n\nimport { newAlbum } from \"./Album\"\nimport { newArtist } from \"./Artist\"\nimport { addQuestion, Game } from \"./Game\"\nimport { newMedia } from \"./Media\"\nimport { addAnswer, Question } from \"./Question\"\nimport { Settings } from \"./Settings\"\nimport { pick, pickIndexes, range, shuffle } from \"./Util\"\nimport legacyJson from '../static/legacy.json';\nimport { Shuffle } from \"@mui/icons-material\"\n\n// //////////////////////////////////////////////////\n// dummy game\n\nconst fullMusic = newMedia(\n    \"Harder, Better, Faster, Stronger & Pêcheur\", \n    \"https://cdns-preview-d.dzcdn.net/stream/c-deda7fa9316d9e9e880d2c6207e92260-8.mp3\", \n    newArtist( \n        \"Daft Punk & Pêcheur\", \n        \"https://e-cdns-images.dzcdn.net/images/artist/f2bc007e9133c946ac3c3907ddc5d2ea/56x56-000000-80-0-0.jpg\"\n    ), \n    newAlbum( \n        \"Discovery & Pêcheur\", \n        \"https://e-cdns-images.dzcdn.net/images/cover/2e018122cb56986277102d2041a592c8/56x56-000000-80-0-0.jpg\"\n    )\n)\n\nconst noAlbumMusic = newMedia(\n    \"Crescendolls\", \n    \"https://cdns-preview-0.dzcdn.net/stream/c-02585dc790f2904c4e870cb3bcecfcf3-8.mp3\", \n    newArtist( \n        \"Daft Punk\", \n        \"https://e-cdns-images.dzcdn.net/images/artist/f2bc007e9133c946ac3c3907ddc5d2ea/56x56-000000-80-0-0.jpg\"\n    ), \n    undefined\n) \n\nconst noPictureMusic = newMedia(\n    \"Superheroes\", \n    \"https://cdns-preview-3.dzcdn.net/stream/c-3d8caae0a1c59f417f31bb747c43818b-7.mp3\", \n    newArtist( \n        \"Daft Punk\", \n        undefined\n    ), \n    undefined\n)\n\nconst shortMusic = newMedia(\n    \"Short\", \n    \"http://gregory.valigiani.free.fr/amnezic/Rem2-14-10.mp3\", \n    newArtist( \n        \"Short\", \n        undefined\n    ), \n    undefined\n) \n\nconst failedMusic = newMedia(\n    \"Failed\",\n    \"http://gregory.valigiani.free.fr/amnezic/Clash%20-%20Should%20I%20Stay%20Or%20Go.mp3\",\n    newArtist( \n        \"Failed\", \n        undefined\n    ), \n    undefined\n)\n\nconst dummyMusics = [ fullMusic, noAlbumMusic, noPictureMusic, shortMusic, failedMusic ]\n\nexport function buildDummyQuestions( game: Game ): Game {\n\n    const nbQuestion = game.settings.nbQuestion\n    const nbAnswer = game.settings.nbAnswer\n    range( nbQuestion ).forEach( i => {\n        const media = dummyMusics[ i % dummyMusics.length ]\n        const artist = media.artist ? media.artist.name : `artist ${i+1}`\n        const question: Question = addQuestion( game, artist, media )\n\n        for ( let j = 0 ; j < nbAnswer ; j++ ) {\n        if ( i % nbAnswer == j ) {\n            addAnswer( question, artist, media.title, true )\n        } else {\n            addAnswer( question, `artist ${j+1}`, `hint ${j+1}`, false )\n        }\n        }\n    } )\n\n    return game\n}\n\n// //////////////////////////////////////////////////\n// test game\n\nexport function buildTestQuestions( game: Game ): Game {\n\n    const genre = legacyJson.genres.find( genre => genre.genre === \"Bruitages\" );\n    if ( genre ) {\n        const musics = genre.media || []\n\n        const nbQuestion = game.settings.nbQuestion\n        const nbAnswer = game.settings.nbAnswer\n        range( nbQuestion ).map( i => i+1 ).forEach( i => {\n\n            const indexes = pickIndexes( nbAnswer, musics.length )\n            const correctIndex = pick( indexes )\n            const correctMusic = musics[ correctIndex ]\n            const artist = newArtist( correctMusic.artist.name )\n            const media = newMedia( correctMusic.title, correctMusic.music, artist, undefined )\n            const question: Question = addQuestion( game, genre.genre, media )\n\n            for ( const index of indexes ) {\n                const music = musics[ index ]\n                addAnswer( question, music.artist.name, music.title, index === correctIndex )\n            }\n        } )\n    }\n\n    return game\n}\n\n// //////////////////////////////////////////////////\n// legacy game\n\nexport function buildLegacyQuestions( game: Game ): Game {\n    \n    const nbQuestion = game.settings.nbQuestion\n    const nbAnswer = game.settings.nbAnswer\n\n    const nbMusic = legacyJson.genres.map( genre => genre.media.length ).reduce( ( previous, current ) => previous + current, 0 )\n    const questionIndexes = pickIndexes( nbQuestion, nbMusic )\n\n    for ( const questionIndex of questionIndexes ) {\n\n        let startIndex = 0\n        for ( const genre of legacyJson.genres ) {\n            const endIndex = startIndex + genre.media.length\n            if ( endIndex < questionIndex ) {\n                startIndex = endIndex + 1\n                continue\n            }\n\n            const musics = genre.media || []        \n            const correctIndex = questionIndex - startIndex\n            const correctMusic = musics[ correctIndex ]\n            console.log(correctMusic.artist)\n            const artist = newArtist( correctMusic.artist && correctMusic.artist.name ? correctMusic.artist.name : '???' )\n            const musicURL = process.env.REACT_APP_LEGACY_ROOT_URI + correctMusic.music\n            const media = newMedia( correctMusic.title || '???', musicURL, artist, undefined )\n            const question: Question = addQuestion( game, genre.genre, media )\n\n            const indexes = pickIndexes( nbAnswer + 1, musics.length ).filter( index => index != correctIndex ).slice( 0, nbAnswer - 1 )\n            indexes.push( correctIndex )\n            shuffle( indexes )\n\n            for ( const index of indexes ) {\n                const music = musics[ index ]\n                addAnswer( question, music.artist && music.artist.name ? music.artist.name : '???', music.title || '???', index === correctIndex )\n            }\n\n            break\n        }\n        \n    }\n\n    return game\n}\n\n// //////////////////////////////////////////////////\n// api game\n\nexport async function buildQuestionsFromApi( game: Game ) {\n\n    let requestURL = `${process.env.REACT_APP_API_ROOT_URI}/game/new`\n    requestURL = `${requestURL}?nb_question=${game.settings.nbQuestion}`\n    requestURL = `${requestURL}&nb_answer=${game.settings.nbAnswer}`\n    requestURL = `${requestURL}&nb_player=${game.settings.nbPlayer}`\n    console.log(`[api] requestURL = ${requestURL}`)\n\n    const response = await fetch(requestURL, {method: 'PUT'})\n    if (!response.ok) {\n        const message = `An error has occured while fetching new game: ${response.status} ${response.body}`;\n        throw new Error(message);\n    }\n\n    const jsonResponse = await response.json() as JsonResponse;\n    const jsonGame = jsonResponse.game;\n    \n    for ( const jsonQuestion of jsonGame.questions ) {\n        if ( !jsonQuestion ) {\n            continue\n        }\n        const jsonMusic = jsonQuestion.music\n        const jsonTheme = jsonQuestion.theme\n\n        const artist = jsonMusic.artist ? newArtist( jsonMusic.artist.name, jsonMusic.artist.imgUrl ) : undefined\n        const album = jsonMusic.album ? newAlbum( jsonMusic.album.name, jsonMusic.album.imgUrl ) : undefined\n        const media = newMedia( jsonMusic.name, jsonMusic.mp3Url, artist, album )\n        const question: Question = addQuestion( game, jsonTheme.title, media )\n\n        for ( const jsonAnswer of jsonQuestion.answers ) {\n            addAnswer( question, jsonAnswer.text, jsonAnswer.hint, jsonAnswer.correct )\n        }\n    }\n}\n\nexport interface JsonResponse {\n    success: boolean\n    game: JsonGame\n}\n\nexport interface JsonGame {\n    id: number\n    players: JsonPlayer[]\n    questions: JsonQuestion[]\n}\n\nexport interface JsonPlayer {\n    id: number\n    name: string\n    active: boolean\n}\n\nexport interface JsonQuestion {\n    id: number\n    theme: JsonTheme\n    music: JsonMusic\n    answers: JsonAnswer[]\n}\n\nexport interface JsonTheme {\n    title: string\n}\n\nexport interface JsonMusic {\n    id: number\n    name: string\n    mp3Url: string\n    artist?: JsonArtist\n    album?: JsonAlbum\n}\n\nexport interface JsonArtist {\n    id: number\n    name: string\n    imgUrl: string\n}\n\nexport interface JsonAlbum {\n    id: number\n    name: string\n    imgUrl: string\n}\n\nexport interface JsonAnswer {\n    id: number\n    text: string\n    hint: string\n    correct: boolean\n}","import { customAlphabet } from 'nanoid'\n\nimport { newSettings, Settings, SettingsUpdater } from './Settings'\nimport { Player, PlayerId, PlayerUpdater } from './Player'\nimport { addAnswer, isCorrect, Question, QuestionId, QuestionUpdater } from './Question'\nimport { newArtist } from './Artist'\nimport { newAlbum } from './Album'\nimport { range, toTimeString, toZeroPadString } from './Util'\nimport { Media, newMedia } from './Media'\nimport { GameStats, newGameStats } from './GameStats'\nimport { Card, DefaultCards } from './Card'\nimport { flagAnswerAsCorrect, flagAnswerAsIncorrect, flagQuestionAsError, flagQuestionAsMiss, newPlayerStats } from './PlayerStats'\nimport { ANSWER_ID_SUFFIX, DEBUG, DEFAULT_NB_ANSWER_PER_QUESTION, DEFAULT_NB_PLAYER, DEFAULT_NB_QUESTION, MAX_NB_GAME, PLAYER_ID_SUFFIX, QUESTION_ID_SUFFIX } from './Constants'\nimport { buildDummyQuestions, buildLegacyQuestions, buildTestQuestions, buildQuestionsFromApi } from './Quizz'\nimport { AvatarId } from './Avatar'\n\n// //////////////////////////////////////////////////\n// model\n\nexport const newGameId = customAlphabet( 'ABCDEFGHIJKLMNPQRSTUVWXYZ', 4 )\nexport const newGameCode = customAlphabet( '0123456789', 4 )\n\nexport enum GameStep {\n  SETTINGS = 'SETTINGS',\n  PLAYERS = 'PLAYERS',\n  QUIZZ = 'QUIZZ',\n  SCORES = 'SCORES',\n}\n\nexport type GameId = string\n\nexport interface Game {\n  readonly id: string\n  readonly code: string\n  readonly created: number\n  updated: number\n  step: GameStep\n  settings: Settings\n  players: Player[]\n  questions: Question[]\n  started: boolean\n  questionNumber?: number\n  ended: boolean\n  stats?: GameStats\n}\n\nexport type GameUpdater = ( game: Game ) => Game\nexport type OnGameUpdate = ( gameId: GameId, gameUpdater: GameUpdater ) => void\nexport type OnPlayerUpdate = ( gameId: GameId, playerId: PlayerId, gameUpdater: GameUpdater ) => void\n// export type OnQuestionUpdate = ( gameId: GameId, playerId: PlayerId, gameUpdater: GameUpdater ) => void\n\n// //////////////////////////////////////////////////\n// create\n\nexport function newGame( nbPlayer: number = DEFAULT_NB_PLAYER, nbQuestion: number = DEFAULT_NB_QUESTION, nbAnswer: number = DEFAULT_NB_ANSWER_PER_QUESTION ): Game {\n  return {\n    id: newGameId(),  \n    code: newGameCode(),  \n    created: Date.now(),  \n    updated: Date.now(),\n    step: GameStep.SETTINGS,\n    settings: newSettings( nbPlayer, nbQuestion, nbAnswer ),\n    players: [],\n    questions: [],\n    started: false,\n    ended: false,\n  }\n}\n\n// //////////////////////////////////////////////////\n// add\n\nexport function addPlayer( game: Game, card: Card ): Player {\n  const number = game.players.length + 1\n  const current: Player = {\n    id: PLAYER_ID_SUFFIX + number, \n    number: number,\n    avatarId: number as AvatarId,\n    name: `Player ${toZeroPadString( number, 2 )}`,\n    status: 'active',\n    card: card,\n    stats: newPlayerStats(),\n  }\n  game.players.push( current )\n  console.log( current )\n  return current\n}\n\nexport function addQuestion( game: Game, title: string, media: Media ): Question {\n  const number = game.questions.length + 1\n  const current: Question = {\n    id: ( QUESTION_ID_SUFFIX + number ) * ANSWER_ID_SUFFIX,\n    number: number, \n    status: 'not-played',\n    title: title,\n    media: media,\n    answers: [],\n    playerAnswers: [],\n  }\n  if ( game.questions.length > 0 ) {\n    const previous: Question = game.questions[ game.questions.length - 1 ]\n    previous.nextNumber = current.number\n    current.previousNumber = previous.number\n  }\n  game.questions.push( current )\n  return current\n}\n\n// //////////////////////////////////////////////////\n// update\n\nexport function updateSettings( update: SettingsUpdater ): GameUpdater {\n  return ( game: Game ) => {\n    return {\n      ...game,\n      settings: update( game.settings ),\n    }\n  }\n}\n\nexport function updatePlayer( playerId: PlayerId, update: PlayerUpdater ): GameUpdater {\n  return ( game: Game ) => {\n    if ( !game.players ) {\n      return game\n    }\n    return {\n      ...game,\n      players: game.players.map( player => player.id == playerId ? update( player ) : player ),\n    }\n  }\n}\n\nexport function updateQuestion( questionId: QuestionId, update: QuestionUpdater ): GameUpdater {\n  return ( game: Game ) => {\n    if ( !game.questions ) {\n      return game\n    }\n    return {\n      ...game,\n      questions: game.questions.map( question => question.id == questionId ? update( question ) : question ),\n    }\n  }\n}\n\n// //////////////////////////////////////////////////\n// store\n\nconst GAMES = 'games'\n\nexport function clearGames() {\n  localStorage.removeItem( GAMES )\n}\n\nexport function sortGames( games: Game[] ): Game[] {\n  const sortedGames = [ ...games ].sort( ( left: Game, right: Game ): number => {\n    return right.updated - left.updated\n  } )\n  return sortedGames\n}\n\nexport function sliceGames( games: Game[] ): Game[] {\n  const slicedGames = games.slice( 0, MAX_NB_GAME )\n  return slicedGames\n}\n\nexport function sanitizeGames( games: Game[] ): Game[] {\n  return sliceGames( sortGames( games ) )\n}\n\nexport function storeGames( games: Game[] ): Game[] {\n  const sanitizedGames = games.slice( 0, MAX_NB_GAME )\n  localStorage.setItem( GAMES, JSON.stringify( sanitizedGames ) )\n  return sanitizedGames\n}\n\nexport function loadGames(): Game[] {\n  const games: Game[] = JSON.parse( localStorage.getItem( GAMES ) || '[]' ) || []  \n  return sortGames( games )\n}\n\n// //////////////////////////////////////////////////\n// select\n\nexport function selectGame( games: Game[], gameId: string | undefined ): Game | undefined {\n  if ( !gameId ) {\n    return undefined\n  }\n  const game = gameId ? loadGames().find( g => g.id == gameId ) : undefined\n  console.log(`[select] game #${gameId} : ${ game !== undefined ? 'OK' : 'KO' }`)\n  return game\n}\n\nexport function selectQuestion( game: Game | undefined, questionParam: string | undefined ): Question | undefined {\n  if ( !game || !questionParam ) {\n    return undefined\n  }\n  const questionNumber: number = parseInt( questionParam )\n  const question = game.questions && questionNumber ? game.questions.find( question => question.number == questionNumber ) : undefined\n  console.log(`[select] question #${questionNumber} : ${ question !== undefined ? 'OK' : 'KO' }`)\n  return question\n}\n\n// //////////////////////////////////////////////////\n// state\n\nexport function hasPlayers( game: Game ): boolean {\n  return ( game !== undefined && game.players !== undefined && game.players.length > 0 )\n}\n\nexport function hasQuestions( game: Game ): boolean {\n  return ( game !== undefined && game.questions !== undefined && game.questions.length > 0 )\n}\n\nexport function isSetUp( game: Game ): boolean {\n  return hasPlayers( game ) && hasQuestions( game )\n}\n\nexport function isSettingsPageDisabled( game: Game | undefined ): boolean {\n  return ( game === undefined ) || game.ended || isSetUp( game ) \n}\n\nexport function isPlayersPageDisabled( game: Game | undefined ): boolean {\n  return ( game === undefined ) || game.ended || !isSetUp( game ) \n}\n\nexport function isQuizzPageDisabled( game: Game | undefined ): boolean {\n  return ( game === undefined ) || game.ended || !isSetUp( game ) \n}\n\nexport function isScoresPageDisabled( game: Game | undefined ): boolean {\n  return ( game === undefined ) || !game.started || !isSetUp( game )\n}\n\nexport function OnStep( gameStep: GameStep ): GameUpdater {\n  return ( game: Game ): Game => {\n      console.log( `[on-step] ${game.id} - ${gameStep}` )\n      \n      //\n      // move to new step\n      //\n    \n      game.step = gameStep\n    \n      return game\n  }\n}\n\nexport function onSetUp( game: Game ): Game {\n  console.log( `[on-set-up] ${game.id}` )\n\n  //\n  // build questions ( based on game type )\n  //\n\n  console.log(process.env)\n  console.log(`game type = ${process.env.REACT_APP_GAME_TYPE}`)\n  if ( process.env.REACT_APP_GAME_TYPE == 'dummy' ) {\n    game = buildDummyQuestions( game )\n  } else if ( process.env.REACT_APP_GAME_TYPE == 'test' ) {\n    game = buildTestQuestions( game )\n  } else if ( process.env.REACT_APP_GAME_TYPE == 'legacy' ) {\n    game = buildLegacyQuestions( game )\n  } else if ( process.env.REACT_APP_GAME_TYPE == 'api' ) {\n    buildQuestionsFromApi( game )\n  } else {\n    console.log( `[on-set-up] missing game type >>> FALLBACK to 'legacy'` )\n    game = buildLegacyQuestions( game )\n  }\n\n  //\n  // create default players\n  //\n\n  const nbPlayer = game.settings.nbPlayer\n  range( nbPlayer ).forEach( index => addPlayer( game, DefaultCards[ index % DefaultCards.length ] ) )  \n  \n  //\n  // finally move to players step\n  //\n\n  game.step = GameStep.PLAYERS\n\n  return game\n}\n\nexport function onStartGame( game: Game ): Game {\n  console.log( `[on-start-game] ${game.id}` )\n\n  if ( !game.questions || game.questions.length == 0 ) {\n    return game\n  }\n\n  //\n  // flag game as started\n  //\n\n  game.started = true\n\n  //\n  // select first question\n  //\n\n  game.questionNumber = game.questions[0].number\n\n  //\n  // prepare game stats\n  //\n\n  game.stats = newGameStats( game.settings.nbQuestion ) \n  \n  //\n  // finally move to quizz step\n  //\n\n  game.step = GameStep.QUIZZ\n\n  return game\n}\n\nexport function onAnswers( game: Game, question: Question ): GameUpdater {\n  return ( game: Game ): Game => {\n    console.log( `[on-answers] ${game.id} - ${question.number}` )\n\n    const nbPlayers = game.players.length\n    let nbPoint = nbPlayers\n\n    for ( const playerAnswer of question.playerAnswers ) {\n      const player = game.players.find( player => player.id === playerAnswer.playerId )\n      if ( player ) {\n        const correct = isCorrect( question, playerAnswer )\n        if ( correct ) {\n          flagAnswerAsCorrect( player.stats, question.id, playerAnswer.answerId, nbPoint )\n        } else {\n          flagAnswerAsIncorrect( player.stats, question.id, playerAnswer.answerId, -nbPoint )\n        }\n      }\n      if ( nbPoint > 1 ) {\n        nbPoint--\n      }\n    }\n\n    for ( let player of game.players ) {\n      let miss = true\n      for ( const playerAnswer of question.playerAnswers ) {\n        if ( player.id === playerAnswer.playerId ) {\n          miss = false\n          break\n        }\n      }\n      if ( miss ) {\n        flagQuestionAsMiss( player.stats, question.id )\n      }\n    }\n\n    return game\n  }\n}\n\nexport function onErrorAnswers( game: Game, question: Question ): GameUpdater {\n  return ( game: Game ): Game => {\n    console.log( `[on-question-error] ${game.id} - ${question.number}` )\n\n    for ( const player of game.players ) {\n      flagQuestionAsError( player.stats, question.id )\n    }\n\n    return game\n  }\n}\n\nexport function onQuestionNumber( questionNumber: number ): GameUpdater {\n  return ( game: Game ): Game => {\n    console.log( `[on-question] ${game.id} - ${questionNumber}` )\n\n    if ( !game.questions ) {\n      throw Error( \"missing questions!\" )\n    }\n    const question = game.questions.find( question => question.number === questionNumber )\n    if ( !question ) {\n      throw Error( \"unknwon question!\" )\n    }\n\n    //\n    // update stats\n    //\n\n    if ( game.stats ) {\n      game.stats.nbCompleted++\n      game.stats.progress = Math.ceil( game.stats.nbCompleted * 100 / game.stats.nbQuestion )\n    }\n\n    //\n    // move to next question\n    //\n\n    game.questionNumber = question.number\n\n    return game\n  }\n}\n\nexport function onEndGame( game: Game ): Game {\n  console.log( `[on-end-game] ${game.id}` )\n\n  //\n  // flag game as ended\n  //\n\n  game.ended = true\n  \n  //\n  // finally move to scores step\n  //\n\n  game.step = GameStep.SCORES\n\n  return game\n}\n\n","\n// //////////////////////////////////////////////////\n// model\n\nexport interface GameStats {\n  readonly nbQuestion: number\n  nbCompleted: number\n  progress: number\n}\n\n// //////////////////////////////////////////////////\n// create\n\nexport function newGameStats( nbQuestion: number ): GameStats {\n  return {\n    nbQuestion: nbQuestion,\n    nbCompleted: 0,  \n    progress: 0,\n  }\n}\n","import { Game, GameStep } from './Game'\n\n// //////////////////////////////////////////////////\n// navigate\n\nexport function toHomePage(): string {\n  return `/`\n}\n\nexport function toSettingsPage( game: Game ): string {\n  return `/game/${game.id}/settings`\n}\n\nexport function toPlayersPage( game: Game ): string {\n  return `/game/${game.id}/players`\n}\n\nexport function toQuizzPage( game: Game ): string {\n  if ( !game.questionNumber ) {\n    return `/game/${game.id}/start`    \n  }\n  return `/game/${game.id}/question/${game.questionNumber}`\n}\n\nexport function toScoresPage( game: Game ): string {\n  return `/game/${game.id}/scores`\n}\n\nexport function toGamePage( game: Game | undefined ): string {\n  if ( game ) {\n    switch ( game.step ) {\n      case GameStep.SETTINGS:\n        return toSettingsPage( game )\n      case GameStep.PLAYERS:\n        return toPlayersPage( game )\n      case GameStep.QUIZZ:\n        return toQuizzPage( game )\n      case GameStep.SCORES:\n        return toScoresPage( game )\n    }  \n  }\n  return toHomePage()\n}","import React from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nimport AppBar from '@mui/material/AppBar'\nimport Box from '@mui/material/Box'\nimport Toolbar from '@mui/material/Toolbar'\nimport IconButton from '@mui/material/IconButton'\n\nimport SkipPreviousIcon from '@mui/icons-material/SkipPrevious'\nimport SkipNextIcon from '@mui/icons-material/SkipNext'\nimport MenuIcon from '@mui/icons-material/Menu'\n\nimport { Game, GameStep, OnGameUpdate, OnStep } from '../data/Game'\nimport { isSettingsPageDisabled, isPlayersPageDisabled, isQuizzPageDisabled, isScoresPageDisabled } from '../data/Game'\nimport { toHomePage } from '../data/Navigate'\nimport { onKeyEvent, onUserEvent } from '../data/Util'\nimport {  Group, Home, MilitaryTech, MusicNote, Settings } from '@mui/icons-material'\nimport { ListItemIcon, ListItemText, Menu, MenuItem } from '@mui/material'\nimport { HEADER_KEYBOARD_SHORTCUTS } from '../data/Constants'\n\ninterface Props {\n    title?: string\n    gameStep?: GameStep\n    game?: Game\n    updateGame?: OnGameUpdate\n    onPrevious?: () => void\n    onNext?: () => void\n}\n\nconst Header = ( props: Props ) => {\n    const { title, gameStep, game, updateGame, onPrevious, onNext } = props\n\n    const navigate = useNavigate()\n\n    // title helpers\n\n    const homeTitle = 'Home'\n    const settingsTitle = 'Settings'\n    const playersTitle = 'Players'\n    const quizzTitle = 'Quizz'\n    const scoresTitle = 'Scores'\n\n    // selected helpers\n\n    const isHomeSelected = gameStep === undefined\n    const isSettingsSelected = gameStep == GameStep.SETTINGS\n    const isPlayersSelected = gameStep == GameStep.PLAYERS\n    const isQuizzSelected = gameStep == GameStep.QUIZZ\n    const isScoresSelected = gameStep == GameStep.SCORES\n\n    // disabled helpers\n\n    const isHomeDisabled = false\n    const isSettingsDisabled = isSettingsPageDisabled( game )\n    const isPlayersDisabled = isPlayersPageDisabled( game )\n    const isQuizzDisabled = isQuizzPageDisabled( game )\n    const isScoresDisabled = isScoresPageDisabled( game )\n\n    // update helpers\n\n    const updateGameStep = ( gameStep: GameStep ) => {\n        if ( game && updateGame ) {\n            updateGame( game.id, OnStep( gameStep ) )\n        }\n    }\n\n    // user events\n\n    const onHomePage = !isHomeSelected ? onUserEvent( () => navigate( toHomePage() ) ) : undefined\n    const onSettingsPage = !isSettingsSelected ? onUserEvent( () => updateGameStep( GameStep.SETTINGS ) ) : undefined\n    const onPlayersPage = !isPlayersSelected ? onUserEvent( () => updateGameStep( GameStep.PLAYERS ) ) : undefined\n    const onQuizzPage = !isQuizzSelected ? onUserEvent( () => updateGameStep( GameStep.QUIZZ ) ) : undefined\n    const onScoresPage = !isScoresSelected ? onUserEvent( () => updateGameStep( GameStep.SCORES ) ) : undefined\n\n    // keyboard shortcuts\n\n    if ( HEADER_KEYBOARD_SHORTCUTS ) {\n\n        const handleKeyPress = React.useCallback( onKeyEvent( ( key: string ): boolean => {\n            switch ( key ) {\n                case 'ArrowLeft':\n                    if ( onPrevious ) {\n                        console.log( `header >>> key \"${key}\" >>> onPrevious()`);\n                        onPrevious();\n                        return true;\n                    }\n                    break;\n                case 'ArrowRight':\n                    if ( onNext ) {\n                        console.log( `header >>> key \"${key}\" >>> onNext()`);\n                        onNext();\n                        return true;\n                    }\n                    break;\n            } \n            return false;\n        } ), [ onPrevious, onNext ] );\n        \n        React.useEffect( () => {\n            document.addEventListener( 'keydown', handleKeyPress );\n            return () => {\n                document.removeEventListener( 'keydown', handleKeyPress );\n            };\n        }, [ handleKeyPress ] );\n    }\n\n    // menu \n\n    const [ menuElement, setMenuElement ] = React.useState( null );\n    const open = Boolean( menuElement );\n    const onMenuOpen = ( event: any ) => {\n        setMenuElement( event.currentTarget );\n    };\n    const onMenuClose = () => {\n        setMenuElement( null );\n    };\n\n    // title \n\n    const finalTitle = title ? title : \n                        isHomeSelected ? homeTitle : \n                        isSettingsSelected ? settingsTitle : \n                        isPlayersSelected ? playersTitle : \n                        isQuizzSelected ? quizzTitle : \n                        isScoresSelected ? scoresTitle : ''\n\n    return (\n        <Box className=\"header\" sx={{ flexGrow: 1 }} style={{ marginBottom: '20px' }}>\n            <AppBar position=\"static\" color=\"transparent\">\n                <Toolbar>\n                    <div style={{ width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n\n                        {/* menu */}\n\n                        <div>\n\n                            { game && (\n                                <>\n\n                                    {/* icon */}\n        \n                                    <IconButton\n                                        id=\"menu-button\"\n                                        aria-label=\"menu\"\n                                        aria-controls={ open ? 'basic-menu' : undefined }\n                                        aria-expanded={ open ? 'true' : undefined }\n                                        aria-haspopup=\"true\"\n                                        onClick={onMenuOpen}\n                                    >\n                                        <MenuIcon />\n                                    </IconButton>\n        \n                                    {/* menu items */}\n        \n                                    <Menu\n                                        id=\"basic-menu\"\n                                        anchorEl={menuElement}\n                                        open={open}\n                                        onClose={onMenuClose}\n                                        MenuListProps={{\n                                        'aria-labelledby': 'basic-button',\n                                        }}\n                                    >\n        \n                                        {/* home */}\n        \n                                        <MenuItem selected={isHomeSelected} disabled={isHomeDisabled} onClick={onHomePage}>\n                                            <ListItemIcon>\n                                                <Home fontSize=\"small\" />\n                                            </ListItemIcon>\n                                            <ListItemText>{homeTitle}</ListItemText>\n                                        </MenuItem>\n        \n                                        {/* settings */}\n        \n                                        <MenuItem selected={isSettingsSelected} disabled={isSettingsDisabled} onClick={onSettingsPage}>\n                                            <ListItemIcon>\n                                                <Settings fontSize=\"small\" />\n                                            </ListItemIcon>\n                                            <ListItemText>{settingsTitle}</ListItemText>\n                                        </MenuItem>\n        \n                                        {/* players */}\n        \n                                        <MenuItem selected={isPlayersSelected} disabled={isPlayersDisabled} onClick={onPlayersPage}>\n                                            <ListItemIcon>\n                                                <Group fontSize=\"small\" />\n                                            </ListItemIcon>\n                                            <ListItemText>{playersTitle}</ListItemText>\n                                        </MenuItem>\n        \n                                        {/* quizz */}\n        \n                                        <MenuItem selected={isQuizzSelected} disabled={isQuizzDisabled} onClick={onQuizzPage}>\n                                            <ListItemIcon>\n                                                <MusicNote fontSize=\"small\" />\n                                            </ListItemIcon>\n                                            <ListItemText>{quizzTitle}</ListItemText>\n                                        </MenuItem>\n        \n                                        {/* scores */}\n        \n                                        <MenuItem selected={isScoresSelected} disabled={isScoresDisabled} onClick={onScoresPage}>\n                                            <ListItemIcon>\n                                                <MilitaryTech fontSize=\"small\" />\n                                            </ListItemIcon>\n                                            <ListItemText>{scoresTitle}</ListItemText>\n                                        </MenuItem>\n        \n                                    </Menu>\n                                \n                                </>\n                            ) }\n\n                        </div>\n\n                        {/* title */}\n\n                        <div style={{ fontWeight: 'bold', textTransform: 'uppercase' }}>{finalTitle}</div>\n\n                        {/* Previous & Next */}\n                        \n                        <div>\n\n                            { onPrevious && (\n                                <IconButton \n                                    aria-label=\"Previous\" \n                                    color=\"info\"\n                                    onClick={onPrevious}\n                                >\n                                    <SkipPreviousIcon />\n                                </IconButton>\n                            ) }\n                            \n                            { onNext && (\n                                <IconButton \n                                    aria-label=\"Next\" \n                                    color=\"info\"\n                                    onClick={onNext}\n                                >\n                                    <SkipNextIcon />\n                                </IconButton>\n                            ) }\n\n                        </div>\n\n                    </div>\n\n                </Toolbar>\n            </AppBar>\n        </Box>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport Typography from '@mui/material/Typography';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\n\nimport { Game } from '../data/Game'\n\ninterface Props {\n}\n\nconst Footer = ( props: Props ) => {\n\n    return (\n        <>\n            {/* <Box className=\"footer\" sx={{ marginTop: '20px', flexGrow: 1 }}>\n                <AppBar position=\"static\" color=\"transparent\">\n                    <Toolbar style={{ width: '100%', textAlign: 'center' }}>\n                        <Typography variant=\"caption\" display=\"block\" color=\"GrayText\" gutterBottom>\n                            @mnezic\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n            </Box> */}\n        </>\n    )\n}\n\nexport default Footer","import React from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nimport { Game, GameStep } from '../data/Game'\nimport { toHomePage, toGamePage } from '../data/Navigate'\n\nimport Header from './Header'\nimport Footer from './Footer'\n\ninterface Props {\n    title?: string\n    children: any\n    onNext?: () => void\n}\n\nconst Page = ( props: Props ) => {\n    const { title, children, onNext } = props\n    \n    return (\n        <div className={`page`}>\n            <Header title={title} onNext={onNext}/>\n            {children}\n            <Footer />\n        </div>\n    )\n}\n\nexport default Page","import React from 'react'\n\nimport { makeStyles } from '@mui/styles'\nimport IconButton from '@mui/material/IconButton'\nimport CloseIcon from '@mui/icons-material/Close'\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport MusicNoteIcon from '@mui/icons-material/MusicNote'\nimport CalendarTodayIcon from '@mui/icons-material/CalendarToday'\nimport PersonIcon from '@mui/icons-material/Person'\nimport SkipNextIcon from '@mui/icons-material/SkipNext'\n\nimport { Game } from '../data/Game'\nimport { onUserEvent, toDateTimeString } from '../data/Util'\nimport { Chip, Stack } from '@mui/material';\n\nconst useStyles = makeStyles( () => ( {\n    gameCard: {\n        display: 'flex', \n        flexDirection: 'column', \n        alignItems: 'center', \n        justifyContent: 'space-between',\n        padding: '10px 20px',\n        borderRadius: '10px',\n        border: '2px solid #ddd',        \n        \"&:hover\": {\n            border: '2px solid gold',        \n            backgroundColor: '#ffd70029'\n        }\n    },\n    gameLine: {\n        width: '100%', \n        display: 'flex', \n        alignItems: 'center', \n        justifyContent: 'space-between'\n    },\n    gameItem: {\n        display: 'flex', \n        alignItems: 'center', \n        justifyContent: 'center'\n    },\n} ) );\n\ninterface Props {\n    game?: Game\n    startGame?: () => void\n    resumeGame?: ( game: Game ) => void\n    deleteGame?: ( game: Game ) => void\n}\n\nconst GameCard = ( props: Props ) => {\n    const { game, startGame, resumeGame, deleteGame } = props\n    const classes = useStyles()\n\n    if ( !game ) {\n\n        const onStart = startGame ? onUserEvent( () => startGame() ) : undefined\n\n        return (\n            <div title=\"Start New Game\" className={`${classes.gameCard} selectable`} onClick={onStart}>\n                <div className={classes.gameLine}> \n                    <div className={classes.gameItem}><b>Start New Game</b></div>\n                    <div> </div>\n                </div>\n                <div className={classes.gameLine}> \n                    <div> </div>\n                    <SkipNextIcon style={{ margin: '20px' }} color=\"primary\"/>\n                    <div> </div>\n                </div>\n            </div>\n        )\n    }\n\n    // user events\n\n    const onResume = resumeGame ? onUserEvent( () => resumeGame( game ) ) : undefined\n    const onDelete = deleteGame ? onUserEvent( () => deleteGame( game ) ) : undefined\n\n    const progress = game.ended ? 100 : game.stats ? game.stats.progress : 0\n    const state = game.ended ? 'ended' : game.stats ? `${Math.round(game.stats.progress)}%` : 'not started'\n\n    return (        \n        <div title=\"Resume Game\" className={`${classes.gameCard} selectable`} onClick={onResume}>\n            <div className={classes.gameLine}> \n                <div className={classes.gameItem}><b>Game {game.id}</b></div>\n\n                <div>\n                    <Stack direction=\"row\" spacing={1} style={{ opacity: '0.7' }}>\n                        { game.ended && <Chip label=\"Ended\" color=\"success\" /> }\n                        { !game.ended && game.stats && <Chip label={`${Math.round(game.stats.progress)}%`} color=\"primary\" /> }\n                        { !game.ended && !game.stats && <Chip label=\"Not started\" color=\"warning\" /> }\n                    </Stack>\n                </div>\n\n                <IconButton title=\"Delete Game\" onClick={onDelete}>\n                    <CloseIcon />\n                </IconButton>\n\n            </div>\n            <div style={{ marginLeft: '5%', width: '95%' }}>\n                <div className={classes.gameLine}> \n                    <div className={classes.gameItem}><PersonIcon style={{ marginRight: '10px' }} color=\"primary\"/> {game.settings.nbPlayer} players</div>\n                    <div className={classes.gameItem}><MusicNoteIcon style={{ marginRight: '10px' }} color=\"primary\"/> {game.settings.nbQuestion} questions</div>\n                    <div className={classes.gameItem}><CalendarTodayIcon style={{ marginRight: '10px' }} color=\"primary\"/> {toDateTimeString(game.updated)}</div>                \n                </div>\n                <Box sx={{ width: '100%', display: 'flex', alignItems: 'center', marginTop: '5px' }}>\n                    <Box sx={{ height: '10px', width: '100%', display: 'flex', alignItems: 'center' }}>\n                        <LinearProgress variant=\"determinate\" value={progress} valueBuffer={100}/>\n                    </Box>\n                </Box>\n            </div>\n        </div>\n    )\n}\n\nexport default GameCard","import React from 'react'\n\nimport IconButton from '@mui/material/IconButton';\nimport SkipNextIcon from '@mui/icons-material/SkipNext';\n\nimport { onUserEvent } from '../data/Util'\n\ninterface Props {\n    title?: string\n    onNext: () => void\n}\n\nconst NextButton = ( props: Props ) => {\n    const { title, onNext } = props\n    const description = title && title != '' ? title : 'Next'   \n    \n    // user events\n\n    const onClick = onUserEvent( onNext )\n\n    return (\n        <IconButton color=\"secondary\" title={description} onClick={onClick}>\n            <SkipNextIcon />\n        </IconButton>\n    )\n}\n\nexport default NextButton","import React from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nimport IconButton from '@mui/material/IconButton'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport Grid from '@mui/material/Grid'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\n\nimport { Game, GameId, GameStep, newGame, OnGameUpdate } from '../data/Game'\nimport { toGamePage } from '../data/Navigate'\n\nimport Page from '../component/Page'\nimport GameCard from '../component/GameCard'\nimport NextButton from '../component/NextButton'\nimport { Accordion, AccordionDetails, AccordionSummary } from '@mui/material'\n\ninterface Props {\n    games: Game[]\n    addGame: ( game: Game ) => void\n    updateGame: OnGameUpdate\n    deleteGames: ( gameIds: GameId[] ) => void\n}\n\nconst HomePage = ( props: Props ) => {\n    const { games, addGame, updateGame, deleteGames } = props\n\n    const navigate = useNavigate()\n\n    // update helpers\n\n    const startGame = () => {\n        console.log( `[start-game]` )\n        const game = newGame()\n        addGame( game )\n        navigate( toGamePage( game ) )\n    }\n\n    const resumeGame = ( game: Game ) => {\n        console.log( `[resume-game] ${game.id}` )\n        updateGame( game.id, ( game: Game ) => {\n            game.updated = Date.now()\n            if ( game.ended ) {\n                game.step = GameStep.SCORES    \n            } else if ( game.started ) {                \n                game.step = GameStep.QUIZZ\n            }            \n            return game\n        } )\n        navigate( toGamePage( game ) )\n    }\n\n    const deleteGame = ( game: Game ) => {\n        deleteGames( [ game.id ] )\n    }\n\n    const deleteAllGames = () => {\n        var allGameIds: GameId[] = []\n        for ( const game of games ) {\n            allGameIds.push( game.id )\n        }\n        deleteGames( allGameIds )\n    }\n\n    //\n    // clean old games\n    //\n\n    React.useEffect( () => {\n        var oldGameIds: GameId[] = []\n        for ( const game of games ) {\n            if ( game.ended ) {\n                const delta = Date.now() - game.updated\n                if ( delta > /* 30 days */ 30 * 24 * 60 * 60 * 1000 ) {\n                    oldGameIds.push( game.id )\n                }\n            }\n        }\n        if ( oldGameIds.length > 0 ) {\n            deleteGames( oldGameIds )\n        }\n    }, [] )\n\n    //\n    // sort games\n    //\n\n    const sortedGames = [ ...games ].sort( ( left: Game, right: Game ): number => {\n        return right.updated - left.updated\n    } )\n\n    return (\n        <Page title=\"Amnezic\" onNext={startGame}>\n            \n\n            {/* new game */}\n\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', padding: '200px' }}>\n                <NextButton title=\"New Game\" onNext={startGame}/>\n            </div>\n\n            {/* prevous game */}\n\n            <Accordion>\n                \n                <AccordionSummary expandIcon={<ExpandMoreIcon />} >\n                    Previous games\n                </AccordionSummary>\n                \n                <AccordionDetails>\n                    \n                    <Grid container spacing={2}>\n\n                        {\n                            (\n                                <>\n                                    {sortedGames.map( game => {\n                                        return (\n                                            <Grid key={game.id} item xs={12} textAlign=\"left\">\n                                                <GameCard\n                                                    game={game}\n                                                    resumeGame={resumeGame}\n                                                    deleteGame={deleteGame}\n                                                />\n                                            </Grid>\n                                        )\n                                    })}                        \n                                </>\n                            )\n                        }\n\n                        <Grid item xs={12} textAlign=\"right\">\n\n                            {/* clear previous games */}\n\n                            <IconButton\n                                title=\"Delete all games\" \n                                color=\"default\" \n                                disabled={games.length == 0} \n                                onClick={deleteAllGames}\n                            >\n                                <DeleteIcon />\n                            </IconButton>\n\n                        </Grid>\n\n                    </Grid>\n\n                </AccordionDetails>\n                \n            </Accordion>\n\n        </Page>\n    )\n}\n\nexport default HomePage","import React from 'react'\nimport { AvatarId } from '../data/Avatar'\n\nimport { PlayerId } from '../data/Player'\n\ninterface Props {\n    id: AvatarId\n    size: AvatarSize\n    disabled?: boolean\n    selected?: boolean\n    onClick?: () => void\n}\n\nexport enum AvatarSize {\n    XS = 'XS',\n    S = 'S',\n    M = 'M',\n    L = 'L',\n    XL = 'XL',\n}\n\nconst PlayerAvatar = ( props: Props ) => {\n    const { id, size, disabled, selected, onClick } = props\n\n    let avatarClassNames = `avatar`\n    avatarClassNames = `${avatarClassNames} avatar-${id}`\n    avatarClassNames = `${avatarClassNames} avatar-${size}`    \n    if ( disabled ) {\n        avatarClassNames = `${avatarClassNames} disabled`\n    }\n    if ( selected ) {\n        avatarClassNames = `${avatarClassNames} selected`\n    }\n    if ( onClick ) {\n        avatarClassNames = `${avatarClassNames} selectable`\n    }\n\n    return (\n        <div className={avatarClassNames} onClick={onClick}></div>\n    )\n}\n\nexport default PlayerAvatar\n","import React from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nimport { Game, GameStep } from '../data/Game'\nimport { toHomePage, toGamePage } from '../data/Navigate'\n\nimport Header from './Header'\nimport Footer from './Footer'\nimport { DEBUG } from '../data/Constants'\n\ninterface Props {\n    title?: string\n    gameStep: GameStep\n    game: Game\n    updateGame: ( gameId: string, update: ( game: Game ) => Game ) => void\n    onPrevious?: () => void\n    onNext?: () => void\n    children: any\n}\n\nconst GamePage = ( props: Props ) => {\n    const { title, gameStep, game, updateGame, onPrevious, onNext, children } = props\n\n    const navigate = useNavigate()\n    \n    React.useEffect( () => { \n        if ( game.step !== gameStep ) {\n            console.log(`[effect] INVALID game step! ( current step: ${gameStep}, game step: ${game.step} )>>> NAVIGATE`)\n            navigate( toGamePage( game ), { replace: true } )    \n        }\n    }, [ game ] )\n    \n    return (\n        <>\n            <div className={`page step-${gameStep.toLowerCase()}`}>\n                <Header title={title} gameStep={gameStep} game={game} updateGame={updateGame} onPrevious={onPrevious} onNext={onNext}/>\n                {children}\n                <Footer />\n            </div>\n            {DEBUG && <pre style={{ border: '1px solid #999', background: '#eee', padding: '20px' }}>{JSON.stringify(game,undefined,4)}</pre>}\n        </>\n    )\n}\n\nexport default GamePage","import React from 'react'\nimport { useParams } from 'react-router'\nimport { useNavigate } from 'react-router-dom'\n\nimport MusicNoteIcon from '@mui/icons-material/MusicNote'\nimport PersonIcon from '@mui/icons-material/Person'\nimport QuizIcon from '@mui/icons-material/Quiz'\nimport Button from '@mui/material/Button'\nimport Grid from '@mui/material/Grid'\n\nimport GamePage from '../component/GamePage'\n\nimport { Settings } from '../data/Settings'\nimport { Game, GameStep, OnGameUpdate, selectGame, updateSettings, onSetUp } from '../data/Game'\nimport { toHomePage } from '../data/Navigate'\nimport { onUserEvent } from '../data/Util'\nimport { INCREMENT_NB_ANSWER_PER_QUESTION, INCREMENT_NB_PLAYER, INCREMENT_NB_QUESTION, MAX_NB_ANSWER_PER_QUESTION, MAX_NB_PLAYER, MAX_NB_QUESTION, MIN_NB_ANSWER_PER_QUESTION, MIN_NB_PLAYER, MIN_NB_QUESTION } from '../data/Constants'\n\ninterface Props {\n    games: Game[]\n    updateGame: OnGameUpdate\n}\n\nconst SettingsPage = ( props: Props ) => {\n    const { games, updateGame } = props\n\n    const navigate = useNavigate()\n\n    const { gameId } = useParams()\n    const game = selectGame( games, gameId )\n    \n    React.useEffect( () => { \n        if ( !game ) {\n            console.log(`[effect] MISSING game! >>> NAVIGATE home`)\n            navigate( toHomePage() )    \n        }\n    }, [ game ] )\n\n    if ( !game ) {\n        return null\n    }\n\n    // current state\n\n    const settings = game.settings\n\n    const nbPlayer = settings.nbPlayer\n    const nbPlayerIncrement = INCREMENT_NB_PLAYER\n    const lessPlayerDisabled = nbPlayer <= MIN_NB_PLAYER\n    const morePlayerDisabled = nbPlayer >= MAX_NB_PLAYER\n\n    const nbQuestion = settings.nbQuestion\n    const nbQuestionIncrement = INCREMENT_NB_QUESTION\n    const lessQuestionDisabled = nbQuestion <= MIN_NB_QUESTION\n    const moreQuestionDisabled = nbQuestion >= MAX_NB_QUESTION\n\n    const nbAnswer = settings.nbAnswer\n    const nbAnswerIncrement = INCREMENT_NB_ANSWER_PER_QUESTION\n    const lessAnswerDisabled = nbAnswer <= MIN_NB_ANSWER_PER_QUESTION\n    const moreAnswerDisabled = nbAnswer >= MAX_NB_ANSWER_PER_QUESTION\n\n    // update helpers\n\n    const updateNbPlayer = ( nbPlayer: number ) => {\n        updateGame( game.id, updateSettings( ( settings: Settings ) => {\n            settings.nbPlayer = nbPlayer\n            return settings \n        } ) )\n    }\n\n    const updateNbQuestion = ( nbQuestion: number ) => {\n        updateGame( game.id, updateSettings( ( settings: Settings ) => {\n            settings.nbQuestion = nbQuestion\n            return settings \n        } ) )\n    }\n\n    const updateNbAnswer = ( nbAnswer: number ) => {\n        updateGame( game.id, updateSettings( ( settings: Settings ) => {\n            settings.nbAnswer = nbAnswer\n            return settings \n        } ) )\n    }\n\n    const onNext = () => {\n        updateGame( game.id, onSetUp )\n    }\n\n    // user events )\n\n    const lessPlayer = lessPlayerDisabled ? undefined : onUserEvent( () => updateNbPlayer( game.settings.nbPlayer - nbPlayerIncrement ) )\n    const morePlayer = morePlayerDisabled ? undefined : onUserEvent( () => updateNbPlayer( game.settings.nbPlayer + nbPlayerIncrement ) )\n\n    const lessQuestion = lessQuestionDisabled ? undefined : onUserEvent( () => updateNbQuestion( game.settings.nbQuestion - nbQuestionIncrement ) )\n    const moreQuestion = moreQuestionDisabled ? undefined : onUserEvent( () => updateNbQuestion( game.settings.nbQuestion + nbQuestionIncrement ) )\n\n    const lessAnswer = lessAnswerDisabled ? undefined : onUserEvent( () => updateNbAnswer( game.settings.nbAnswer - nbAnswerIncrement ) )\n    const moreAnswer = moreAnswerDisabled ? undefined : onUserEvent( () => updateNbAnswer( game.settings.nbAnswer + nbAnswerIncrement ) )\n\n    return (\n        <GamePage gameStep={GameStep.SETTINGS} game={game} updateGame={updateGame} onNext={onNext}>\n            \n            <Grid container spacing={2}>\n\n                {/* nb players */}\n\n                <Grid \n                    item xs={4} \n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'right' }}\n                > \n                    <Button \n                        style={{ marginRight: '40px' }} \n                        size=\"small\" \n                        variant=\"contained\" \n                        disabled={lessPlayerDisabled} \n                        onClick={lessPlayer}\n                    >\n                        - {nbPlayerIncrement}\n                    </Button>\n                </Grid>\n\n                <Grid \n                    item xs={4} \n                    textAlign=\"center\" \n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}\n                > \n                    <PersonIcon style={{ marginRight: '10px' }} color=\"primary\"/> \n                    {nbPlayer} {nbPlayer > 1 ? 'players' : 'player'}\n                </Grid>\n\n                <Grid \n                    item xs={4} \n                    textAlign=\"center\" \n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'left' }}\n                > \n                    <Button \n                        style={{ marginLeft: '40px' }} \n                        size=\"small\" \n                        variant=\"contained\" \n                        disabled={morePlayerDisabled} \n                        onClick={morePlayer}\n                    >\n                        + {nbPlayerIncrement}\n                    </Button>\n                </Grid>\n\n                {/* nb questions */}\n\n                <Grid \n                    item xs={4} \n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'right' }}\n                >\n                    <Button \n                        style={{ marginRight: '40px' }} \n                        size=\"small\" \n                        variant=\"contained\" \n                        disabled={lessQuestionDisabled} \n                        onClick={lessQuestion}\n                    >\n                        - {nbQuestionIncrement}\n                    </Button>\n                </Grid>\n                \n                <Grid \n                    item xs={4} \n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}\n                > \n                    <MusicNoteIcon \n                        style={{ marginRight: '10px' }} \n                        color=\"primary\"\n                    /> \n                    {nbQuestion} questions\n                </Grid>\n                \n                <Grid \n                    item xs={4} \n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'left' }}\n                > \n                    <Button \n                        style={{ marginLeft: '40px' }} \n                        size=\"small\" \n                        variant=\"contained\" \n                        disabled={moreQuestionDisabled} \n                        onClick={moreQuestion}\n                    >\n                        + {nbQuestionIncrement}\n                    </Button>\n                </Grid>\n\n                {/* nb answer per question */}\n\n                <Grid \n                    item xs={4} \n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'right' }}\n                >\n                    <Button \n                        style={{ marginRight: '40px' }} \n                        size=\"small\" \n                        variant=\"contained\" \n                        disabled={lessAnswerDisabled} \n                        onClick={lessAnswer}\n                    >\n                        - {nbAnswerIncrement}\n                    </Button>\n                </Grid>\n\n                <Grid \n                    item xs={4} \n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}\n                > \n                    <QuizIcon \n                        style={{ marginRight: '10px' }} \n                        color=\"primary\"\n                    /> \n                    {nbAnswer} answers / question\n                </Grid>\n\n                <Grid \n                    item xs={4} \n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'left' }}\n                > \n                    <Button \n                        style={{ marginLeft: '40px' }} \n                        size=\"small\" \n                        variant=\"contained\" \n                        disabled={moreAnswerDisabled} \n                        onClick={moreAnswer}\n                    >\n                        + {nbAnswerIncrement}\n                    </Button>\n                </Grid>\n\n            </Grid>\n\n        </GamePage>\n    )\n}\n\nexport default SettingsPage","import React from 'react'\nimport { CardColor } from '../../data/Card'\n\ninterface Props {\n    color: CardColor \n    onClick?: () => void \n}\n\nconst ClubIcon = ( props: Props ) => {\n    const { color, onClick } = props\n\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" className={`icon color-${color.toLowerCase()}`} onClick={onClick}>\n            <path d=\"M2 12C2 16 6 17 9 14 8 18 8 18 5 20H15C12 18 12 18 11 14 15 17 18 15 18 12 18 7 14 7 12 9 14 7 15 2 10 2 5 2 6 7 8 9 6 7 2 7 2 12z\"/>\n        </svg>\n    )\n}\n\nexport default ClubIcon\n","import React from 'react'\nimport { CardColor } from '../../data/Card'\n\ninterface Props {\n    color: CardColor  \n    onClick?: () => void \n}\n\nconst DiamondIcon = ( props: Props ) => {\n    const { color, onClick } = props\n\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" className={`icon color-${color.toLowerCase()}`} onClick={onClick}>\n            <path d=\"M10 20C13 15 15 13 19 10 15 7 13 5 10 0 7 5 5 7 1 10 5 13 7 15 10 20z\"/>\n        </svg>\n    )\n}\n\nexport default DiamondIcon\n","import React from 'react'\nimport { CardColor } from '../../data/Card'\n\ninterface Props {\n    color: CardColor  \n    onClick?: () => void \n}\n\nconst CircleIcon = ( props: Props ) => {\n    const { color, onClick } = props\n\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" className={`icon color-${color.toLowerCase()}`} onClick={onClick}>\n            <path d=\"M10 19C15 19 19 15 19 10 19 5 15 1 10 1 5 1 1 5 .991 9.99 1 15 5 19 10 19z\"/>\n        </svg>\n    )\n}\n\nexport default CircleIcon\n","import React from 'react'\nimport { CardColor } from '../../data/Card'\n\ninterface Props {\n    color: CardColor \n    onClick?: () => void \n}\n\nconst HeartIcon = ( props: Props ) => {\n    const { color, onClick } = props\n\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" className={`icon color-${color.toLowerCase()}`} onClick={onClick}>\n            <path d=\"M10 20C13 15 19 12 19 8 19 2 12 0 10 6 8 0 1 2 1 8 1 12 7 15 10 20z\"/>\n        </svg>\n    )\n}\n\nexport default HeartIcon\n","import React from 'react'\nimport { CardColor } from '../../data/Card'\n\ninterface Props {\n    color: CardColor \n    onClick?: () => void \n}\n\nconst SpadeIcon = ( props: Props ) => {\n    const { color, onClick } = props\n\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" className={`icon color-${color.toLowerCase()}`} onClick={onClick}>\n            <path d=\"M2 11C2 15 6 17 9 14 8 18 8 18 5 20H15C12 18 12 18 11 14 14 17 18 15 18 11 18 7 12 7 10.023.039 8 7 2 7 2 11z\"/>\n        </svg>\n    )\n}\n\nexport default SpadeIcon\n","import React from 'react'\nimport { CardColor } from '../../data/Card'\n\ninterface Props {\n    color: CardColor \n    onClick?: () => void \n}\n\nconst SquareIcon = ( props: Props ) => {\n    const { color, onClick } = props\n\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" className={`icon color-${color.toLowerCase()}`} onClick={onClick}>\n            <path d=\"M10 19 19 19 19 1 1 1 1 19z\"/>\n        </svg>\n    )\n}\n\nexport default SquareIcon\n","import React from 'react'\nimport { CardColor } from '../../data/Card'\n\ninterface Props {\n    color: CardColor \n    onClick?: () => void \n}\n\nconst StarIcon = ( props: Props ) => {\n    const { color, onClick } = props\n\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" className={`icon color-${color.toLowerCase()}`} onClick={onClick}>\n            <path d=\"M9.99.991 12.751 7.04 17.992 7.003 13.953 11.399 15.588 18.03 10.027 14.705 4.316 18.011 5.97 11.493 1.931 7.003 7.472 7.022 10.008.991z\"/>\n        </svg>\n    )\n}\n\nexport default StarIcon\n","import React from 'react'\nimport { CardColor } from '../../data/Card'\n\ninterface Props {\n    color: CardColor \n    onClick?: () => void \n}\n\nconst TriangleIcon = ( props: Props ) => {\n    const { color, onClick } = props\n\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" className={`icon color-${color.toLowerCase()}`} onClick={onClick}>\n            <path d=\"M1 19 19 19 10 1 1 19z\"/>\n        </svg>\n    )\n}\n\nexport default TriangleIcon\n","import React from 'react'\nimport { CardColor } from '../../data/Card'\n\ninterface Props {\n    color: CardColor \n    onClick?: () => void \n}\n\nconst CrossIcon = ( props: Props ) => {\n    const { color, onClick } = props\n\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" className={`icon color-${color.toLowerCase()}`} onClick={onClick}>\n            <path d=\"M1 16 4 19 10 13 16 19 19 16 13 10 19 4 16 1 10 7 4 1 1 4 7 10z\"/>\n        </svg>\n    )\n}\n\nexport default CrossIcon\n","import React from 'react'\nimport Typography from '@mui/material/Typography';\n\nimport { Card, CardColor, CardSymbol } from '../data/Card'\nimport ClubIcon from './icon/ClubIcon';\nimport DiamondIcon from './icon/DiamondIcon';\nimport CircleIcon from './icon/CircleIcon';\nimport HeartIcon from './icon/HeartIcon';\nimport SpadeIcon from './icon/SpadeIcon';\nimport SquareIcon from './icon/SquareIcon';\nimport StarIcon from './icon/StarIcon';\nimport TriangleIcon from './icon/TriangleIcon';\nimport CrossIcon from './icon/CrossIcon';\n\ninterface Props {\n    symbol: CardSymbol\n    color: CardColor\n    onClick?: () => void\n}\n\nconst PlayingCardIcon = ( props: Props ) => {\n\n    const { symbol, color, onClick } = props\n\n    switch ( symbol ) {\n        case CardSymbol.CLUB:\n            return <ClubIcon color={color} onClick={onClick} />\n        case CardSymbol.CROSS:\n            return <CrossIcon color={color} onClick={onClick} />\n        case CardSymbol.DIAMOND:\n            return <DiamondIcon color={color} onClick={onClick} />\n        case CardSymbol.CIRCLE:\n            return <CircleIcon color={color} onClick={onClick} />\n        case CardSymbol.HEART:\n            return <HeartIcon color={color} onClick={onClick} />\n        case CardSymbol.SPADE:\n            return <SpadeIcon color={color} onClick={onClick} />\n        case CardSymbol.SQUARE:\n            return <SquareIcon color={color} onClick={onClick} />\n        case CardSymbol.STAR:\n            return <StarIcon color={color} onClick={onClick} />\n        case CardSymbol.TRIANGLE:\n            return <TriangleIcon color={color} onClick={onClick} />\n        default:\n            return null\n    }\n}\n\nexport default PlayingCardIcon","import React from 'react'\n\nimport IconButton from '@mui/material/IconButton';\nimport AddIcon from '@mui/icons-material/Add';\nimport CheckIcon from '@mui/icons-material/Check';\nimport CloseIcon from '@mui/icons-material/Close';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\n\nimport { Card, CardSize } from '../data/Card'\nimport PlayingCardIcon from './PlayingCardIcon';\n\ninterface Props {\n    card?: Card\n    cardSize?: CardSize\n    selected?: boolean\n    disabled?: boolean\n    onClick?: () => void    \n}\n\nconst PlayingCard = ( props: Props ) => {\n    const { card, cardSize, selected, disabled, onClick } = props\n\n    if ( card == undefined ) {\n        return (\n            <div className={`card size-${cardSize} card--empty`} onClick={onClick}>\n                <div className=\"card--header\">\n                    <div className=\"card--symbol\"> </div>                \n                </div>\n                <div className=\"card--content\">\n                    <div className=\"card--value\"> </div>\n                    <div className=\"card--symbol\"> </div>\n                </div>\n                <div className=\"card--footer\">\n                    <div className=\"card--symbol\"> </div>\n                </div>\n            </div>\n        )\n    }\n\n    let cardClassNames = `card`\n    if ( card.size ) {\n        cardClassNames = `${cardClassNames} size-${card.size}`\n    }\n    if ( disabled ) {\n        cardClassNames = `${cardClassNames} disabled`\n    }\n    if ( selected ) {\n        cardClassNames = `${cardClassNames} selected`\n    }\n    if ( onClick ) {\n        cardClassNames = `${cardClassNames} selectable`\n    }\n\n    return (\n        <div className={cardClassNames} onClick={onClick}>\n            <div className=\"card--header\">\n                <div className=\"card--symbol\">\n                    <PlayingCardIcon symbol={card.symbol} color={card.color}/>\n                </div>                \n            </div>\n            <div className=\"card--content\">\n                <div className=\"card--value\">\n                    {card.number ? `${card.number % 10}` : card.value}\n                </div>\n                <div className=\"card--symbol\">\n                    <PlayingCardIcon symbol={card.symbol} color={card.color}/>\n                </div>\n            </div>\n            <div className=\"card--footer\">\n                <div className=\"card--symbol\">\n                    <PlayingCardIcon symbol={card.symbol} color={card.color}/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default PlayingCard","import React from 'react'\n\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport { Card as DataCard, CardColor, CardSize, CardSymbol, DefaultCards } from '../data/Card'\nimport PlayingCardIcon from './PlayingCardIcon';\nimport { Box, Grid, Modal, Typography } from '@mui/material';\nimport PlayingCard from './PlayingCard';\n\ninterface Props {\n    open: boolean\n    closeModal: () => void\n    card: DataCard\n    onSymbolChange: (symbol: CardSymbol) => void\n    onColorChange: (color: CardColor) => void\n    onCardChange: (card: DataCard) => void\n}\n\nconst PlayingCardModal = ( props: Props ) => {\n    const { open, closeModal, card, onSymbolChange, onColorChange, onCardChange } = props\n    \n    const style = {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: 500,\n        bgcolor: 'background.paper',\n        borderRadius: '10px',\n        boxShadow: 24,\n        p: 4,\n    };\n\n    return (\n        <Modal\n            open={open}\n            onClose={closeModal}\n            aria-labelledby=\"modal-modal-title\"\n            aria-describedby=\"modal-modal-description\"\n        > \n            <Box sx={style}>\n                <Grid container spacing={2} style={{ alignItems: 'flex-end' }}>\n                    \n                    <Grid item xs={12} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-end' }}>\n                    \n                        <IconButton aria-label=\"Close\" onClick={closeModal}>\n                            <CloseIcon />\n                        </IconButton>\n\n                    </Grid>\n\n                </Grid>\n\n                <Grid container spacing={2} style={{ alignItems: 'flex-end' }}>\n\n                    <Grid item xs={4} container spacing={2} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n\n                        <Grid item xs={12} textAlign=\"center\">\n                            <Typography>\n                                <b>Colors</b>\n                            </Typography> \n                        </Grid>\n\n                        {\n                            Object.keys(CardColor).filter( key => key as CardColor != CardColor.GRAY ).map( key => { \n                                const newColor = key as CardColor\n                                return (\n                                    <Grid item key={newColor} xs={4}>\n                                        <div \n                                            style={{ width: '75%', display: 'flex', alignItems: 'center', justifyContent: 'center' }} \n                                            className={card.color == newColor ? 'selected' : 'selectable'} \n                                            onClick={() => onColorChange(newColor)}\n                                        >\n                                            <PlayingCardIcon \n                                                symbol={CardSymbol.CIRCLE}\n                                                color={newColor}\n                                            />\n                                        </div> \n                                    </Grid>\n                                )\n                            } )\n                        }\n\n                    </Grid>\n\n                    <Grid item xs={4} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', marginTop: '5px', marginBottom: '10px' }}>\n                    \n                        <PlayingCard card={{\n                                ...card,\n                                size: CardSize.XL,\n                            }} \n                        />\n\n                    </Grid>\n\n                    {/* symbols */}\n                    \n                    <Grid item xs={4} container spacing={2} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}> \n\n                        <Grid item xs={12} textAlign=\"center\">\n                            <Typography>\n                                <b>Symbols</b>\n                            </Typography> \n                        </Grid>\n\n                        {\n                            Object.keys(CardSymbol).map( key => { \n                                const newSymbol = key as CardSymbol\n                                return (\n                                    <Grid key={newSymbol} item xs={4}>\n                                        <div \n                                            style={{ width: '75%', display: 'flex', alignItems: 'center', justifyContent: 'center' }}\n                                            className={card.symbol == newSymbol ? 'selected' : 'selectable'} \n                                            onClick={() => onSymbolChange(newSymbol)}\n                                        >\n                                            <PlayingCardIcon \n                                                symbol={newSymbol}\n                                                color={CardColor.GRAY}\n                                            />\n                                        </div>                                                \n                                    </Grid>\n                                )\n                            } )\n                        }\n\n                    </Grid>\n\n                    {/* symbols */}\n\n                    <Grid item xs={12} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                        <Typography>\n                            <b>Pre-defined</b>\n                        </Typography>                                \n                    </Grid>\n\n                    <Grid item xs={12} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}> \n\n                        {\n                            DefaultCards.map( defaultCard => {\n                                return (\n                                    <PlayingCard card={{\n                                            ...defaultCard,\n                                            number: card.number,\n                                            value: card.value,\n                                            size: CardSize.XS,\n                                        }}\n                                        onClick={() => onCardChange(defaultCard)} \n                                    />\n                                )\n                            } )\n                        }\n\n                    </Grid>\n\n                </Grid>\n            </Box>\n\n        </Modal>\n    )\n}\n\nexport default PlayingCardModal","import { MAX_NB_AVATAR } from \"./Constants\"\nimport { range } from \"./Util\"\n\nexport type AvatarId = number\n\nexport const ALL_AVATAR_IDS = range( MAX_NB_AVATAR ).map( i => i + 1 )","import React from 'react'\n\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport { Box, Grid, Modal, Typography } from '@mui/material';\nimport { ALL_AVATAR_IDS, AvatarId } from '../data/Avatar';\nimport PlayerAvatar, { AvatarSize } from './PlayerAvatar';\n\ninterface Props {\n    open: boolean\n    closeModal: () => void\n    avatarId: AvatarId\n    onAvatarChange: (avatarId: AvatarId) => void\n}\n\nconst AvatarModal = ( props: Props ) => {\n    const { open, closeModal, avatarId, onAvatarChange } = props\n    \n    const style = {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: 500,\n        bgcolor: 'background.paper',\n        borderRadius: '10px',\n        boxShadow: 24,\n        p: 4,\n    };\n\n    return (\n        <Modal\n            open={open}\n            onClose={closeModal}\n            aria-labelledby=\"modal-modal-title\"\n            aria-describedby=\"modal-modal-description\"\n        > \n            <Box sx={style}>\n                <Grid container spacing={2} style={{ alignItems: 'center' }}>\n                    \n                    <Grid item xs={12} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-end' }}>\n                    \n                        <IconButton aria-label=\"Close\" onClick={closeModal}>\n                            <CloseIcon />\n                        </IconButton>\n\n                    </Grid>\n\n                    <Grid item xs={4} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', marginTop: '5px', marginBottom: '10px' }}>\n                    \n                        <PlayerAvatar id={avatarId} size={AvatarSize.XL} />\n\n                    </Grid>\n\n                    {/* symbols */}\n                    \n                    <Grid item xs={8} container spacing={1} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}> \n\n                        <Grid item xs={12} textAlign=\"center\">\n                            <Typography>\n                                <b>Avatars</b>\n                            </Typography> \n                        </Grid>\n\n                        {\n                            ALL_AVATAR_IDS.map( newAvatarId => { \n                                return (\n                                    <Grid key={newAvatarId} item xs={3}>\n                                        <PlayerAvatar \n                                            id={newAvatarId} \n                                            size={AvatarSize.M}\n                                            selected={avatarId == newAvatarId} \n                                            onClick={() => onAvatarChange(newAvatarId)}\n                                        />\n                                    </Grid>\n                                )\n                            } )\n                        }\n\n                    </Grid>\n\n                </Grid>\n            </Box>\n\n        </Modal>\n    )\n}\n\nexport default AvatarModal","import React from 'react'\n\nimport Box from '@mui/material/Box'\nimport Card from '@mui/material/Card'\nimport CardContent from '@mui/material/CardContent'\nimport Grid from '@mui/material/Grid'\nimport TextField from '@mui/material/TextField'\nimport Modal from '@mui/material/Modal'\nimport IconButton from '@mui/material/IconButton'\nimport CloseIcon from '@mui/icons-material/Close'\n\nimport { Game, OnGameUpdate, updatePlayer } from '../data/Game'\nimport { Card as DataCard, CardSymbol, CardColor, CardSize, DefaultCards } from '../data/Card'\nimport { Player } from '../data/Player'\n\nimport PlayingCard from './PlayingCard'\nimport PlayingCardIcon from './PlayingCardIcon'\nimport PlayerAvatar, { AvatarSize } from './PlayerAvatar';\nimport { Typography } from '@mui/material'\nimport PlayingCardModal from './PlayingCardModal'\nimport AvatarModal from './AvatarModal'\nimport { AvatarId } from '../data/Avatar'\n\ninterface Props {\n    player: Player \n    avatarSize?: AvatarSize   \n    cardSize?: CardSize\n    game?: Game\n    updateGame?: OnGameUpdate\n}\n\nconst PlayerCard = ( props: Props ) => {\n    const { player, avatarSize, cardSize, game, updateGame } = props\n\n    const [ name, setName ] = React.useState( player.name )\n    const editMode = game !== undefined && updateGame !== undefined\n    \n    const [ playingCardModal, setPlayingCardModal ] = React.useState( false )\n    const openPlayingCardModal = () => setPlayingCardModal(true)\n    const closePlayingCardModal = () => setPlayingCardModal(false)\n    \n    const [ avatarModal, setAvatarModal ] = React.useState( false )\n    const openAvatarModal = () => setAvatarModal(true)\n    const closeAvatarModal = () => setAvatarModal(false)\n\n    if ( !player.number ) {\n        return null\n    }\n\n    //\n    // update helpers\n    //\n\n    const updatePlayerName = ( name: string ) => {\n        if ( editMode ) {\n            updateGame( game.id, updatePlayer( player.id, ( player: Player ): Player => {\n                player.name = name\n                return player\n            } ) )\n        }\n    }\n\n    const updatePlayerAvatar = ( avatarId: AvatarId ) => {\n        if ( editMode ) {\n            updateGame( game.id, updatePlayer( player.id, ( player: Player ): Player => {\n                player.avatarId = avatarId\n                return player\n            } ) )\n        }\n    }\n    \n    const updatePlayerCard = ( card: DataCard ) => {\n        if ( editMode ) {\n            updateGame( game.id, updatePlayer( player.id, ( player: Player ): Player => {\n                player.card = card\n                return player\n            } ) )\n        }\n    }\n\n    //\n    // user events\n    //\n\n    const onNameChange = ( e: any ) => {\n        setName( e.target.value )\n    }\n\n    const onNameBlur = () => {\n        updatePlayerName( name )\n    }\n\n    const onSymbolChange = (symbol: CardSymbol) => {\n        updatePlayerCard( {\n            ...player.card,\n            symbol: symbol\n        } )\n    }\n\n    const onColorChange = (color: CardColor) => {\n        updatePlayerCard( {\n            ...player.card,\n            color: color\n        } )\n    }\n\n    const onCardChange = (card: DataCard) => {\n        updatePlayerCard( {\n            ...player.card,\n            color: card.color,\n            symbol: card.symbol\n        } )\n    }\n\n    const onAvatarChange = (avatarId: AvatarId) => {\n        updatePlayerAvatar( avatarId )\n    }\n\n    return (\n        <Card variant=\"outlined\">\n            <CardContent>\n\n            <Grid container spacing={2}>\n\n                <Grid item xs={12} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}> \n                    <Box sx={{ display: 'flex', alignItems: 'flex-end' }}>\n                        <PlayerAvatar \n                            id={player.avatarId} \n                            size={avatarSize || AvatarSize.L}\n                            onClick={editMode ? openAvatarModal : undefined}\n                        />\n                        { editMode && <TextField id=\"standard-basic\" style={{ marginLeft: '10px' }} label=\"Name\" variant=\"standard\" value={name} onChange={onNameChange} onBlur={onNameBlur} /> }\n                        { !editMode && (\n                            <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-start', marginLeft: '10px', marginRight: '10px' }}>\n                                <Typography><b>Name:</b> {name}</Typography> \n                                <Typography><b>Score:</b> {player.stats.score}</Typography> \n                            </div>                            \n                        ) }\n                    </Box> \n                    <PlayingCard card={{\n                            ...player.card,\n                            number: player.number,\n                            size: cardSize || CardSize.S,\n                        }} \n                        onClick={editMode ? openPlayingCardModal : undefined} \n                    />                   \n                </Grid>\n\n                { editMode && (\n                    <PlayingCardModal\n                        open={playingCardModal}\n                        closeModal={closePlayingCardModal}\n                        card={{\n                            ...player.card,\n                            value: `${player.number % 10}`,\n                        }}\n                        onSymbolChange={onSymbolChange}\n                        onColorChange={onColorChange}\n                        onCardChange={onCardChange}\n                    />\n                ) }\n\n                { editMode && (\n                    <AvatarModal\n                        open={avatarModal}\n                        closeModal={closeAvatarModal}\n                        avatarId={player.avatarId}\n                        onAvatarChange={onAvatarChange}\n                    />\n                ) }\n\n            </Grid>\n\n            </CardContent>\n        </Card>\n    )\n}\n\nexport default PlayerCard","import React from 'react'\nimport { useParams } from 'react-router'\nimport { useNavigate } from 'react-router-dom'\n\nimport Grid from '@mui/material/Grid'\n\nimport GamePage from '../component/GamePage'\nimport PlayerCard from '../component/PlayerCard'\n\nimport { Game, GameStep, OnGameUpdate, selectGame, OnStep } from '../data/Game'\nimport { toHomePage } from '../data/Navigate'\n\ninterface Props {\n    games: Game[]\n    updateGame: OnGameUpdate\n}\n\nconst PlayersPage = ( props: Props ) => {\n    const { games, updateGame } = props\n\n    const navigate = useNavigate()\n\n    const { gameId } = useParams()\n    const game = selectGame( games, gameId )\n    \n    React.useEffect( () => { \n        if ( !game ) {\n            console.log(`[effect] MISSING game! >>> NAVIGATE home`)\n            navigate( toHomePage() )    \n        }\n    }, [ game ] )\n    \n    if ( !game || !game.players ) {\n        return null\n    }\n    \n    // update helpers\n\n    const onNext = () => {    \n        updateGame( game.id, OnStep( GameStep.QUIZZ ) )\n    }\n\n    return (\n        <GamePage gameStep={GameStep.PLAYERS} game={game} updateGame={updateGame} onNext={onNext}>\n\n            <Grid container spacing={2}>\n\n                {\n                    (\n                        <>\n                            {game.players.map( player => {\n                                return (\n                                    <Grid key={player.id} item xs={6} textAlign=\"left\">\n                                        <PlayerCard\n                                            game={game}\n                                            player={player}\n                                            updateGame={updateGame}\n                                        />\n                                    </Grid>\n                                )\n                            })}                        \n                        </>\n                    )\n                }\n\n            </Grid>\n\n        </GamePage>\n    )\n}\n\nexport default PlayersPage","import React from 'react'\nimport { useParams } from 'react-router'\nimport { useNavigate } from 'react-router-dom'\n\nimport GamePage from '../component/GamePage'\n\nimport { Game, GameStep, OnGameUpdate, onStartGame, selectGame } from '../data/Game'\nimport { toHomePage, toGamePage } from '../data/Navigate'\nimport NextButton from '../component/NextButton'\n\ninterface Props {\n    games: Game[]\n    updateGame: OnGameUpdate\n}\n\nconst StartPage = ( props: Props ) => {\n    const { games, updateGame } = props\n\n    const navigate = useNavigate() \n    \n    const { gameId } = useParams()\n    const game = selectGame( games, gameId )\n    \n    React.useEffect( () => { \n        if ( !game ) {\n            console.log(`[effect] MISSING game! >>> NAVIGATE home`)\n            navigate( toHomePage() )    \n        } else if ( game.questionNumber ) {\n            console.log(`[effect] NAVIGATE to question #${game.questionNumber}`)\n            navigate( toGamePage( game ) )    \n        }\n    }, [ game ] ) \n    \n    if ( !game ) {\n        return null\n    }   \n\n    const onNext = () => {\n        updateGame( game.id, onStartGame )\n    }\n\n    return (\n        <GamePage gameStep={GameStep.QUIZZ} game={game} updateGame={updateGame} onNext={onNext}>\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', padding: '200px' }}>\n                <NextButton title=\"Start Game\" onNext={onNext}/>\n            </div>\n        </GamePage>                \n    )\n}\n\nexport default StartPage","import React from 'react'\n\nimport Box from '@mui/material/Box'\nimport Card from '@mui/material/Card'\nimport CardContent from '@mui/material/CardContent'\n\nimport { CardMedia, Typography } from '@mui/material'\nimport { Media } from '../data/Media'\nimport musicBackground from '../static/music.png'\n\ninterface Props {\n    media: Media\n}\n\nconst MediaCard = ( props: Props ) => {\n    const { media } = props\n\n    if ( !media ) {\n        return null\n    }\n\n    const mediaImage = media.artist && media.artist.picture ? media.artist.picture : media.album && media.album.picture ? media.album.picture : musicBackground\n    const artistName = media.artist && media.artist.name ? media.artist.name : '-'\n    const albumName = media.album && media.album.title ? media.album.title : '-'\n\n    return (\n        <Card variant=\"outlined\">\n            <CardContent>\n\n                <Typography variant=\"h5\" color=\"text.primary\" component=\"div\" style={{ margin: '5px 10px' }}>\n                    {media.title}\n                </Typography>\n\n                <Box sx={{ display: 'flex', alignItems: 'center', pl: 1, pb: 1 }}>\n\n                    <CardMedia\n                        component=\"img\"\n                        sx={{ width: 56, height: 56, margin: '5px 10px' }}\n                        image={mediaImage}\n                    />\n\n                    <div style={{ display: 'flex', flexDirection: 'column', marginRight: '10px' }}>\n                        \n                        <Typography variant=\"subtitle1\" color=\"text.secondary\" component=\"div\">\n                            Artist\n                        </Typography>\n                        \n                        <Typography variant=\"subtitle1\" color=\"text.secondary\" component=\"div\">\n                            Album\n                        </Typography>\n\n                    </div>\n\n                    <div style={{ display: 'flex', flexDirection: 'column', marginRight: '10px' }}>\n                        \n                        <Typography variant=\"subtitle1\" color=\"text.primary\" component=\"div\">\n                            {artistName}\n                        </Typography>\n\n                        <Typography variant=\"subtitle1\" color=\"text.primary\" component=\"div\">\n                            {albumName}\n                        </Typography>\n\n                    </div>\n\n                </Box>\n\n            </CardContent>\n        </Card>\n    )\n}\n\nexport default MediaCard","import React from 'react'\n\nimport IconButton from '@mui/material/IconButton'\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow'\nimport PauseIcon from '@mui/icons-material/Pause'\n\nimport { Game, OnGameUpdate } from '../data/Game'\nimport { Question, OnQuestionUpdate, QuestionId } from '../data/Question'\nimport { onKeyEvent, onUserEvent } from '../data/Util'\nimport { Box, CircularProgress, Tooltip, Typography } from '@mui/material'\nimport { withStyles } from '@mui/styles'\nimport MediaCard from './MediaCard'\nimport { Media } from '../data/Media'\nimport musicBackground from '../static/music.png'\nimport { MUSIC_PLAYER_KEYBOARD_SHORTCUTS } from '../data/Constants'\n\n\ninterface Props {\n    questionId: QuestionId\n    media: Media\n    failed: boolean\n    loading: boolean\n    info?: any\n    started: boolean\n    playing: boolean\n    progress: number\n    played: boolean\n    onMusicLoaded: ( nbSeconds:number ) => void\n    onMusicPlaying: () => void\n    onMusicPaused: () => void\n    onMusicEnded: () => void\n}\n\nconst MusicPlayer = ( props: Props ) => {\n    const { questionId, media, loading, info, started, playing, progress, played, onMusicLoaded, onMusicPlaying, onMusicPaused, onMusicEnded } = props\n\n    if ( !questionId && !media ) {\n        return null\n    }\n        \n    const audioRef = React.useRef<HTMLAudioElement>( new Audio( media.music ) )\n\n    // const [ loading, setLoading ] = React.useState( true )\n    // const [ isPlaying, setIsPlaying ] = React.useState( false )\n    // const [ duration, setDuration ] = React.useState( 0 )\n    // const [ currentTime, setCurrentTime ] = React.useState( 0 )\n\n    // let currentPercentage = 0\n    // if ( played ) {\n    //     currentPercentage = 100\n    // } else if ( duration ) {\n    //     currentPercentage = Math.ceil( ( currentTime / duration ) * 100 )\n    // }\n\n    //\n    // music helpers\n    //\n\n    const reset = () => {\n        console.log( 'reset' )\n        // setMusicIsReady( false )\n        // setIsPlaying( false )\n        // setDuration( 0 )\n        // setCurrentTime( 0 )\n    }\n\n    const musicReady = () => {\n        console.log( `musicReady >>> setLoading( false ) + onMusicLoaded( ${audioRef.current.duration} )` )\n        // setMusicIsReady( true )\n        // setLoading( false )\n        onMusicLoaded( audioRef.current.duration )\n    }   \n\n    const playMusic = () => {  \n        if ( started && !playing && !played ) {\n            console.log( `playMusic >>> !playing >>> onMusicPlaying()` )\n            onMusicPlaying()\n        }\n    }\n\n    const pauseMusic = () => {     \n        if ( started && playing && !played ) {\n            console.log( `pauseMusic >>> playing >>> onMusicPaused()` )\n            onMusicPaused()\n        }\n    }\n    \n    const toggleMusic = () => {           \n        if ( started && !played ) {\n            if ( playing ) {\n                console.log( `toggleMusic >>> playing >>> onMusicPaused()` )\n                onMusicPaused()\n            } else {\n                console.log( `toggleMusic >>> not playing >>> onMusicPlaying()` )\n                onMusicPlaying()\n            }\n        } else {\n            console.log( `toggleMusic >>> not started or already played >>> No-Op` )\n        }\n    }\n\n    React.useEffect( () => {\n        if ( audioRef.current ) {\n            if ( playing ) {\n                console.log( `playing >>> audio.play()` )\n                audioRef.current.play()\n            } else {\n                console.log( `!playing >>> audio.pause()` )\n                audioRef.current.pause()\n            }\n        }\n    }, [ playing ] ); \n\n    const lessVolume = () => {\n        console.log( `lessVolume` ) \n        if ( audioRef.current ) {\n            audioRef.current.volume = Math.max( 0.1, audioRef.current.volume - 0.1 )\n        } \n    }\n\n    const moreVolume = () => {\n        console.log( `moreVolume` )  \n        if ( audioRef.current ) {\n            audioRef.current.volume = Math.min( 1.0, audioRef.current.volume + 0.1 )\n        }\n    }\n\n    const musicEnded = () => {\n        console.log( 'musicEnded >>> onMusicEnded()' )\n        onMusicEnded()\n    }\n\n    //\n    // audio events\n    //\n\n    React.useEffect( () => {\n        \n        if ( audioRef.current ) {\n            console.log(\"pause current music...\")\n            audioRef.current.pause();\n        }\n    \n        if ( !played ) {\n\n            if ( audioRef.current.src != media.music ) {\n                console.log(\"new music...\")\n                audioRef.current = new Audio( media.music )\n                audioRef.current.loop = false\n                audioRef.current.volume = 1.0\n                reset()\n            }\n        \n            const onAudioLoad = () => {\n                console.log( `onAudioLoad >>> setCurrentTime( ${audioRef.current.currentTime} ) + setDuration( ${audioRef.current.duration} )` )\n                // setCurrentTime( audioRef.current.currentTime )\n                // setDuration( audioRef.current.duration )\n            }\n            const onAudioReady = () => {            \n                console.log( 'onAudioReady >>> musicReady' )\n                musicReady()\n            }\n            // const onAudioUpdate = () => {  \n            //     // console.log( `onAudioUpdate >>> setCurrentTime( ${audio.currentTime} )` )\n            //     // setCurrentTime( audioRef.current.currentTime )\n            // }\n            const onAudioEnd = () => {\n                console.log( 'onAudioEnd >>> musicEnded()' )\n                musicEnded()\n            }\n        \n            // listeners\n\n            console.log(\"add listener...\")\n            audioRef.current.addEventListener( 'loadeddata', onAudioLoad )    \n            audioRef.current.addEventListener( 'canplaythrough', onAudioReady )\n            // audioRef.current.addEventListener( 'timeupdate', onAudioUpdate )\n            audioRef.current.addEventListener( 'ended', onAudioEnd )\n\n            // effect cleanup\n            return () => {\n                console.log(\"remove listener...\")\n                audioRef.current.removeEventListener( 'loadeddata', onAudioLoad )    \n                audioRef.current.removeEventListener( 'canplaythrough', onAudioReady )\n                // audioRef.current.removeEventListener( 'timeupdate', onAudioUpdate )\n                audioRef.current.removeEventListener( 'ended', onAudioEnd )\n                reset()\n            }\n        }\n\n        return reset\n\n    }, [ played, questionId ] ); \n\n    const loadingMusic = !played && !started && loading\n    // const musicReady = !played && !started && !loading\n    // const countingDown = !played && musicIsReady && ( seconds > 0 )\n    const playingMusic = !played && started && playing\n    const pausingMusic = !played && started && !playing\n\n    const onPause = playingMusic ? onUserEvent( () => pauseMusic() ) : undefined\n    const onPlay = pausingMusic ? onUserEvent( () => playMusic() ) : undefined\n\n    //\n    // keyboard shortcuts\n    // \n\n    if ( MUSIC_PLAYER_KEYBOARD_SHORTCUTS ) {\n\n        const handleKeyPress = React.useCallback( onKeyEvent( ( key: string ): boolean => {\n            switch ( key ) {\n                case ' ':\n                    console.log( `music-player >>> key \"${key}\" >>> toggleMusic()`);\n                    toggleMusic();\n                    return true;\n                case 'ArrowUp':\n                    console.log( `music-player >>> key \"${key}\" >>> moreVolume()`);\n                    moreVolume();\n                    return true;\n                case 'ArrowDown':\n                    console.log( `music-player >>> key \"${key}\" >>> lessVolume()`);\n                    lessVolume();\n                    return true;\n            } \n            return false;\n        } ), [ toggleMusic, moreVolume, lessVolume ] );\n\n        React.useEffect( () => {\n            document.addEventListener( 'keydown', handleKeyPress );\n            return () => {\n                document.removeEventListener( 'keydown', handleKeyPress );\n            };\n        }, [ handleKeyPress ] ); \n\n    }  \n\n    //\n    // tooltip\n    //\n\n    const LightTooltip = withStyles( theme => ( {\n        tooltip: {\n            backgroundColor: 'transparent',\n            color: \"rgba(0, 0, 0, 0.87)\",\n            fontSize: 11\n        },\n        arrow: {\n            color: \"white\"\n        }\n    } ) ) ( Tooltip );\n\n    // console.log( `[render] music player: ready=${musicIsReady}, seconds=${seconds}/${delay}, played=${played}` )\n    \n    const icon = started && pausingMusic ? (\n        <Typography variant=\"caption\" component=\"div\" color=\"text.secondary\">\n            <IconButton aria-label=\"play\" onClick={onPlay}>\n                <PlayArrowIcon sx={{ height: 38, width: 38 }}/>\n            </IconButton> \n        </Typography>\n    ) : undefined\n    \n    const onClick = started && playingMusic ? onPause : undefined\n\n    return (\n        <LightTooltip title={played ? <MediaCard media={media} /> : false} >\n            <div \n                style={{ \n                    width: '56px', \n                    height: '56px', \n                    cursor: played ? 'help' : 'auto', \n                    marginRight: '10px', \n                    border: played ? '1px solid #777' : 'none',\n                    borderRadius: '28px', \n                    backgroundColor: played ? 'transparent' : '#eee',\n                    background: played ? media.album ? `url(${media.album.picture})` : `url(${musicBackground})` : 'none', \n                    backgroundSize: '56px 56px' \n                }}\n            >                \n\n                <Box \n                    sx={{ \n                        width: '56px', \n                        height: '56px',\n                        position: 'relative', \n                        display: 'inline-flex', \n                        alignItems: 'center', \n                        justifyContent: 'center',\n                        cursor: onClick ? 'pointer' : 'auto',                        \n                    }} \n                    onClick={onClick}\n                >\n                    \n                    {/* progress */}\n\n                    { !played && loading && <CircularProgress variant=\"indeterminate\"/> }                    \n                    { !played && !loading && started && <CircularProgress size={56} variant=\"determinate\" value={progress} onClick={onClick}/> }\n                    \n                    {/* button or info */}\n\n                    <Box\n                        sx={{\n                            top: 0,\n                            left: 0,\n                            bottom: 0,\n                            right: 0,\n                            position: 'absolute',\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                        }}\n                        onClick={onClick}\n                    >\n                        { icon ? icon : info }\n                    </Box>                    \n\n                </Box>\n\n            </div>\n        </LightTooltip>\n    )\n}\n\nexport default MusicPlayer","import React from 'react'\n\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Box from '@mui/material/Box'\nimport Card from '@mui/material/Card'\nimport Paper from '@mui/material/Paper'\nimport CardMedia from '@mui/material/CardMedia'\nimport IconButton from '@mui/material/IconButton'\nimport Typography from '@mui/material/Typography'\nimport SkipPreviousIcon from '@mui/icons-material/SkipPrevious'\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow'\nimport PauseIcon from '@mui/icons-material/Pause'\nimport SkipNextIcon from '@mui/icons-material/SkipNext'\nimport Slide from '@mui/material/Slide';\n\nimport { Game, onAnswers, onErrorAnswers, OnGameUpdate, onQuestionNumber } from '../data/Game'\nimport { Player, PlayerId } from '../data/Player'\nimport { Question, OnQuestionUpdate, onQuestionPlayed, onQuestionCompleted, addPlayerAnswer, removePlayerAnswer, hasPlayerAnswer, onQuestionError } from '../data/Question'\nimport { range, onUserEvent } from '../data/Util'\nimport { Alert, Avatar, Badge, Fade, Grow, Tooltip } from '@mui/material'\nimport PlayingCard from './PlayingCard'\nimport { CardSize } from '../data/Card'\nimport { Answer, AnswerId } from '../data/Answer'\nimport PlayerAvatar, { AvatarSize } from './PlayerAvatar'\nimport { getQuestionAnswerStats, getQuestionStats } from '../data/PlayerStats'\nimport PlayerCard from './PlayerCard'\nimport { withStyles } from '@mui/styles'\nimport MediaCard from './MediaCard'\nimport MusicPlayer from './MusicPlayer'\nimport { DEBUG, MAX_NB_SECONDS_LOADING, MAX_NB_SECONDS_PLAYING, ONE_SECOND } from '../data/Constants'\n\ninterface Props {\n    game: Game\n    question: Question\n    updateGame: OnGameUpdate\n    updateQuestion: OnQuestionUpdate    \n    onNext: () => void\n}\n\nconst QuestionCard = ( props: Props ) => {\n    const { game, question, updateGame, updateQuestion, onNext } = props\n\n    const [ questionId, setQuestionId ] = React.useState( question.id )\n    const [ musicLoading, setMusicLoading ] = React.useState( true )\n    const [ nbSecondsTotal, setNbSecondsTotal ] = React.useState( 0 )\n    const [ nbShownAnswers, setNbShownAnswers ] = React.useState( 0 )\n    const [ musicReady, setMusicReady ] = React.useState( false )\n    const [ countDown, setCountDown ] = React.useState( 3 )\n    const [ musicStarted, setMusicStarted ] = React.useState( false )\n    const [ musicPlaying, setMusicPlaying ] = React.useState( false )\n    const [ nbSecondsPlayed, setNbSecondsPlayed ] = React.useState( 0 )\n    const [ musicEnded, setMusicEnded ] = React.useState( false )\n\n    if ( !game || !question ) {\n        return null\n    }\n\n    React.useEffect( () => {\n        if ( questionId != question.id ) {\n            console.log( `new question >>> setQuestionId( ${question.id} ) + reset()` ) \n            setQuestionId( question.id )\n            reset()\n        }\n    }, [ questionId, question.id ] );\n        \n    const musicError = question.status == 'error'\n    const musicPlayed = musicEnded || question.status == 'played' || question.status == 'completed'\n\n    //\n    // update helpers\n    //\n\n    const hasAnswer = ( playerId: PlayerId, answerId: AnswerId ): boolean => {\n        return hasPlayerAnswer( question, playerId, answerId )\n    }\n\n    const addAnswer = ( playerId: PlayerId, answerId: AnswerId ) => {\n        updateQuestion( game.id, question.id, ( question: Question ) => addPlayerAnswer( question, playerId, answerId ) )    \n    }\n\n    const removeAnswer = ( playerId: PlayerId, answerId: AnswerId ) => {\n        updateQuestion( game.id, question.id, ( question: Question ) => removePlayerAnswer( question, playerId, answerId ) )        \n    }\n\n    const flagQuestionAsFailed = () => {\n        updateQuestion( game.id, question.id, ( question: Question ) => onQuestionError( question ) )  \n        updateGame( game.id, onErrorAnswers( game, question ) )     \n    }\n\n    //\n    // sort players by score\n    //\n     \n    const sortedPlayers = [ ...game.players ].sort( ( left: Player, right: Player ): number => {\n        return right.stats.score - left.stats.score\n    } )\n\n    //\n    // badge\n    //\n\n    const badgeValue = ( value: number | undefined ): string | undefined => {\n        if ( value ) {\n            if ( value === 0 ) {\n                return `-`\n            } else if ( value > 0 ) {\n                return `+${value}`\n            } else {\n                return `${value}`\n            }\n        }\n        return undefined\n    }\n\n    const badgeColor = ( value: number | undefined ): 'info' | 'success' | 'warning' | undefined => {\n        if ( value ) {\n            if ( value === 0 ) {\n                return `info`\n            } else if ( value > 0 ) {\n                return `success`\n            } else {\n                return `warning`\n            }\n        }\n        return undefined\n    }\n\n    const LightTooltip = withStyles( theme => ( {\n        tooltip: {\n            backgroundColor: 'transparent', // theme.palette.common.white,\n            color: \"rgba(0, 0, 0, 0.87)\",\n            // boxShadow: theme.shadows[1],\n            fontSize: 11\n        },\n        arrow: {\n            color: \"white\"\n        }\n    } ) ) ( Tooltip );\n\n    //\n    // events\n    //\n\n    const reset = () => {\n        setMusicLoading( true )\n        setNbSecondsTotal( 0 )\n        setNbShownAnswers( 0 )\n        setMusicReady( false )\n        setCountDown( 3 )\n        setMusicStarted( false )\n        setMusicPlaying( false )\n        setNbSecondsPlayed( 0 )\n        setMusicEnded( false )\n    }\n\n    const resetOnError = () => {\n        setMusicLoading( false )\n        setNbShownAnswers( 0 )\n    }\n\n    const resetOnPlayed = () => {\n        setNbShownAnswers( question.answers.length )\n    }\n\n    const onMusicLoaded = ( nbSeconds: number ) => {\n        console.log( `onMusicLoaded >>> setMusicLoading( false ) + setNbSeconds( Math.min( ${nbSeconds}, ${MAX_NB_SECONDS_PLAYING} ) )` ) \n        setMusicLoading( false )\n        setNbSecondsTotal( Math.min( Math.ceil( nbSeconds ), MAX_NB_SECONDS_PLAYING ) )\n        setMusicStarted( false )\n        setMusicPlaying( false )\n        setNbSecondsPlayed( 0 )\n        setMusicEnded( false )\n    }\n\n    const onMusicFailed = () => {\n        console.log( `onMusicFailed >>> flagQuestionAsFailed() + setMusicLoading( false )` )\n        setMusicLoading( false )\n        flagQuestionAsFailed()\n    }\n\n    const onMusicPlaying = () => {\n        if ( musicStarted && !musicPlayed ) {\n            console.log( 'onMusicPlaying >>> setMusicPlaying( true )' ) \n            setMusicPlaying( true )\n        } else {\n            console.log( `onMusicPlaying >>> WRONG state! ( musicStarted: ${musicStarted}, musicPlayed: ${musicPlayed} )` ) \n        }\n    }\n\n    const onMusicPaused = () => {\n        if ( musicStarted && !musicPlayed ) {\n            console.log( 'onMusicPaused >>> setMusicPlaying( false )' ) \n            setMusicPlaying( false )\n        } else {\n            console.log( `onMusicPaused >>> WRONG state! ( musicStarted: ${musicStarted}, musicPlayed: ${musicPlayed} )` ) \n        }\n    }\n\n    const onMusicEnded = () => {\n        console.log( 'onMusicEnded >>> onNext() + reset()' )\n        onNext()        \n        reset() \n    }\n\n    const showNextAnswer = () => {        \n        if ( nbShownAnswers == question.answers.length ) {\n            console.log( 'showNextAnswer >>> setMusicReady( true )' ) \n            setMusicReady( true )\n        } else {            \n            // console.log( `showNextAnswer >>> ${nbShownAnswers} + 1` ) \n            setNbShownAnswers( nbShownAnswers + 1 )\n        }\n    }\n\n    const showCountDown = () => {\n        if ( countDown > 1 ) {\n            // console.log( `showCountDown >>> ${countDown} - 1` ) \n            setCountDown( countDown - 1 )\n        } else {\n            console.log( 'showCountDown >>> setMusicStarted( true ) + setMusicPlaying( true )' ) \n            setCountDown( 0 )\n            setMusicStarted( true )\n            setMusicPlaying( true )\n        }\n    }\n\n    const showNbSecondsPlayed = () => {\n        if ( nbSecondsPlayed < nbSecondsTotal ) {\n            // console.log( `showNbSecondsPlayed >>> ${nbSecondsPlayed} + 1` ) \n            setNbSecondsPlayed( nbSecondsPlayed + 1 )\n        } else {\n            console.log( 'showCountDown >>> pauseMusic()' ) \n            setMusicPlaying( false )\n            setMusicEnded( true )\n            onMusicEnded()\n        }\n    }\n\n    React.useEffect( () => {\n        let timerId: any = undefined;\n        if ( musicError ) {\n            resetOnError()\n            clearInterval( timerId );\n            timerId = undefined;\n        } else if ( musicPlayed ) {\n            resetOnPlayed()\n            clearInterval( timerId );\n            timerId = undefined;\n        } else if ( musicLoading ) {\n            // console.log( 'timer >>> musicLoading >>> showMusicLoading' ) \n            timerId = setInterval( onMusicFailed, ONE_SECOND * MAX_NB_SECONDS_LOADING );\n        } else if ( !musicReady ) {\n            // console.log( 'timer >>> !musicReady >>> showNextAnswer' ) \n            timerId = setInterval( showNextAnswer, ONE_SECOND );\n        } else if ( !musicStarted ) {\n            // console.log( 'timer >>> !musicStarted >>> showCountDown' ) \n            timerId = setInterval( showCountDown, ONE_SECOND );\n        } else if ( musicPlaying ) {\n            // console.log( 'timer >>> musicPlaying >>> showNbSecondsPlayed' ) \n            timerId = setInterval( showNbSecondsPlayed, ONE_SECOND );\n        } else {\n            resetOnPlayed()\n            console.log( 'timer >>> ??? >>> STOP' ) \n            clearInterval( timerId );\n            timerId = undefined;\n        }                \n        return () => {\n            timerId && clearInterval( timerId );\n        }\n    }, [ musicLoading, musicError, countDown, nbShownAnswers, musicReady, musicStarted, musicPlaying, nbSecondsPlayed, musicPlayed ] );\n\n    const progress = musicPlayed ? 100 : !musicStarted ? 0 : Math.ceil( Math.min( nbSecondsPlayed, nbSecondsTotal ) * 100 / nbSecondsTotal )\n    const musicPaused = !musicPlayed && musicStarted && !musicPlaying\n    const showHints = progress > 50\n    const countingDown = musicReady && !musicStarted\n\n    let musicPlayerInfo = undefined\n    if ( musicError ) {\n        musicPlayerInfo = (\n            <Typography sx={{ fontSize: 40, fontWeight: 'bold', color: 'red' }}>\n                X\n            </Typography>\n        )\n    } else if ( musicLoading || !musicReady || musicPlayed ) {\n        musicPlayerInfo = undefined\n    } else if ( !musicStarted ) {\n        musicPlayerInfo = (\n            <Typography sx={{ fontSize: 40, fontWeight: 'bold', color: 'gray' }}>\n                {countDown}\n            </Typography>\n        )\n    } else {\n        musicPlayerInfo = (\n            <Typography sx={{ fontSize: 20, fontWeight: 'bold', color: 'black' }}>\n                {nbSecondsTotal-nbSecondsPlayed}s\n            </Typography>\n        )\n    }\n\n    return (\n        <>  \n\n            {/* warning: music failed */}\n\n            {musicError && (\n                <Alert \n                    severity=\"warning\" \n                    style={{ \n                        position: 'absolute',\n                        width: '500px',\n                        top: '25%',\n                        left: 'calc( 50% - 250px )',\n                        boxShadow: '3px 3px 3px rgb(0,0,0,0.1)',\n                        borderRadius: '10px',\n                    }}\n                >\n                    Could not load music! Please proceed to next question.\n                </Alert>\n            )}\n\n            {/* answers */}\n\n            {\n                question.answers.map( ( answer, index ) => {\n\n                    const shown = index < nbShownAnswers\n                    const hidden = musicError || !shown\n                    const answerNumber = answer.id % 100 \n                    const color = musicPlayed ? answer.correct ? '#00c508' : 'grey' : 'grey'\n                    const backgroundColor = musicPlayed ? answer.correct ? '#00ff131f' : 'white' : 'white'\n                    \n                    return (\n                        <Paper key={answer.id} className=\"answer\" elevation={3} style={{ margin: '2px', opacity: hidden ? '0' : '1', filter: musicPaused ? 'blur(6px)' : 'none', backgroundColor: backgroundColor }}>\n                            <div \n                                style={{\n                                    position: 'relative', \n                                    display: 'inline-flex',\n                                    alignItems: 'center', \n                                    justifyContent: 'space-between',\n                                    width: '100%'\n                                }}\n                            >                                    \n                                <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'left' }}>\n                                    <Avatar sx={{ bgcolor: color }} style={{ margin: '10px', padding: '5px', fontSize: '2rem', fontWeight: 'bold' }}>{answer.number}</Avatar>\n                                    <div style={{ display: 'flex', flexDirection:'column', alignItems: 'flex-start', justifyContent: 'left' }}> \n                                        <Typography variant='h5' style={{ lineHeight: '1', fontSize: '2rem', fontWeight: 'bold' }}>{answer.answer}</Typography>\n                                        <Typography variant='subtitle2' style={{ marginLeft: '20px', color: 'gray', lineHeight: '1', fontSize: '1.5rem', opacity: showHints ? '1' : '0' }}>{answer.hint}</Typography>\n                                    </div>\n                                </div>\n                                <div\n                                    style={{\n                                        top: 0,\n                                        left: 0,\n                                        bottom: 0,\n                                        right: 5,\n                                        position: 'absolute',\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        justifyContent: 'flex-end',\n                                    }}\n                                >\n                                    { ( question.status == 'played' ) && (\n                                        game.players.map( ( player: Player ) => {\n                                            const disabled = hasAnswer( player.id, answer.id )\n                                            const onClick = question.status == 'played' && !disabled ? () => addAnswer( player.id, answer.id ) : undefined\n                                            return (\n                                                <div key={`answer-${answer.id}-${player.id}`} style={{ marginLeft: '5px' }}>\n                                                    <PlayingCard\n                                                        key={`${player.id}-${answer.id}`} \n                                                        card={{\n                                                            ...player.card,\n                                                            number: answer.number,\n                                                            size: CardSize.XS,\n                                                        }}\n                                                        disabled={disabled} \n                                                        onClick={onClick} \n                                                    />\n                                                </div>\n                                            )\n                                        } )\n                                    ) }\n                                </div>\n                            </div>                                \n                        </Paper>\n                    )\n                })\n            } \n\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n\n                <div style={{ width: '100%', display: 'flex', alignItems: 'center', justifyItems: 'flex-start', marginTop: '15px' }}>\n\n                    {/* music player */}\n\n                    <MusicPlayer \n                        questionId={question.id} \n                        media={question.media}\n                        failed={musicError}\n                        loading={musicLoading}\n                        info={musicPlayerInfo}\n                        started={musicStarted}\n                        playing={musicPlaying} \n                        progress={progress}\n                        played={musicPlayed} \n                        onMusicLoaded={onMusicLoaded}\n                        onMusicPlaying={onMusicPlaying}\n                        onMusicPaused={onMusicPaused}\n                        onMusicEnded={onMusicEnded}\n                    />\n    \n                    {/* selected players answers */}\n\n                    <div style={{ display: 'flex', alignItems: 'center', justifyItems: 'flex-start', justifyContent: 'space-between', marginLeft: '50px' }}>\n                    { \n                        question.playerAnswers.map( playerAnswer => {\n                            const player = game.players.find( player => player.id === playerAnswer.playerId )\n                            if ( !player ) {\n                                return null\n                            }\n                            const answer = question.answers.find( answer => answer.id === playerAnswer.answerId )\n                            if ( !answer ) {\n                                return null\n                            }\n                            const correct = question.status == 'completed' ? answer.correct : undefined\n                            const answerStats = getQuestionAnswerStats( player.stats, question.id, playerAnswer.answerId )\n                            const score = question.status == 'completed' && answerStats ? answerStats.score : undefined\n                            const onClick = question.status == 'played' ? () => removeAnswer( player.id, answer.id ) : undefined                            \n                            return ( \n                                <div key={`selected-${answer.id}-${player.id}`} style={{ transition: 'transform 1000ms cubic-bezier(0, 0, 0.2, 1) 1000ms' }}>                               \n                                    <Badge className='card--badge' badgeContent={badgeValue(score)} color={badgeColor(score)}>                                    \n                                        <PlayingCard\n                                            key={`${player.id}-${answer.id}`} \n                                            card={{\n                                                ...player.card,\n                                                number: answer.number,\n                                                size: CardSize.XS,\n                                            }} \n                                            onClick={onClick} \n                                        />\n                                    </Badge>\n                                </div>\n                            )\n                        } )\n                    }\n                    {\n                        range( Math.max( 1, game.settings.nbPlayer - question.playerAnswers.length ) ).map( i => {\n                            return (\n                                <div key={`selected-${i}`} className='card--badge'>     \n                                    <PlayingCard cardSize={CardSize.XS}/>\n                                </div>        \n                            )\n                        } )\n                    }\n                    </div>\n\n                </div>\n\n            </div>\n\n            {/* players */}\n\n            <div className='playerChips'>\n            {\n                sortedPlayers.map( player => {\n                    const tooltipId = `player-tooltip-${player.id}`\n                    const questionStats = getQuestionStats( player.stats, question.id )\n                    const score = question.status == 'completed' && questionStats ? questionStats.score : undefined\n                    const disableTooltip = !musicPlayed\n                    return (\n                        <LightTooltip \n                            key={tooltipId} \n                            title={<PlayerCard player={player} avatarSize={AvatarSize.M} cardSize={CardSize.XS}/>} \n                            disableFocusListener={disableTooltip}\n                            disableHoverListener={disableTooltip}\n                        >\n                            <Badge className='playerChip--badge' badgeContent={badgeValue(score)} color={badgeColor(score)}>  \n                                <div className='playerChip' style={{ cursor: musicPlayed ? 'help' : 'auto', }}>\n                                    <span className='playerChip--avatar'><PlayerAvatar key={player.id} id={player.avatarId} size={AvatarSize.S}/></span>\n                                    <span className='playerChip--score'>{player.stats.score}</span>\n                                </div>\n                            </Badge>                            \n                        </LightTooltip>\n                    )\n                } )\n            }\n            </div>\n\n            {/* debug */}\n\n            {DEBUG && <pre style={{ border: '1px solid #999', background: '#fff6f2', display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n                <span>{musicError?'error':'--'}</span>\n                <span>{musicLoading?'loading':'--'}</span>\n                <span>answers: {nbShownAnswers}/{question.answers.length}</span>\n                <span>{musicReady?'ready':'--'}</span>\n                <span>{countDown}s</span>\n                <span>{musicStarted?'started':'--'}</span>\n                <span>music: {nbSecondsPlayed}s / {nbSecondsTotal}s</span>\n                <span>{progress}%</span>\n                <span>{musicPlaying?'playing':'paused'}</span>\n                <span>{showHints?'hints':'--'}</span>\n                <span>{musicEnded?'ended':'--'}</span>\n                <span>{musicPlayed?'played':'--'}</span>\n            </pre>}\n\n            {DEBUG && <pre style={{ border: '1px solid #999', background: '#f2fff6', padding: '20px' }}>{JSON.stringify(question,undefined,4)}</pre>}\n\n        </>\n    )\n}\n\nexport default QuestionCard","import React from 'react'\nimport { useParams } from 'react-router'\nimport { useNavigate } from 'react-router-dom'\n\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Box from '@mui/material/Box'\nimport Card from '@mui/material/Card'\nimport CardContent from '@mui/material/CardContent'\nimport CardMedia from '@mui/material/CardMedia'\nimport IconButton from '@mui/material/IconButton'\nimport Typography from '@mui/material/Typography'\nimport SkipPreviousIcon from '@mui/icons-material/SkipPrevious'\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow'\nimport SkipNextIcon from '@mui/icons-material/SkipNext'\nimport NextButton from '../component/NextButton'\n\nimport Timeline from '@mui/lab/Timeline';\nimport TimelineItem from '@mui/lab/TimelineItem';\nimport TimelineSeparator from '@mui/lab/TimelineSeparator';\nimport TimelineConnector from '@mui/lab/TimelineConnector';\nimport TimelineContent from '@mui/lab/TimelineContent';\nimport TimelineDot from '@mui/lab/TimelineDot';\n\nimport GamePage from '../component/GamePage'\nimport QuestionCard from '../component/QuestionCard'\n\nimport { Game, GameStep, OnGameUpdate, selectGame, selectQuestion, onQuestionNumber, onEndGame, onAnswers } from '../data/Game'\nimport { QuestionId, OnQuestionUpdate, onQuestionPlayed, onQuestionCompleted } from '../data/Question'\nimport { toHomePage, toGamePage } from '../data/Navigate'\nimport { onUserEvent } from '../data/Util'\nimport { DEBUG } from '../data/Constants'\n\ninterface Props {\n    games: Game[]\n    updateGame: OnGameUpdate\n    updateQuestion: OnQuestionUpdate\n}\n\nconst QuestionPage = ( props: Props ) => {\n    const { games, updateGame, updateQuestion } = props\n\n    const navigate = useNavigate()\n\n    const { gameId, questionNumber } = useParams()\n    \n    const game = selectGame( games, gameId )\n    const question = selectQuestion( game, questionNumber )\n    \n    React.useEffect( () => { \n        if ( !game ) {\n            console.log(`[effect] MISSING game! >>> NAVIGATE to home`)\n            navigate( toHomePage() )    \n        } else if ( !question ) {\n            console.log(`[effect] UNKNOWN question! >>> NAVIGATE to home`)\n            navigate( toHomePage() )     \n        } else if ( game.questionNumber != question.number ) {\n            console.log(`[effect] NEW question! >>> NAVIGATE to question ${game.questionNumber}`)\n            navigate( toGamePage( game ) )    \n        }  \n    }, [ game ] )\n    \n    if ( !game ) {\n        return null\n    }\n\n    \n    if ( !question ) {\n        return null\n    }\n\n    // update helpers\n\n    const musicPlayed = () => {\n        updateQuestion( game.id, question.id, onQuestionPlayed )\n    }\n\n    const musicAnswered = () => {\n        updateGame( game.id, onAnswers( game, question ) )\n        updateQuestion( game.id, question.id, onQuestionCompleted )\n    }\n\n    const updateQuestionNumber = ( questionNumber: number ) => {\n        updateGame( game.id, onQuestionNumber( questionNumber ) )\n    }\n\n    const endGame = () => {\n        updateGame( game.id, onEndGame )\n    }\n\n    // user events\n    \n    const onPrevious = DEBUG && question.previousNumber ? () => {\n        if ( question.previousNumber ) {\n            console.log( `onNext >>> updateQuestionNumber( ${question.previousNumber} )` )\n            updateQuestionNumber( question.previousNumber )\n        }\n    } : undefined\n\n    const onNext = () => {\n        switch ( question.status ) {\n            case 'not-played':\n                console.log( 'onNext >>> musicPlayed()' )\n                musicPlayed()\n                break\n            case 'played':\n                console.log( 'onNext >>> musicAnswered()' )\n                musicAnswered()\n                break\n            case 'error':\n            case 'completed':\n                if ( question.nextNumber ) {\n                    console.log( `onNext >>> updateQuestionNumber( ${question.nextNumber} )` )\n                    updateQuestionNumber( question.nextNumber )\n                } else {\n                    console.log( `onNext >>> endGame()` )\n                    endGame()\n                }\n                break\n        }\n    }\n\n    // title\n\n    const title =  DEBUG ? `Q${question.number} - ${question.title} - ${question.status}` : `Q${question.number} - ${question.title}`\n\n    return (\n        <GamePage title={title} gameStep={GameStep.QUIZZ} game={game} updateGame={updateGame} onPrevious={onPrevious} onNext={onNext}>\n            <QuestionCard game={game} question={question} updateGame={updateGame} updateQuestion={updateQuestion} onNext={onNext}/>\n        </GamePage>\n    )\n}\n\nexport default QuestionPage","import React from 'react'\n\nimport Box from '@mui/material/Box'\nimport Card from '@mui/material/Card'\nimport CardContent from '@mui/material/CardContent'\nimport Grid from '@mui/material/Grid'\nimport TextField from '@mui/material/TextField'\nimport Modal from '@mui/material/Modal'\nimport IconButton from '@mui/material/IconButton'\nimport CloseIcon from '@mui/icons-material/Close'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\nimport MilitaryTechIcon from '@mui/icons-material/MilitaryTech'\n\nimport { Game, OnGameUpdate, updatePlayer } from '../data/Game'\nimport { Card as DataCard, CardSymbol, CardColor, CardSize, DefaultCards } from '../data/Card'\nimport { Player } from '../data/Player'\n\nimport PlayingCard from './PlayingCard'\nimport PlayingCardIcon from './PlayingCardIcon'\nimport PlayerAvatar, { AvatarSize } from './PlayerAvatar';\nimport { Accordion, AccordionDetails, AccordionSummary, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography } from '@mui/material'\nimport { ColorizeRounded } from '@mui/icons-material'\n\ninterface Props {\n    game: Game\n    player: Player\n    position: number\n    color: string\n    medalColor?: string    \n}\n\nconst PlayerScoreCard = ( props: Props ) => {\n    const { game, player, position, color, medalColor } = props\n\n    if ( !player.number ) {\n        return null\n    }\n\n    const prettyPoints = ( value: number ): string => {\n        value = value < 10 ? Math.ceil( 10 * value ) / 10 : Math.ceil( value )\n        if ( value > 0 ) {\n            return `+ ${value} pts`\n        } else if ( value < 0 ) {\n            return `- ${-value} pts`\n        } else {\n            return `-`\n        }\n    }\n\n    const prettyPercent = ( value: number ): string => {\n        value = value < 10 ? Math.ceil( 10 * value ) / 10 : Math.ceil( value )\n        if ( value > 0 ) {\n            return `${value} %`\n        } else if ( value < 0 ) {\n            return `-${-value} %`\n        } else {\n            return `-`\n        }\n    }\n\n    const nbTotal = player.stats.nbAnswer + player.stats.nbMiss\n    const successPercent = nbTotal > 0 ? player.stats.nbSuccess * 100 / nbTotal : 0\n    const failurePercent = nbTotal > 0 ? player.stats.nbFailure * 100 / nbTotal : 0\n    const missPercent = nbTotal > 0 ? player.stats.nbMiss * 100 / nbTotal : 0\n\n    let sumBySuccessAnswer = 0\n    let sumByFailureAnswer = 0\n    let nbSuccessAnswer = 0\n    let nbFailureAnswer = 0\n    for ( const question of player.stats.questions ) {\n        for ( const answer of question.answers ) {\n            if ( answer.success ) {\n                nbSuccessAnswer++\n                sumBySuccessAnswer += answer.score\n            } else {\n                nbFailureAnswer++\n                sumByFailureAnswer += answer.score\n            }\n        } \n    }    \n    const avgSuccessDelta = nbSuccessAnswer > 0 ? sumBySuccessAnswer / nbSuccessAnswer : 0    \n    const avgFailureDelta = nbFailureAnswer > 0 ? sumByFailureAnswer / nbFailureAnswer : 0\n    const avgDelta = ( nbSuccessAnswer + nbFailureAnswer ) > 0 ? ( sumBySuccessAnswer + sumByFailureAnswer ) / ( nbSuccessAnswer + nbFailureAnswer ) : 0    \n\n    return (\n\n        <Accordion>\n            <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n            >\n                \n                <Grid container spacing={2} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}> \n                    <Grid item xs={12}>\n                        <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n                            <div style={{ display: 'inline-flex', alignItems: 'center' }}>\n                                <div style={{ \n                                    width: '32px',\n                                    borderRadius: '20px',\n                                    border: `4px solid ${medalColor || '#42a5f5'}`,\n                                    color: medalColor || '#42a5f5',\n                                    // boxShadow: 'rgb(0 0 0 / 20%) 3px 3px 3px',\n                                    fontSize: '15px',\n                                    fontWeight: 'bold',\n                                    aspectRatio: '1',\n                                    display: 'flex',\n                                    alignItems: 'center',\n                                    justifyContent: 'center',\n                                    marginRight: '30px',\n                                }}>\n                                    {position}                                   \n                                </div>\n                                <PlayerAvatar id={player.avatarId} size={AvatarSize.M}/>\n                                <Typography style={{ marginLeft: '10px' }} >{player.name}</Typography>\n                                <MilitaryTechIcon style={{ marginLeft: '20px', fontSize: '2.5em', color: medalColor, opacity: medalColor ? '1' : '0' }}/>\n                            </div>\n                            <div style={{ \n                                width: '40px',\n                                borderRadius: '20px',\n                                marginRight: '10px',\n                                backgroundColor: color,\n                                boxShadow: 'rgb(0 0 0 / 20%) 3px 3px 3px',\n                                fontSize: '15px',\n                                fontWeight: 'bold',\n                                aspectRatio: '1',\n                                display: 'flex',\n                                alignItems: 'center',\n                                justifyContent: 'center'\n                            }}>\n                                {player.stats.score}\n                            </div>\n                        </Box> \n                    </Grid>\n                </Grid>\n\n            </AccordionSummary>\n\n            <AccordionDetails>\n    \n                <TableContainer component={Paper}>\n                    <Table aria-label=\"simple table\" size=\"small\">\n                        <TableHead>\n                            <TableRow sx={{ backgroundColor: '#e3d5ca' }}>\n                                <TableCell>score: {player.stats.score}</TableCell>\n                                <TableCell align=\"right\">gain</TableCell>\n                                <TableCell align=\"right\">nb</TableCell>\n                                <TableCell align=\"right\">%</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">answers:</TableCell>\n                                <TableCell align=\"right\">{prettyPoints(avgDelta)}</TableCell>\n                                <TableCell align=\"right\">{player.stats.nbSuccess+player.stats.nbFailure}</TableCell>\n                                <TableCell align=\"right\">{prettyPercent(successPercent+failurePercent)}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\"> - succeed</TableCell>\n                                <TableCell align=\"right\">{prettyPoints(avgSuccessDelta)}</TableCell>\n                                <TableCell align=\"right\">{player.stats.nbSuccess}</TableCell>\n                                <TableCell align=\"right\">{prettyPercent(successPercent)}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\"> - failed</TableCell>\n                                <TableCell align=\"right\">{prettyPoints(avgFailureDelta)}</TableCell>\n                                <TableCell align=\"right\">{player.stats.nbFailure}</TableCell>\n                                <TableCell align=\"right\">{prettyPercent(failurePercent)}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">missed</TableCell>\n                                <TableCell align=\"right\">{prettyPoints(0)}</TableCell>\n                                <TableCell align=\"right\">{player.stats.nbMiss}</TableCell>\n                                <TableCell align=\"right\">{prettyPercent(missPercent)}</TableCell>\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n\n            </AccordionDetails>\n        </Accordion>\n    )\n}\n\nexport default PlayerScoreCard","import React from 'react'\nimport { useParams } from 'react-router'\nimport { useNavigate } from 'react-router-dom'\nimport ReplayButton from '../component/ReplayButton'\n\nimport GamePage from '../component/GamePage'\n\nimport { Game, GameStep, OnGameUpdate, OnStep, selectGame, newGame } from '../data/Game'\nimport { toHomePage, toGamePage } from '../data/Navigate'\nimport { Grid } from '@mui/material'\nimport PlayerScoreCard from '../component/PlayerScoreCard'\nimport { Player } from '../data/Player'\nimport { VictoryChart, VictoryLine, VictoryScatter, VictoryTooltip, VictoryGroup, VictoryVoronoiContainer, VictoryLegend } from 'victory'\nimport { computeVizualiationScoreData } from '../data/PlayerStats'\nimport PlayerAvatar, { AvatarSize } from '../component/PlayerAvatar'\n\ninterface Props {\n    games: Game[]\n    updateGame: OnGameUpdate\n    addGame: ( game: Game ) => void\n}\n\nconst ScoresPage = ( props: Props ) => {\n    const { games, updateGame, addGame } = props\n\n    const navigate = useNavigate()\n\n    const { gameId } = useParams()\n    const game = selectGame( games, gameId )\n    \n    React.useEffect( () => { \n        if ( !game ) {\n            console.log(`[effect] MISSING game! >>> NAVIGATE home`)\n            navigate( toHomePage() )    \n        }\n    }, [ game ] )\n    \n    if ( !game ) {\n        return null\n    }\n\n    const restartNewGame = () => {\n        const game = newGame()\n        addGame( game )\n        navigate( toGamePage( game ) )\n    }\n\n    const onNext = () => {   \n        if ( game.ended ) {\n            navigate( toHomePage() )\n        } else {\n            updateGame( game.id, OnStep( GameStep.QUIZZ ) )\n        }        \n    }\n\n    //\n    // sort players by score\n    //\n     \n    const sortedPlayers = [ ...game.players ].sort( ( left: Player, right: Player ): number => {\n        return right.stats.score - left.stats.score\n    } )\n\n    let previousPosition: number | undefined = undefined\n    let previousScore: number | undefined = undefined\n\n    const colorScale: string[] = [ \n        \"#f29e4c\",\n        \"#f1c453\",\n        \"#efea5a\",\n        \"#b9e769\", \n        \"#83e377\", \n        \"#16db93\", \n        \"#0db39e\", \n        \"#048ba8\", \n        \"#2c699a\", \n        \"#54478c\" \n    ]\n    const medalColorScale: string[] = [ \n        \"gold\",\n        \"grey\",\n        \"brown\" \n    ]\n\n    return (\n        <GamePage gameStep={GameStep.SCORES} game={game} updateGame={updateGame} onNext={onNext}>\n\n            <Grid container spacing={2}>\n\n                {/* players */}\n\n                {\n                    (\n                        <>\n                            {sortedPlayers.map( ( player, index ) => {\n                                \n                                let position = 1                                \n                                if ( previousPosition !== undefined && previousScore !== undefined ) {\n                                    if ( previousScore > player.stats.score ) {\n                                        position = previousPosition + 1\n                                    } else {\n                                        position = previousPosition\n                                    }\n                                }\n                                previousScore = player.stats.score\n                                previousPosition = position\n\n                                return (\n                                    <Grid key={player.id} item xs={12} textAlign=\"left\">\n                                        <PlayerScoreCard\n                                            game={game}\n                                            player={player}\n                                            position={position}\n                                            color={colorScale[index % colorScale.length]}\n                                            medalColor={position-1 < medalColorScale.length ? medalColorScale[position-1] : undefined}\n                                        />\n                                    </Grid>\n                                )\n                            })}                        \n                        </>\n                    )\n                }\n\n                {/* graph */}\n\n                <VictoryChart height={390}> \n\n                    {sortedPlayers.map( ( player, index ) => {\n                        const data = computeVizualiationScoreData( player.stats )\n                        const color = colorScale[index % colorScale.length]\n                        return (\n\n                            <VictoryGroup\n                                key={`player-graph-${player.id}`}\n                                color={color}\n                                labels={({ datum }) => `#${index+1} - ${player.name}: ${datum.tooltip}`}\n                                labelComponent={\n                                    <VictoryTooltip\n                                        style={{ fontSize: 10 }}\n                                    />\n                                }\n                                data={data}\n                            >\n                                <VictoryLine/>\n                                <VictoryScatter\n                                    size={3}\n                                    style={{ data: { fill: color } }}\n                                />\n                            </VictoryGroup>\n                        )\n                    })}\n\n                </VictoryChart>\n\n            </Grid> \n            \n        </GamePage>\n    )\n}\n\nexport default ScoresPage","import React from 'react'\n\nimport Grid from '@mui/material/Grid';\n\nimport Page from '../component/Page'\n\nimport PlayerAvatar, { AvatarSize } from '../component/PlayerAvatar';\n\ninterface Props {}\n\nconst AvatarsPage = ( props: Props ) => {\n\n    return (\n        <Page title=\"Avatars\">\n\n            <Grid container spacing={2}>\n\n                { [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20].map(number => {\n\n                    return (\n                        <Grid key={number} item xs={12} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-around', backgroundColor: '#ddd' }}>\n                            {\n                                Object.keys( AvatarSize ).map(size => {\n                                    return (\n                                        <PlayerAvatar key={`${number}-${size}`} id={number} size={size as AvatarSize} />\n                                    )\n                                })\n                            }\n                        </Grid>\n                    )\n                } ) }\n\n            </Grid>\n\n        </Page>\n    )\n}\n\nexport default AvatarsPage","import React from 'react'\n\nimport Grid from '@mui/material/Grid';\n\nimport Page from '../component/Page'\n\nimport { CardSymbol, CardSize, CardColor } from '../data/Card'\nimport PlayingCard from '../component/PlayingCard';\n\ninterface Props {}\n\nconst PlayingCardsPage = ( props: Props ) => {\n\n    return (\n        <Page>\n            \n            <h3>Playing Cards</h3>\n\n            <Grid container spacing={2}>\n\n                { Object.keys( CardSymbol ).map(symbol => {\n\n                    return (\n                        <Grid key={symbol} item xs={12} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n                            {\n                                Object.keys( CardSize ).map(size => {\n                                    return (\n                                        <>\n                                            <PlayingCard key={`${symbol}-${size}-black`} card={{\n                                                    symbol: symbol as CardSymbol,\n                                                    color: CardColor.BLACK,\n                                                    size: size as CardSize,\n                                                    number: 2,\n                                                }} \n                                                onClick={() => {}} \n                                            />\n                                            <PlayingCard key={`${symbol}-${size}-red`} card={{\n                                                    symbol: symbol as CardSymbol,\n                                                    color: CardColor.RED,\n                                                    size: size as CardSize,\n                                                    number: 2,\n                                                }} \n                                                onClick={() => {}} \n                                            />\n                                        </>\n                                    )\n                                })\n                            }\n                        </Grid>\n                    )\n                } ) }\n\n            </Grid>\n\n        </Page>\n    )\n}\n\nexport default PlayingCardsPage","import React from 'react'\n\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\"\n\nimport HomePage from './page/HomePage'\nimport SettingsPage from './page/SettingsPage'\nimport PlayersPage from './page/PlayersPage'\nimport StartPage from './page/StartPage'\nimport QuestionPage from './page/QuestionPage'\nimport ScoresPage from './page/ScoresPage'\nimport AvatarsPage from './page/AvatarsPage'\n\nimport { Game, GameUpdater, loadGames, storeGames, clearGames, GameId } from './data/Game'\n\nimport './App.css';\nimport PlayingCardsPage from './page/PlayingCardsPage';\nimport { QuestionId, QuestionUpdater } from './data/Question'\n\nfunction App() {\n\n  //\n  // global state \n  //\n\n  const [ games, setGames ] = React.useState( loadGames() )\n\n  function addGame( game: Game ) {\n      console.log( `[add-game] ${game.id}` )\n      setGames( prev => {\n        const newGames = [ game, ...prev ]\n        return storeGames( newGames )\n      } )\n  }\n\n  function deleteGame( game: Game ) {\n      console.log( `[delete-game] ${game.id}` )\n      setGames( prev => {\n        const newGames = prev.filter( g => g.id !== game.id ) \n        return storeGames( newGames )\n      } )\n  }\n\n  function deleteGames( gameIds: GameId[] ) {\n      console.log( `[delete-games]` )\n      setGames( prev => {\n        for ( const gameId of gameIds ) {\n          console.log( `[todo] ${gameId}` )\n        }\n        for ( const game of prev ) {\n          console.log( `[before] ${game.id}` )\n        }\n        const newGames = prev.filter( game => gameIds.indexOf( game.id ) === -1 )\n        for ( const game of newGames ) {\n          console.log( `[after] ${game.id}` )\n        }\n        return storeGames( newGames )\n      } )\n  }\n\n  function updateGame( gameId: GameId, update: GameUpdater ) {\n    console.log( `[update-game] ${gameId}` )\n    setGames( prev => {\n      const newGames = prev.map( game => game.id === gameId ? update( game ) : game )\n      return storeGames( newGames )\n    } )\n  }\n\n  function updateQuestion( gameId: GameId, questionId: QuestionId, update: QuestionUpdater ) {\n    console.log( `[update-question] ${gameId} - ${questionId}` )\n    setGames( prev => {\n      const newGames = prev.map( game => {\n        if ( game.id != gameId ) {\n          return game\n        }\n        game.questions = game.questions.map( question => question.id === questionId ? update( question ) : question )\n        return game        \n      } )\n      return storeGames( newGames )\n    } )\n  }\n\n  // GREG console.log( '[render] app' )\n\n  return (\n    <div className=\"app app-amnezic\">\n\n      <Router>\n        <Routes>\n          <Route path=\"/\" element={<HomePage games={games} addGame={addGame} updateGame={updateGame} deleteGames={deleteGames}/>} />\n          <Route path=\"/game/:gameId/settings\" element={<SettingsPage games={games} updateGame={updateGame} />} />        \n          <Route path=\"/game/:gameId/players\" element={<PlayersPage games={games} updateGame={updateGame} />} />\n          <Route path=\"/game/:gameId/start\" element={<StartPage games={games} updateGame={updateGame} />} />\n          <Route path=\"/game/:gameId/question/:questionNumber\" element={<QuestionPage games={games} updateGame={updateGame} updateQuestion={updateQuestion}/>} />\n          <Route path=\"/game/:gameId/scores\" element={<ScoresPage games={games} updateGame={updateGame} addGame={addGame} />} />\n          <Route path=\"/avatars\" element={<AvatarsPage />} />\n          <Route path=\"/cards\" element={<PlayingCardsPage />} />\n        </Routes>\n      </Router>\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nif (module.hot) {\n  module.hot.accept();\n}"],"sourceRoot":""}