{"version":3,"sources":["static/music.png","data/Question.ts","client/JsonArtist.ts","client/JsonAlbum.ts","client/JsonMusic.ts","client/FetchGame.ts","data/Constants.ts","data/Card.ts","data/Settings.ts","data/Util.ts","data/QuestionStats.ts","data/PlayerStats.ts","data/Artist.ts","data/Music.ts","data/Quizz.ts","data/Album.ts","data/Game.ts","data/GameStats.ts","data/Navigate.ts","component/GameHeader.tsx","component/GameFooter.tsx","component/Page.tsx","component/GameCard.tsx","component/NextButton.tsx","component/AdminButton.tsx","page/HomePage.tsx","component/PlayerAvatar.tsx","component/GamePage.tsx","page/SettingsPage.tsx","component/icon/ClubIcon.tsx","component/icon/DiamondIcon.tsx","component/icon/CircleIcon.tsx","component/icon/HeartIcon.tsx","component/icon/SpadeIcon.tsx","component/icon/SquareIcon.tsx","component/icon/StarIcon.tsx","component/icon/TriangleIcon.tsx","component/icon/CrossIcon.tsx","component/PlayingCardIcon.tsx","component/PlayingCard.tsx","component/PlayingCardModal.tsx","data/Avatar.ts","component/AvatarModal.tsx","component/PlayerCard.tsx","page/PlayersPage.tsx","page/StartPage.tsx","component/MusicCard.tsx","component/MusicPlayer.tsx","component/QuestionCard.tsx","page/QuestionPage.tsx","component/PlayerScoreCard.tsx","data/Admin.ts","page/ScoresPage.tsx","page/AvatarsPage.tsx","component/AdminHeader.tsx","component/AdminFooter.tsx","component/AdminPage.tsx","component/CreateThemeModal.tsx","client/FetchThemes.ts","client/JsonThemeInfo.ts","client/JsonThemeQuestion.ts","client/JsonTheme.ts","client/CreateTheme.ts","client/RemoveTheme.ts","page/AdminThemesPage.tsx","client/FetchTheme.ts","client/AddMusicToTheme.ts","client/RemoveThemeQuestion.ts","client/UpdateThemeQuestion.ts","client/UpdateTheme.ts","data/AudioPlayer.ts","component/MusicButton.tsx","client/SearchMusic.ts","component/SearchMusicModal.tsx","component/UpdateQuestionModal.tsx","page/AdminThemePage.tsx","page/PlayingCardsPage.tsx","App.tsx","index.jsx"],"names":["module","exports","__webpack_require__","p","addAnswer","question","answer","hint","arguments","length","undefined","correct","number","answers","current","id","push","getPlayerAnswerIndex","playerId","answerId","playerAnswers","findIndex","playerAnswer","hasPlayerAnswer","onQuestionPlayed","console","log","concat","status","onQuestionCompleted","ToArtist","json","deezerId","name","imgUrl","ToAlbum","ToMusic","mp3Url","album","artist","FromMusic","music","_regeneratorRuntime","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","_createForOfIteratorHelper","o","allowArrayLike","it","Array","isArray","minLen","_arrayLikeToArray","n","toString","from","test","_unsupportedIterableToArray","F","s","e","_e","f","normalCompletion","didErr","step","_e2","arr","len","arr2","_FetchGame","_asyncToGenerator","_callee","game","requestURL","response","message","jsonResponse","jsonGame","_iterator","_step","jsonQuestion","jsonMusic","jsonTheme","_iterator2","_step2","jsonAnswer","_context","process","settings","nbQuestion","nbAnswer","nbPlayer","fetch","ok","body","questions","theme","addQuestion","title","text","t0","apply","CardSymbol","CardColor","CardSize","MAX_NB_GAME","DEFAULT_NB_PLAYER","PLAYER_ID_SUFFIX","DEFAULT_NB_QUESTION","QUESTION_ID_SUFFIX","DEFAULT_NB_ANSWER_PER_QUESTION","ANSWER_ID_SUFFIX","newSettings","range","nb","toZeroPadString","padSize","padStart","toDateTimeString","date","Date","year","getFullYear","month","getMonth","day","getDate","toDateString","hours","getHours","minutes","getMinutes","seconds","getSeconds","toTimeString","onUserEvent","callback","event","stopPropagation","preventDefault","onKeyEvent","keyCallback","onValueEvent","target","HeartCard","symbol","HEART","color","RED","DiamondCard","DIAMOND","DefaultCards","CLUB","BLACK","SPADE","CIRCLE","BLUE","YELLOW","GREEN","TRIANGLE","ORANGE","PURPLE","getAnswerStats","stats","find","getOrSetAnswerStats","answerStats","success","score","getQuestionStats","questionId","getOrSetQuestionStats","questionStats","flagQuestionAsError","nbError","newArtist","newMusic","getImgUrl","GameStep","newGameId","customAlphabet","newGameCode","newGame","code","created","now","updated","SETTINGS","players","started","ended","previous","nextNumber","previousNumber","updateSettings","update","_objectSpread","updatePlayer","map","player","GAMES","sortGames","games","_toConsumableArray","sort","left","right","storeGames","sanitizedGames","localStorage","setItem","JSON","stringify","loadGames","parse","getItem","selectGame","gameId","g","isSetUp","hasPlayers","hasQuestions","OnStep","gameStep","onSetUp","_x","FetchGame","index","card","avatarId","nbSuccess","nbFailure","nbMiss","addPlayer","PLAYERS","onStartGame","questionNumber","nbCompleted","progress","QUIZZ","onAnswers","nbPoint","_loop","some","isCorrect","flagAnswerAsIncorrect","flagAnswerAsCorrect","_step3","miss","_iterator3","onEndGame","SCORES","toGamePage","toSettingsPage","toPlayersPage","toQuizzPage","toScoresPage","Header","props","updateGame","onPrevious","onNext","navigate","useNavigate","isHomeSelected","isSettingsSelected","isPlayersSelected","isQuizzSelected","isScoresSelected","isSettingsDisabled","isSettingsPageDisabled","isPlayersDisabled","isPlayersPageDisabled","isQuizzDisabled","isQuizzPageDisabled","isScoresDisabled","isScoresPageDisabled","updateGameStep","onHomePage","onSettingsPage","onPlayersPage","onQuizzPage","onScoresPage","handleKeyPress","React","useCallback","useEffect","document","addEventListener","removeEventListener","_React$useState","useState","_React$useState2","_slicedToArray","menuElement","setMenuElement","open","Boolean","finalTitle","createElement","Box","className","sx","flexGrow","style","marginBottom","AppBar","position","Toolbar","width","display","alignItems","justifyContent","Fragment","IconButton","aria-label","aria-controls","aria-expanded","aria-haspopup","onClick","currentTarget","MenuIcon","Menu","anchorEl","onClose","MenuListProps","aria-labelledby","MenuItem","selected","disabled","ListItemIcon","Home","fontSize","ListItemText","Settings","Group","MusicNote","MilitaryTech","fontWeight","textTransform","SkipPreviousIcon","SkipNextIcon","GameFooter","Page","children","Footer","useStyles","makeStyles","gameCard","flexDirection","padding","borderRadius","border","&:hover","backgroundColor","gameLine","gameItem","GameCard","startGame","resumeGame","deleteGame","classes","onStart","margin","onResume","onDelete","Math","round","Stack","direction","spacing","opacity","Chip","label","CloseIcon","marginLeft","PersonIcon","marginRight","MusicNoteIcon","CalendarTodayIcon","marginTop","height","LinearProgress","variant","valueBuffer","NextButton","description","AdminButton","FolderIcon","AvatarSize","HomePage","addGame","deleteGames","oldGameIds","sortedGames","Accordion","AccordionSummary","expandIcon","ExpandMoreIcon","AccordionDetails","Grid","container","item","xs","textAlign","allGameIds","DeleteIcon","GamePage","replace","toLowerCase","GameHeader","SettingsPage","useParams","lessPlayerDisabled","morePlayerDisabled","lessQuestionDisabled","moreQuestionDisabled","lessAnswerDisabled","moreAnswerDisabled","updateNbPlayer","updateNbQuestion","updateNbAnswer","lessPlayer","morePlayer","lessQuestion","moreQuestion","lessAnswer","moreAnswer","Button","size","QuizIcon","ClubIcon","xmlns","viewBox","d","DiamondIcon","CircleIcon","HeartIcon","SpadeIcon","SquareIcon","StarIcon","TriangleIcon","CrossIcon","PlayingCardIcon","CROSS","SQUARE","STAR","PlayingCard","cardSize","cardClassNames","PlayerAvatar","avatarClassNames","PlayingCardModal","closeModal","onSymbolChange","onColorChange","onCardChange","Modal","aria-describedby","top","transform","bgcolor","boxShadow","Typography","filter","GRAY","newColor","XL","newSymbol","defaultCard","XS","ALL_AVATAR_IDS","AvatarModal","onAvatarChange","newAvatarId","M","PlayerCard","avatarSize","setName","editMode","_React$useState3","_React$useState4","playingCardModal","setPlayingCardModal","_React$useState5","_React$useState6","avatarModal","setAvatarModal","updatePlayerCard","Card","CardContent","L","TextField","onChange","onBlur","updatePlayerName","S","updatePlayerAvatar","PlayersPage","StartPage","MusicCard","musicImage","musicBackground","artistName","albumName","component","pl","pb","CardMedia","image","MusicPlayer","loading","playing","played","onMusicLoaded","onMusicPlaying","onMusicPaused","onMusicEnded","audioRef","useRef","Audio","toggleMusic","play","pause","lessVolume","volume","max","moreVolume","min","src","loop","onAudioLoad","currentTime","duration","onAudioReady","onAudioEnd","playingMusic","pausingMusic","onPause","onPlay","LightTooltip","withStyles","tooltip","arrow","Tooltip","icon","PlayArrowIcon","cursor","background","backgroundSize","CircularProgress","bottom","QuestionCard","updateQuestion","setQuestionId","musicLoading","setMusicLoading","nbSecondsTotal","setNbSecondsTotal","_React$useState7","_React$useState8","nbShownAnswers","setNbShownAnswers","_React$useState9","_React$useState10","musicReady","setMusicReady","_React$useState11","_React$useState12","countDown","setCountDown","_React$useState13","_React$useState14","musicStarted","setMusicStarted","_React$useState15","_React$useState16","musicPlaying","setMusicPlaying","_React$useState17","_React$useState18","nbSecondsPlayed","setNbSecondsPlayed","_React$useState19","_React$useState20","musicEnded","setMusicEnded","musicError","musicPlayed","addPlayerAnswer","removeAnswer","splice","removePlayerAnswer","flagQuestionAsFailed","onQuestionError","_step4","_iterator4","onErrorAnswers","sortedPlayers","badgeValue","badgeColor","resetOnPlayed","onMusicFailed","showNextAnswer","showCountDown","showNbSecondsPlayed","timerId","clearInterval","setInterval","ONE_SECOND","ceil","musicPaused","showHints","musicPlayerInfo","Alert","severity","hidden","Paper","elevation","Avatar","lineHeight","justifyItems","failed","nbSeconds","getQuestionAnswerStats","transition","Badge","badgeContent","tooltipId","disableTooltip","disableFocusListener","disableHoverListener","QuestionPage","_useParams","questionParam","parseInt","selectQuestion","updateQuestionNumber","onQuestionNumber","AdminStep","PlayerScoreCard","medalColor","prettyPoints","prettyPercent","nbTotal","successPercent","failurePercent","missPercent","sumBySuccessAnswer","sumByFailureAnswer","nbSuccessAnswer","nbFailureAnswer","avgSuccessDelta","avgFailureDelta","avgDelta","aspectRatio","MilitaryTechIcon","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","scope","ScoresPage","previousPosition","previousScore","colorScale","medalColorScale","VictoryChart","data","intermediateScore","x","y","computeVizualiationScoreData","VictoryGroup","labels","_ref","datum","labelComponent","VictoryTooltip","VictoryLine","VictoryScatter","fill","AvatarsPage","onBack","isThemesSelected","THEMES","isThemeSelected","THEME","KeyboardArrowLeftIcon","AdminFooter","AdminPage","AdminHeader","CreateThemeModal","createTheme","SetTitle","SetImgUrl","handleTitleChange","handleImgUrlChange","onSubmit","minWidth","AddIcon","_FetchThemes","_message","themes","jsonThemeInfo","FromThemeQuestion","ToTheme","FromTheme","_CreateTheme","url","headers","content-type","_RemoveTheme","themeId","AdminThemesPage","setThemes","setError","createThemeModal","setCreateThemeModal","openCreateThemeModal","deleteTheme","window","confirm","RemoveTheme","fetchThemes","FetchThemes","onError","AlertTitle","toTheme","toAdminThemePage","columns","field","headerName","cellClassName","editable","disableColumnMenu","sortable","renderCell","params","objectFit","flex","valueFormatter","renderHeader","row","EditIcon","_x2","CreateTheme","DataGrid","rows","rowHeight","initialState","pagination","paginationModel","pageSize","pageSizeOptions","disableRowSelectionOnClick","_FetchTheme","_AddMusicToTheme","RemoveThemeQuestion","_RemoveThemeQuestion","_UpdateThemeQuestion","_UpdateTheme","AudioPlayer","_classCallCheck","loaded","autoPlay","onAudioLoading","onAudioLoaded","onAudioPlaying","onAudioPausing","onAudioReset","onAudioUnload","_createClass","_onAudioUnload","_onAudioLoaded","bind","_onAudioReady","_onAudioEnd","_onAudioLoading","load","_onAudioReset","_onAudioPlaying","_onAudioPausing","MusicButton","audioPlayer","iconWidth","iconHeight","playIcon","pauseIcon","PauseIcon","downloadingIcon","DownloadingIcon","setLoaded","setIcon","toggle","unload","loadAndPlay","_SearchMusic","search","limit","musics","SearchMusicModal","isMusicIncluded","addMusic","removeMusic","SetSearch","submit","SetSubmit","SetMusics","handleChange","SearchMusic","CheckIcon","maxWidth","SearchIcon","density","getRowId","UpdateQuestionModal","SetText","SetHint","handleTextChange","handleHintChange","SaveIcon","AdminThemePage","setTheme","needSave","setNeedSave","setQuestion","updateQuestionModal","setUpdateQuestionModal","searchMusicModal","setSearchMusicModal","openSearchMusicModal","editQuestion","FetchTheme","hideable","UpdateTheme","UpdateThemeQuestion","AddMusicToTheme","disableColumnSelector","PlayingCardsPage","App","setGames","HashRouter","Routes","Route","path","element","gameIds","newGames","indexOf","Navigate","to","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f2fbd246.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/music.45a44973.png\";","import { Answer, AnswerId } from './Answer'\nimport { GameId } from './Game'\nimport { Music } from './Music'\nimport { PlayerId } from './Player'\nimport { PlayerAnswer } from './PlayerAnswer'\nimport { toZeroPadString } from './Util'\n\n// //////////////////////////////////////////////////\n// status\n\nexport type QuestionStatus = \n  | 'not-played' \n  | 'played'\n  | 'completed'\n  | 'error'\n\n// //////////////////////////////////////////////////\n// model\n\nexport type QuestionId = number\n\nexport interface Question {\n  id: QuestionId\n  number: number\n  status: QuestionStatus\n  title: string\n  music: Music\n  answers: Answer[] \n  playerAnswers: PlayerAnswer[] \n  previousNumber?: number\n  nextNumber?: number\n}\n\nexport type QuestionUpdater = ( question: Question ) => Question\nexport type OnQuestionUpdate = ( gameId: GameId, questionId: QuestionId, questionUpdater: QuestionUpdater ) => void\n\n// //////////////////////////////////////////////////\n// add\n\nexport function addAnswer( question: Question, answer: string, hint: string = \"\", correct: boolean = false ): Answer {\n  const number = question.answers.length + 1\n  const current: Answer = {\n    id: question.id + number, \n    number: number,\n    answer: answer,\n    hint: hint,\n    correct: correct,\n  }\n  question.answers.push( current )\n  return current\n}\n\nexport function addPlayerAnswer( question: Question, playerId: PlayerId, answerId: AnswerId ): Question {\n  if ( !hasPlayerAnswer( question, playerId, answerId ) ) {\n    question.playerAnswers.push( {\n      playerId: playerId, \n      answerId: answerId,\n    } )\n  }\n  return question\n}\n\nexport function getPlayerAnswerIndex( question: Question, playerId: PlayerId, answerId: AnswerId ): number {\n  return question.playerAnswers.findIndex( playerAnswer => ( playerAnswer.playerId === playerId ) && ( playerAnswer.answerId === answerId ) )\n}\n\nexport function hasPlayerAnswer( question: Question, playerId: PlayerId, answerId: AnswerId ): boolean {\n  return getPlayerAnswerIndex( question, playerId, answerId ) > -1\n}\n\nexport function removePlayerAnswer( question: Question, playerId: PlayerId, answerId: AnswerId ): Question {\n  let index = getPlayerAnswerIndex( question, playerId, answerId )\n  while ( index > -1 ) {\n    question.playerAnswers.splice( index, 1 )\n    index = getPlayerAnswerIndex( question, playerId, answerId )\n  }\n  return question\n}\n\nexport function isCorrect( question: Question, playerAnswer: PlayerAnswer ): boolean {\n  return question.answers.some( answer => ( answer.id ===  playerAnswer.answerId ) && answer.correct )\n}\n\n// //////////////////////////////////////////////////\n// state\n\nexport function onQuestionPlayed( question: Question ): Question {\n  console.log( `[on-question-played] question: ${question.id}` )\n\n  question.status = 'played'\n  \n  return question\n}\n\nexport function onQuestionCompleted( question: Question ): Question {\n  console.log( `[on-question-completed] question: ${question.id}` )\n\n  question.status = 'completed'\n  \n  return question\n}\n\nexport function onQuestionError( question: Question ): Question {\n  console.log( `[on-question-error] question: ${question.id}` )\n\n  question.status = 'error'\n  \n  return question\n}","// //////////////////////////////////////////////////\n// import\n\nimport { Artist } from \"../data/Artist\"\n\n// //////////////////////////////////////////////////\n// adapter\n\nexport function ToArtist( json: JsonArtist ): Artist {\n    return {\n        id: json.id,\n        deezerId: json.deezerId,\n        name: json.name,\n        imgUrl: json.imgUrl,\n    }\n}\n\nexport function FromArtist( artist: Artist ): JsonArtist {\n    return {\n        id: artist.id,\n        deezerId: artist.deezerId,\n        name: artist.name,\n        imgUrl: artist.imgUrl,\n    }\n}\n\n// //////////////////////////////////////////////////\n// json\n\nexport interface JsonArtist {\n    id?: number\n    deezerId?: number\n    name: string\n    imgUrl?: string\n}","// //////////////////////////////////////////////////\n// import\n\nimport { Album } from \"../data/Album\"\n\n// //////////////////////////////////////////////////\n// adapter\n\nexport function ToAlbum( json: JsonAlbum ): Album {\n    return {\n        id: json.id,\n        deezerId: json.deezerId,\n        name: json.name,\n        imgUrl: json.imgUrl,\n    }\n}\n\nexport function FromAlbum( album: Album ): JsonAlbum {\n    return {\n        id: album.id,\n        deezerId: album.deezerId,\n        name: album.name,\n        imgUrl: album.imgUrl,\n    }\n}\n\n// //////////////////////////////////////////////////\n// json\n\nexport interface JsonAlbum {\n    id?: number\n    deezerId?: number\n    name: string\n    imgUrl?: string\n}","// //////////////////////////////////////////////////\n// import\n\nimport { newArtist } from \"../data/Artist\"\nimport { newAlbum } from \"../data/Album\"\nimport { Music, newMusic } from \"../data/Music\"\n\nimport { JsonArtist, ToArtist, FromArtist } from \"./JsonArtist\"\nimport { JsonAlbum, ToAlbum, FromAlbum } from \"./JsonAlbum\"\n\n// //////////////////////////////////////////////////\n// adapter\n\nexport function ToMusic( json: JsonMusic ): Music {\n    return {\n        id: json.id,\n        deezerId: json.deezerId,\n        name: json.name,\n        mp3Url: json.mp3Url,\n        album: json.album ? ToAlbum( json.album ) : undefined,\n        artist: json.artist ? ToArtist( json.artist ) : undefined,\n    }\n}\n\nexport function FromMusic( music: Music ): JsonMusic {\n    return {\n        id: music.id,\n        deezerId: music.deezerId,\n        name: music.name,\n        mp3Url: music.mp3Url,\n        album: music.album ? FromAlbum( music.album ) : undefined,\n        artist: music.artist ? FromArtist( music.artist ) : undefined,\n    }\n}\n\n// //////////////////////////////////////////////////\n// json\n\nexport interface JsonMusic {\n    id?: number\n    deezerId?: number\n    name: string\n    mp3Url: string\n    artist?: JsonArtist\n    album?: JsonAlbum\n}","// //////////////////////////////////////////////////\n// import\n\nimport { addQuestion, Game } from \"../data/Game\"\nimport { Music } from \"../data/Music\"\nimport { addAnswer, Question } from \"../data/Question\"\n\nimport { JsonMusic, ToMusic } from \"./JsonMusic\"\n\n// //////////////////////////////////////////////////\n// fetch game\n\nexport async function FetchGame( game: Game ) {\n\n    let requestURL = `${process.env.REACT_APP_API_ROOT_URI}/game/new`\n    requestURL = `${requestURL}?nb_question=${game.settings.nbQuestion}`\n    requestURL = `${requestURL}&nb_answer=${game.settings.nbAnswer}`\n    requestURL = `${requestURL}&nb_player=${game.settings.nbPlayer}`\n    console.log(`[api] requestURL = ${requestURL}`)\n\n    const response = await fetch(requestURL, {method: 'PUT'})\n    if (!response.ok) {\n        const message = `An error has occured while fetching new game: ${response.status} ${response.body}`;\n        throw new Error(message);\n    }\n\n    const jsonResponse = await response.json() as JsonResponse;\n    const jsonGame = jsonResponse.game;\n    \n    for ( const jsonQuestion of jsonGame.questions ) {\n        if ( !jsonQuestion ) {\n            continue\n        }\n        const jsonMusic = jsonQuestion.music\n        const jsonTheme = jsonQuestion.theme\n\n        const music: Music = ToMusic( jsonMusic )\n        const question: Question = addQuestion( game, jsonTheme.title, music )\n\n        for ( const jsonAnswer of jsonQuestion.answers ) {\n            addAnswer( question, jsonAnswer.text, jsonAnswer.hint, jsonAnswer.correct )\n        }\n    }\n}\n\nexport interface JsonResponse {\n    success: boolean\n    game: JsonGame\n}\n\nexport interface JsonGame {\n    id: number\n    players: JsonGamePlayer[]\n    questions: JsonGameQuestion[]\n}\n\nexport interface JsonGamePlayer {\n    id: number\n    name: string\n    active: boolean\n}\n\nexport interface JsonGameQuestion {\n    id: number\n    theme: JsonGameTheme\n    music: JsonMusic\n    answers: JsonGameAnswer[]\n}\n\nexport interface JsonGameTheme {\n    title: string\n}\n\nexport interface JsonGameAnswer {\n    id: number\n    text: string\n    hint: string\n    correct: boolean\n}","\nexport const DEBUG = false\n\nexport const HEADER_KEYBOARD_SHORTCUTS = true\nexport const MUSIC_PLAYER_KEYBOARD_SHORTCUTS = true\n\nexport const MAX_NB_GAME = 4\n\nexport const DEFAULT_NB_PLAYER = 2\nexport const MIN_NB_PLAYER = 2\nexport const MAX_NB_PLAYER = 9\nexport const INCREMENT_NB_PLAYER = 1\nexport const PLAYER_ID_SUFFIX = 9000\n\nexport const DEFAULT_NB_QUESTION = 50\nexport const MIN_NB_QUESTION = 10\nexport const MAX_NB_QUESTION = 99\nexport const INCREMENT_NB_QUESTION = 10\nexport const QUESTION_ID_SUFFIX = 0\n\nexport const DEFAULT_NB_ANSWER_PER_QUESTION = 5\nexport const MIN_NB_ANSWER_PER_QUESTION = 3\nexport const MAX_NB_ANSWER_PER_QUESTION = 6\nexport const INCREMENT_NB_ANSWER_PER_QUESTION = 1\nexport const ANSWER_ID_SUFFIX = 100\n\nexport const ONE_SECOND = DEBUG ? 300 : 1000\nexport const MAX_NB_SECONDS_LOADING = DEBUG ? 10 : 15\nexport const MAX_NB_SECONDS_PLAYING = DEBUG ? 20 : 30\n\nexport const MAX_NB_AVATAR = 20","\nexport enum CardSymbol {\n  HEART = 'HEART',\n  DIAMOND = 'DIAMOND',\n  CLUB = 'CLUB',\n  SPADE = 'SPADE',\n  STAR = 'STAR',\n  CIRCLE = 'CIRCLE',\n  SQUARE = 'SQUARE',\n  TRIANGLE = 'TRIANGLE',\n  CROSS = 'CROSS',\n}  \n\nexport enum CardColor {\n  BLACK = 'BLACK',\n  RED = 'RED',\n  BLUE = 'BLUE',\n  GREEN = 'GREEN',\n  PURPLE = 'PURPLE',\n  YELLOW = 'YELLOW',\n  ORANGE = 'ORANGE',\n  PINK = 'PINK',\n  BROWN = 'BROWN',\n  GRAY = 'GRAY',\n}\n\nexport enum CardSize {\n  XS = 'XS',\n  S = 'S',\n  M = 'M',\n  L = 'L',\n  XL = 'XL',\n}\n\nexport interface Card {\n  readonly symbol: CardSymbol\n  readonly color: CardColor\n  size?: CardSize\n  number?: number\n  value?: string\n}\n\nexport const HeartCard: Card = { symbol: CardSymbol.HEART, color: CardColor.RED }\nexport const DiamondCard: Card = { symbol: CardSymbol.DIAMOND, color: CardColor.RED }\nexport const ClubCard: Card = { symbol: CardSymbol.CLUB, color: CardColor.BLACK }\nexport const SpadeCard: Card = { symbol: CardSymbol.SPADE, color: CardColor.BLACK }\n\nexport const BlueCircleCard: Card = { symbol: CardSymbol.CIRCLE, color: CardColor.BLUE }\nexport const YellowCircleCard: Card = { symbol: CardSymbol.CIRCLE, color: CardColor.YELLOW }\nexport const RedCircleCard: Card = { symbol: CardSymbol.CIRCLE, color: CardColor.RED }\nexport const GreenCircleCard: Card = { symbol: CardSymbol.CIRCLE, color: CardColor.GREEN }\n\nexport const OrangeTriangleCard: Card = { symbol: CardSymbol.TRIANGLE, color: CardColor.ORANGE }\nexport const PurpleTriangleCard: Card = { symbol: CardSymbol.TRIANGLE, color: CardColor.PURPLE }\n\nexport const DefaultCards: Card[] = [ \n  ClubCard, \n  DiamondCard, \n  HeartCard, \n  SpadeCard,\n\n  BlueCircleCard, \n  YellowCircleCard, \n  RedCircleCard, \n  GreenCircleCard,\n  \n  OrangeTriangleCard,\n  PurpleTriangleCard \n]","// //////////////////////////////////////////////////\n// model\n\nimport { DEFAULT_NB_ANSWER_PER_QUESTION, DEFAULT_NB_PLAYER, DEFAULT_NB_QUESTION } from \"./Constants\"\n\nexport interface Settings {\n  nbPlayer: number\n  nbQuestion: number\n  nbAnswer: number\n}\n\nexport type SettingsUpdater = ( settings: Settings ) => Settings\n\n// //////////////////////////////////////////////////\n// create\n\nexport function newSettings( nbPlayer: number = DEFAULT_NB_PLAYER, nbQuestion: number = DEFAULT_NB_QUESTION, nbAnswer: number = DEFAULT_NB_ANSWER_PER_QUESTION ): Settings {\n  return {\n    nbPlayer: nbPlayer,\n    nbQuestion: nbQuestion,\n    nbAnswer: nbAnswer,\n  }\n}","\n// //////////////////////////////////////////////////\n// range\n\nexport function range( nb: number ): number[] {\n    return Array.from( Array( nb ).keys() )\n}\n\nexport function pickIndexes( nbSelected: number, nbTotal: number ): number[] {    \n\n    if ( nbTotal <= nbSelected ) {\n        return shuffle( range( nbTotal ) )\n    }\n\n    var selected = new Set<number>();\n    for( var i = 0; i < nbSelected; i++ ) {\n        var j = Math.random() * nbTotal | 0;\n        while(selected.has(j)){\n            j = Math.random() * nbTotal | 0;\n        }\n        selected.add( j );\n    }\n    return Array.from( selected )\n}\n\nexport function pick<T>( values: T[] ): T {\n    return values[ Math.random() * values.length | 0 ];\n}\n\nexport function shuffle<T>( values: T[] ) {\n    for ( let i = values.length - 1; i > 0; i-- ) {\n        let j = Math.random() * ( i + 1 ) | 0;\n        [ values[ i ], values[ j ] ] = [ values[ j ], values[ i ] ];\n    }\n    return values\n}\n\n// //////////////////////////////////////////////////\n// format\n\nexport function toZeroPadString( value: number, padSize: number ): string {\n    return `${value}`.padStart( padSize, '0' )\n}\n\nexport function toDateString( value: number ): string {\n    if ( value <= 0 ) {\n        return '-'\n    }\n    const date = new Date( value )\n    const year = date.getFullYear()\n    const month = toZeroPadString( date.getMonth() + 1, 2 )\n    const day = toZeroPadString( date.getDate(), 2 )\n    return `${year}-${month}-${day}`\n}\n\nexport function toTimeString( value: number ): string {\n    if ( value <= 0 ) {\n        return '-'\n    }\n    const date = new Date( value )\n    const hours = toZeroPadString( date.getHours(), 2 )\n    const minutes = toZeroPadString( date.getMinutes(), 2 )\n    const seconds = toZeroPadString( date.getSeconds(), 2 )\n    return `${hours}:${minutes}:${seconds}`\n}\n\nexport function toDateTimeString( value: number ): string {\n    if ( value <= 0 ) {\n        return '-'\n    }\n    return `${toDateString(value)} ${toTimeString(value)}`\n}\n\n// //////////////////////////////////////////////////\n// user event\n\nexport type Callback = () => void\nexport type EventCallback = ( event: any ) => void\n\nexport function onUserEvent( callback: Callback ): EventCallback {\n    return ( event: any ) => {\n        callback()\n        event.stopPropagation()\n        event.preventDefault()\n    }\n}\n\n// //////////////////////////////////////////////////\n// key event\n\nexport type KeyCallback = ( key: string ) => boolean\nexport type KeyEventCallback = ( event: any ) => void\n\nexport function onKeyEvent( keyCallback: KeyCallback ): EventCallback {\n    return ( event: any ) => {\n        if ( keyCallback( event.key ) ) {\n            console.log( `key-event [${event.key}] >>> handled! >>> stop propagation!` )    \n            event.stopPropagation()\n            event.preventDefault()\n        } else {\n            console.log( `key-event [${event.key}] >>> propagate...` )    \n        }\n    }\n}\n\n// //////////////////////////////////////////////////\n// value event\n\nexport type ValueCallback = ( value: string ) => void\nexport type ValueEventCallback = ( event: any ) => void\n\nexport function onValueEvent( callback: ValueCallback ): ValueEventCallback {\n    return ( event: any ) => {\n        callback( event.target.value as string )\n        event.stopPropagation()\n        event.preventDefault()\n    }\n}\n","\n// //////////////////////////////////////////////////\n// model\n\nimport { AnswerId } from \"./Answer\"\nimport { AnswerStats } from \"./AnswerStats\"\nimport { QuestionId } from \"./Question\"\n\nexport interface QuestionStats {\n  id: QuestionId\n  score: number\n  answers: AnswerStats[]\n  error: boolean\n}\n\nexport function getAnswerStats( stats: QuestionStats, answerId: AnswerId ): AnswerStats | undefined {  \n  return stats.answers.find( answer => answer.id === answerId )\n}\n\nexport function getOrSetAnswerStats( stats: QuestionStats, answerId: AnswerId ): AnswerStats {  \n  const current = getAnswerStats( stats, answerId )\n  if ( current !== undefined ) {\n    return current\n  }\n  const answerStats: AnswerStats = {\n    id: answerId,\n    success: false,\n    score: 0\n  }\n  stats.answers.push( answerStats )\n  return answerStats\n}\n\n\n","import { AnswerId } from './Answer'\nimport { AnswerStats } from './AnswerStats'\nimport { QuestionId } from './Question'\nimport { getAnswerStats, getOrSetAnswerStats, QuestionStats } from './QuestionStats'\n\n// //////////////////////////////////////////////////\n// model\n\nexport interface PlayerStats {\n  score: number\n  nbAnswer: number\n  nbSuccess: number\n  nbFailure: number\n  nbMiss: number,\n  nbError: number,\n  questions: QuestionStats[]\n}\n\nexport interface PlayerVizualiationScoreData {\n  x: string // question number\n  y: number // player score\n  tooltip: string\n}\n\n// //////////////////////////////////////////////////\n// create\n\nexport function newPlayerStats(): PlayerStats {\n  return {\n    score: 0,\n    nbAnswer: 0,\n    nbSuccess: 0,\n    nbFailure: 0,\n    nbMiss: 0,\n    nbError: 0,\n    questions: [],\n  }\n}\n\nexport function getQuestionStats( stats: PlayerStats, questionId: QuestionId ): QuestionStats | undefined {  \n  return stats.questions.find( question => question.id === questionId )\n}\n\nexport function getQuestionAnswerStats( stats: PlayerStats, questionId: QuestionId, answerId: AnswerId ): AnswerStats | undefined {  \n  const questionStats = getQuestionStats( stats, questionId )\n  return questionStats ? getAnswerStats( questionStats, answerId ) : undefined\n}\n\nexport function getOrSetQuestionStats( stats: PlayerStats, questionId: QuestionId ): QuestionStats {  \n  const current = getQuestionStats( stats, questionId )\n  if ( current !== undefined ) {\n    return current\n  }\n  const questionStats: QuestionStats = {\n    id: questionId,\n    score: 0,\n    answers: [],\n    error: false\n  }\n  stats.questions.push( questionStats )\n  return questionStats\n}\n\nexport function flagAnswerAsCorrect( stats: PlayerStats, questionId: QuestionId, answerId: AnswerId, nbPoint: number ) {\n  \n  // global\n  stats.nbAnswer += 1\n  stats.nbSuccess++\n  stats.score += nbPoint\n  \n  // per question\n  const questionStats = getOrSetQuestionStats( stats, questionId )\n  questionStats.score += nbPoint\n\n  // per asnwer\n  const answerStats = getOrSetAnswerStats( questionStats, answerId )\n  answerStats.success = true\n  answerStats.score = nbPoint\n}\n\nexport function flagAnswerAsIncorrect( stats: PlayerStats, questionId: QuestionId, answerId: AnswerId, nbPoint: number ) {\n  \n  // global\n  stats.nbAnswer += 1\n  stats.nbFailure++\n  stats.score += nbPoint // should be negative\n  \n  // per question\n  const questionStats = getOrSetQuestionStats( stats, questionId )\n  questionStats.score += nbPoint // should be negative\n\n  // per asnwer\n  const answerStats = getOrSetAnswerStats( questionStats, answerId )\n  answerStats.success = false\n  answerStats.score = nbPoint // should be negative\n}\n\nexport function flagQuestionAsMiss( stats: PlayerStats, questionId: QuestionId ) {\n  \n  // global\n  stats.nbMiss++\n  stats.score += 0\n  \n  // per question\n  const questionStats = getOrSetQuestionStats( stats, questionId )\n  questionStats.score = 0\n}\n\nexport function flagQuestionAsError( stats: PlayerStats, questionId: QuestionId ) {\n  \n  // global\n  stats.nbError++\n  stats.score += 0\n  \n  // per question\n  const questionStats = getOrSetQuestionStats( stats, questionId )\n  questionStats.score = 0\n  questionStats.error = true\n}\n\nexport function computeVizualiationScoreData( stats: PlayerStats ): PlayerVizualiationScoreData[] {\n  const data:PlayerVizualiationScoreData[] = []\n  \n  let questionNumber = 0\n  let intermediateScore = 0\n\n  data.push({\n    x: ` `,\n    y: intermediateScore,\n    tooltip : `${intermediateScore} (start)`\n  })\n\n  for ( const question of stats.questions ) {\n    questionNumber++\n    intermediateScore += question.score\n    \n    let tooltip = ''\n    if ( question.error ) {\n      tooltip = `${intermediateScore} (error)`\n    } else if ( question.answers.length == 0 ) {\n      tooltip = `${intermediateScore} (miss)`\n    } else if ( question.score >= 0 ) {\n      tooltip = `${intermediateScore} (+${question.score})`\n    } else {\n      tooltip = `${intermediateScore} (${question.score})`\n    }\n    \n    data.push({\n      x: `Q${questionNumber}`,\n      y: intermediateScore,\n      tooltip : tooltip\n    })\n  }\n  return data\n}\n","\n// //////////////////////////////////////////////////\n// model\n\nexport interface Artist {\n  id?: number\n  deezerId?: number\n  name: string\n  imgUrl?: string\n}\n\n// //////////////////////////////////////////////////\n// create\n\nexport function newArtist( name: string, imgUrl?: string ): Artist {\n  return {\n    name: name,\n    imgUrl: imgUrl,\n  }\n}","import { Album } from './Album'\nimport { Artist } from './Artist'\n\nimport musicBackground from '../static/music-black.png'\n\n// //////////////////////////////////////////////////\n// model\n\nexport interface Music {\n  id?: number\n  deezerId?: number\n  name: string\n  mp3Url: string \n  artist?: Artist\n  album?: Album  \n}\n\n// //////////////////////////////////////////////////\n// create\n\nexport function newMusic( name: string, mp3Url: string, artist?: Artist, album?: Album ): Music {\n  return {\n    name: name,\n    mp3Url: mp3Url,\n    artist: artist,\n    album: album,\n  }\n}\n\n// //////////////////////////////////////////////////\n// helper\n\nexport function getImgUrl( music: Music ): string | undefined {\n  if ( music && music.album && music.album.imgUrl ) {\n    return music.album.imgUrl\n  }\n  if ( music && music.artist && music.artist.imgUrl ) {\n    return music.artist.imgUrl\n  }\n  return undefined\n}\n\nexport function getAlbumImgUrl( music: Music ): string | undefined {\n  if ( music && music.album && music.album.imgUrl ) {\n    return music.album.imgUrl\n  }\n  return undefined\n}\n\nexport function getArtistImgUrl( music: Music ): string | undefined {\n  if ( music && music.artist && music.artist.imgUrl ) {\n    return music.artist.imgUrl\n  }\n  return undefined\n}","// //////////////////////////////////////////////////\n// import\n\nimport { newAlbum } from \"./Album\"\nimport { newArtist } from \"./Artist\"\nimport { addQuestion, Game } from \"./Game\"\nimport { newMusic } from \"./Music\"\nimport { addAnswer, Question } from \"./Question\"\nimport { Settings } from \"./Settings\"\nimport { pick, pickIndexes, range, shuffle } from \"./Util\"\nimport legacyJson from '../static/legacy.json';\nimport { Shuffle } from \"@mui/icons-material\"\n\n// //////////////////////////////////////////////////\n// dummy game\n\nconst fullMusic = newMusic(\n    \"Harder, Better, Faster, Stronger & Pêcheur\", \n    \"https://cdns-preview-d.dzcdn.net/stream/c-deda7fa9316d9e9e880d2c6207e92260-8.mp3\", \n    newArtist( \n        \"Daft Punk & Pêcheur\", \n        \"https://e-cdns-images.dzcdn.net/images/artist/f2bc007e9133c946ac3c3907ddc5d2ea/56x56-000000-80-0-0.jpg\"\n    ), \n    newAlbum( \n        \"Discovery & Pêcheur\", \n        \"https://e-cdns-images.dzcdn.net/images/cover/2e018122cb56986277102d2041a592c8/56x56-000000-80-0-0.jpg\"\n    )\n)\n\nconst noAlbumMusic = newMusic(\n    \"Crescendolls\", \n    \"https://cdns-preview-0.dzcdn.net/stream/c-02585dc790f2904c4e870cb3bcecfcf3-8.mp3\", \n    newArtist( \n        \"Daft Punk\", \n        \"https://e-cdns-images.dzcdn.net/images/artist/f2bc007e9133c946ac3c3907ddc5d2ea/56x56-000000-80-0-0.jpg\"\n    ), \n    undefined\n) \n\nconst noPictureMusic = newMusic(\n    \"Superheroes\", \n    \"https://cdns-preview-3.dzcdn.net/stream/c-3d8caae0a1c59f417f31bb747c43818b-7.mp3\", \n    newArtist( \n        \"Daft Punk\", \n        undefined\n    ), \n    undefined\n)\n\nconst shortMusic = newMusic(\n    \"Short\", \n    \"http://gregory.valigiani.free.fr/amnezic/Rem2-14-10.mp3\", \n    newArtist( \n        \"Short\", \n        undefined\n    ), \n    undefined\n) \n\nconst failedMusic = newMusic(\n    \"Failed\",\n    \"http://gregory.valigiani.free.fr/amnezic/Clash%20-%20Should%20I%20Stay%20Or%20Go.mp3\",\n    newArtist( \n        \"Failed\", \n        undefined\n    ), \n    undefined\n)\n\nconst dummyMusics = [ fullMusic, noAlbumMusic, noPictureMusic, shortMusic, failedMusic ]\n\nexport function buildDummyQuestions( game: Game ): Game {\n\n    const nbQuestion = game.settings.nbQuestion\n    const nbAnswer = game.settings.nbAnswer\n    range( nbQuestion ).forEach( i => {\n        const music = dummyMusics[ i % dummyMusics.length ]\n        const artist = music.artist ? music.artist.name : `artist ${i+1}`\n        const question: Question = addQuestion( game, artist, music )\n\n        for ( let j = 0 ; j < nbAnswer ; j++ ) {\n        if ( i % nbAnswer == j ) {\n            addAnswer( question, artist, music.name, true )\n        } else {\n            addAnswer( question, `artist ${j+1}`, `hint ${j+1}`, false )\n        }\n        }\n    } )\n\n    return game\n}\n\n// //////////////////////////////////////////////////\n// test game\n\nexport function buildTestQuestions( game: Game ): Game {\n\n    const genre = legacyJson.genres.find( genre => genre.genre === \"Bruitages\" );\n    if ( genre ) {\n        const musics = genre.musics || []\n\n        const nbQuestion = game.settings.nbQuestion\n        const nbAnswer = game.settings.nbAnswer\n        range( nbQuestion ).map( i => i+1 ).forEach( i => {\n\n            const indexes = pickIndexes( nbAnswer, musics.length )\n            const correctIndex = pick( indexes )\n            const correctMusic = musics[ correctIndex ]\n            const artist = newArtist( correctMusic.artist.name )\n            const music = newMusic( correctMusic.title, correctMusic.mp3Url, artist, undefined )\n            const question: Question = addQuestion( game, genre.genre, music )\n\n            for ( const index of indexes ) {\n                const music = musics[ index ]\n                addAnswer( question, music.artist.name, music.title, index === correctIndex )\n            }\n        } )\n    }\n\n    return game\n}\n\n// //////////////////////////////////////////////////\n// legacy game\n\nexport function buildLegacyQuestions( game: Game ): Game {\n    \n    const nbQuestion = game.settings.nbQuestion\n    const nbAnswer = game.settings.nbAnswer\n\n    const nbMusic = legacyJson.genres.map( genre => genre.musics.length ).reduce( ( previous, current ) => previous + current, 0 )\n    const questionIndexes = pickIndexes( nbQuestion, nbMusic )\n\n    for ( const questionIndex of questionIndexes ) {\n\n        console.log(\"questionIndex: %d\",questionIndex)\n\n        let startIndex = 0\n        for ( const genre of legacyJson.genres ) {\n            if ( genre.musics.length === 0 ) {\n                continue\n            }\n            const endIndex = startIndex + genre.musics.length - 1\n            console.log(\"   startIndex: %d - length: %d - endIndex: %d\",startIndex,genre.musics.length, endIndex)\n            if ( endIndex < questionIndex ) {\n                startIndex = endIndex + 1\n                continue\n            }\n\n            const musics = genre.musics || []\n            const correctIndex = questionIndex - startIndex\n            console.log(\"   correctIndex: %d - questionIndex: %d - startIndex: %d\",correctIndex,questionIndex, startIndex)\n            const correctMusic = musics[ correctIndex ]\n            console.log(correctMusic.artist)\n            const artist = newArtist( correctMusic.artist && correctMusic.artist.name ? correctMusic.artist.name : '???' )\n            const musicURL = process.env.REACT_APP_LEGACY_ROOT_URI + correctMusic.mp3Url\n            const music = newMusic( correctMusic.title || '???', musicURL, artist, undefined )\n            const question: Question = addQuestion( game, genre.genre, music )\n\n            const indexes = pickIndexes( nbAnswer + 1, musics.length ).filter( index => index != correctIndex ).slice( 0, nbAnswer - 1 )\n            indexes.push( correctIndex )\n            shuffle( indexes )\n\n            for ( const index of indexes ) {\n                const music = musics[ index ]\n                addAnswer( question, music.artist && music.artist.name ? music.artist.name : '???', music.title || '???', index === correctIndex )\n            }\n\n            break\n        }\n        \n    }\n\n    return game\n}","\n// //////////////////////////////////////////////////\n// model\n\nexport interface Album {\n  id?: number\n  deezerId?: number\n  name: string\n  imgUrl?: string\n}\n\n// //////////////////////////////////////////////////\n// create\n\nexport function newAlbum( name: string, imgUrl?: string ): Album {\n  return {\n    name: name,\n    imgUrl: imgUrl,\n  }\n}","import { customAlphabet } from 'nanoid'\n\nimport { FetchGame } from \"../client/FetchGame\"\n\nimport { newSettings, Settings, SettingsUpdater } from './Settings'\nimport { Player, PlayerId, PlayerUpdater } from './Player'\nimport { addAnswer, isCorrect, Question, QuestionId, QuestionUpdater } from './Question'\nimport { newArtist } from './Artist'\nimport { newAlbum } from './Album'\nimport { range, toTimeString, toZeroPadString } from './Util'\nimport { Music, newMusic } from './Music'\nimport { GameStats, newGameStats } from './GameStats'\nimport { Card, DefaultCards } from './Card'\nimport { flagAnswerAsCorrect, flagAnswerAsIncorrect, flagQuestionAsError, flagQuestionAsMiss, newPlayerStats } from './PlayerStats'\nimport { ANSWER_ID_SUFFIX, DEBUG, DEFAULT_NB_ANSWER_PER_QUESTION, DEFAULT_NB_PLAYER, DEFAULT_NB_QUESTION, MAX_NB_GAME, PLAYER_ID_SUFFIX, QUESTION_ID_SUFFIX } from './Constants'\nimport { buildDummyQuestions, buildLegacyQuestions, buildTestQuestions } from './Quizz'\nimport { AvatarId } from './Avatar'\n\n// //////////////////////////////////////////////////\n// model\n\nexport const newGameId = customAlphabet( 'ABCDEFGHIJKLMNPQRSTUVWXYZ', 4 )\nexport const newGameCode = customAlphabet( '0123456789', 4 )\n\nexport enum GameStep {\n  SETTINGS = 'SETTINGS',\n  PLAYERS = 'PLAYERS',\n  QUIZZ = 'QUIZZ',\n  SCORES = 'SCORES',\n}\n\nexport type GameId = string\n\nexport interface Game {\n  readonly id: string\n  readonly code: string\n  readonly created: number\n  updated: number\n  step: GameStep\n  settings: Settings\n  players: Player[]\n  questions: Question[]\n  started: boolean\n  questionNumber?: number\n  ended: boolean\n  stats?: GameStats\n}\n\nexport type GameUpdater = ( game: Game ) => Game\nexport type OnGameUpdate = ( gameId: GameId, gameUpdater: GameUpdater ) => void\nexport type OnPlayerUpdate = ( gameId: GameId, playerId: PlayerId, gameUpdater: GameUpdater ) => void\n// export type OnQuestionUpdate = ( gameId: GameId, playerId: PlayerId, gameUpdater: GameUpdater ) => void\n\n// //////////////////////////////////////////////////\n// create\n\nexport function newGame( nbPlayer: number = DEFAULT_NB_PLAYER, nbQuestion: number = DEFAULT_NB_QUESTION, nbAnswer: number = DEFAULT_NB_ANSWER_PER_QUESTION ): Game {\n  return {\n    id: newGameId(),  \n    code: newGameCode(),  \n    created: Date.now(),  \n    updated: Date.now(),\n    step: GameStep.SETTINGS,\n    settings: newSettings( nbPlayer, nbQuestion, nbAnswer ),\n    players: [],\n    questions: [],\n    started: false,\n    ended: false,\n  }\n}\n\n// //////////////////////////////////////////////////\n// add\n\nexport function addPlayer( game: Game, card: Card ): Player {\n  const number = game.players.length + 1\n  const current: Player = {\n    id: PLAYER_ID_SUFFIX + number, \n    number: number,\n    avatarId: number as AvatarId,\n    name: `Player ${toZeroPadString( number, 2 )}`,\n    status: 'active',\n    card: card,\n    stats: newPlayerStats(),\n  }\n  game.players.push( current )\n  console.log( current )\n  return current\n}\n\nexport function addQuestion( game: Game, title: string, music: Music ): Question {\n  const number = game.questions.length + 1\n  const current: Question = {\n    id: ( QUESTION_ID_SUFFIX + number ) * ANSWER_ID_SUFFIX,\n    number: number, \n    status: 'not-played',\n    title: title,\n    music: music,\n    answers: [],\n    playerAnswers: [],\n  }\n  if ( game.questions.length > 0 ) {\n    const previous: Question = game.questions[ game.questions.length - 1 ]\n    previous.nextNumber = current.number\n    current.previousNumber = previous.number\n  }\n  game.questions.push( current )\n  return current\n}\n\n// //////////////////////////////////////////////////\n// update\n\nexport function updateSettings( update: SettingsUpdater ): GameUpdater {\n  return ( game: Game ) => {\n    return {\n      ...game,\n      settings: update( game.settings ),\n    }\n  }\n}\n\nexport function updatePlayer( playerId: PlayerId, update: PlayerUpdater ): GameUpdater {\n  return ( game: Game ) => {\n    if ( !game.players ) {\n      return game\n    }\n    return {\n      ...game,\n      players: game.players.map( player => player.id == playerId ? update( player ) : player ),\n    }\n  }\n}\n\nexport function updateQuestion( questionId: QuestionId, update: QuestionUpdater ): GameUpdater {\n  return ( game: Game ) => {\n    if ( !game.questions ) {\n      return game\n    }\n    return {\n      ...game,\n      questions: game.questions.map( question => question.id == questionId ? update( question ) : question ),\n    }\n  }\n}\n\n// //////////////////////////////////////////////////\n// store\n\nconst GAMES = 'games'\n\nexport function clearGames() {\n  localStorage.removeItem( GAMES )\n}\n\nexport function sortGames( games: Game[] ): Game[] {\n  const sortedGames = [ ...games ].sort( ( left: Game, right: Game ): number => {\n    return right.updated - left.updated\n  } )\n  return sortedGames\n}\n\nexport function sliceGames( games: Game[] ): Game[] {\n  const slicedGames = games.slice( 0, MAX_NB_GAME )\n  return slicedGames\n}\n\nexport function sanitizeGames( games: Game[] ): Game[] {\n  return sliceGames( sortGames( games ) )\n}\n\nexport function storeGames( games: Game[] ): Game[] {\n  const sanitizedGames = games.slice( 0, MAX_NB_GAME )\n  localStorage.setItem( GAMES, JSON.stringify( sanitizedGames ) )\n  return sanitizedGames\n}\n\nexport function loadGames(): Game[] {\n  const games: Game[] = JSON.parse( localStorage.getItem( GAMES ) || '[]' ) || []  \n  return sortGames( games )\n}\n\n// //////////////////////////////////////////////////\n// select\n\nexport function selectGame( games: Game[], gameId: string | undefined ): Game | undefined {\n  if ( !gameId ) {\n    return undefined\n  }\n  const game = gameId ? loadGames().find( g => g.id == gameId ) : undefined\n  console.log(`[select] game #${gameId} : ${ game !== undefined ? 'OK' : 'KO' }`)\n  return game\n}\n\nexport function selectQuestion( game: Game | undefined, questionParam: string | undefined ): Question | undefined {\n  if ( !game || !questionParam ) {\n    return undefined\n  }\n  const questionNumber: number = parseInt( questionParam )\n  const question = game.questions && questionNumber ? game.questions.find( question => question.number == questionNumber ) : undefined\n  console.log(`[select] question #${questionNumber} : ${ question !== undefined ? 'OK' : 'KO' }`)\n  return question\n}\n\n// //////////////////////////////////////////////////\n// state\n\nexport function hasPlayers( game: Game ): boolean {\n  return ( game !== undefined && game.players !== undefined && game.players.length > 0 )\n}\n\nexport function hasQuestions( game: Game ): boolean {\n  return ( game !== undefined && game.questions !== undefined && game.questions.length > 0 )\n}\n\nexport function isSetUp( game: Game ): boolean {\n  return hasPlayers( game ) && hasQuestions( game )\n}\n\nexport function isSettingsPageDisabled( game: Game | undefined ): boolean {\n  return ( game === undefined ) || game.ended || isSetUp( game ) \n}\n\nexport function isPlayersPageDisabled( game: Game | undefined ): boolean {\n  return ( game === undefined ) || game.ended || !isSetUp( game ) \n}\n\nexport function isQuizzPageDisabled( game: Game | undefined ): boolean {\n  return ( game === undefined ) || game.ended || !isSetUp( game ) \n}\n\nexport function isScoresPageDisabled( game: Game | undefined ): boolean {\n  return ( game === undefined ) || !game.started || !isSetUp( game )\n}\n\nexport function OnStep( gameStep: GameStep ): GameUpdater {\n  return ( game: Game ): Game => {\n      console.log( `[on-step] ${game.id} - ${gameStep}` )\n      \n      //\n      // move to new step\n      //\n    \n      game.step = gameStep\n    \n      return game\n  }\n}\n\nexport function onSetUp( game: Game ): Game {\n  console.log( `[on-set-up] ${game.id}` )\n\n  //\n  // build questions ( based on game type )\n  //\n\n  console.log(process.env)\n  console.log(`game type = ${process.env.REACT_APP_GAME_TYPE}`)\n  if ( process.env.REACT_APP_GAME_TYPE == 'dummy' ) {\n    game = buildDummyQuestions( game )\n  } else if ( process.env.REACT_APP_GAME_TYPE == 'test' ) {\n    game = buildTestQuestions( game )\n  } else if ( process.env.REACT_APP_GAME_TYPE == 'legacy' ) {\n    game = buildLegacyQuestions( game )\n  } else if ( process.env.REACT_APP_GAME_TYPE == 'api' ) {\n    FetchGame( game )\n  } else {\n    console.log( `[on-set-up] missing game type >>> FALLBACK to 'legacy'` )\n    game = buildLegacyQuestions( game )\n  }\n\n  //\n  // create default players\n  //\n\n  const nbPlayer = game.settings.nbPlayer\n  range( nbPlayer ).forEach( index => addPlayer( game, DefaultCards[ index % DefaultCards.length ] ) )  \n  \n  //\n  // finally move to players step\n  //\n\n  game.step = GameStep.PLAYERS\n\n  return game\n}\n\nexport function onStartGame( game: Game ): Game {\n  console.log( `[on-start-game] ${game.id}` )\n\n  if ( !game.questions || game.questions.length == 0 ) {\n    return game\n  }\n\n  //\n  // flag game as started\n  //\n\n  game.started = true\n\n  //\n  // select first question\n  //\n\n  game.questionNumber = game.questions[0].number\n\n  //\n  // prepare game stats\n  //\n\n  game.stats = newGameStats( game.settings.nbQuestion ) \n  \n  //\n  // finally move to quizz step\n  //\n\n  game.step = GameStep.QUIZZ\n\n  return game\n}\n\nexport function onAnswers( game: Game, question: Question ): GameUpdater {\n  return ( game: Game ): Game => {\n    console.log( `[on-answers] ${game.id} - ${question.number}` )\n\n    const nbPlayers = game.players.length\n    let nbPoint = nbPlayers\n\n    for ( const playerAnswer of question.playerAnswers ) {\n      const player = game.players.find( player => player.id === playerAnswer.playerId )\n      if ( player ) {\n        const correct = isCorrect( question, playerAnswer )\n        if ( correct ) {\n          flagAnswerAsCorrect( player.stats, question.id, playerAnswer.answerId, nbPoint )\n        } else {\n          flagAnswerAsIncorrect( player.stats, question.id, playerAnswer.answerId, -nbPoint )\n        }\n      }\n      if ( nbPoint > 1 ) {\n        nbPoint--\n      }\n    }\n\n    for ( let player of game.players ) {\n      let miss = true\n      for ( const playerAnswer of question.playerAnswers ) {\n        if ( player.id === playerAnswer.playerId ) {\n          miss = false\n          break\n        }\n      }\n      if ( miss ) {\n        flagQuestionAsMiss( player.stats, question.id )\n      }\n    }\n\n    return game\n  }\n}\n\nexport function onErrorAnswers( game: Game, question: Question ): GameUpdater {\n  return ( game: Game ): Game => {\n    console.log( `[on-question-error] ${game.id} - ${question.number}` )\n\n    for ( const player of game.players ) {\n      flagQuestionAsError( player.stats, question.id )\n    }\n\n    return game\n  }\n}\n\nexport function onQuestionNumber( questionNumber: number ): GameUpdater {\n  return ( game: Game ): Game => {\n    console.log( `[on-question] ${game.id} - ${questionNumber}` )\n\n    if ( !game.questions ) {\n      throw Error( \"missing questions!\" )\n    }\n    const question = game.questions.find( question => question.number === questionNumber )\n    if ( !question ) {\n      throw Error( \"unknwon question!\" )\n    }\n\n    //\n    // update stats\n    //\n\n    if ( game.stats ) {\n      game.stats.nbCompleted++\n      game.stats.progress = Math.ceil( game.stats.nbCompleted * 100 / game.stats.nbQuestion )\n    }\n\n    //\n    // move to next question\n    //\n\n    game.questionNumber = question.number\n\n    return game\n  }\n}\n\nexport function onEndGame( game: Game ): Game {\n  console.log( `[on-end-game] ${game.id}` )\n\n  //\n  // flag game as ended\n  //\n\n  game.ended = true\n  \n  //\n  // finally move to scores step\n  //\n\n  game.step = GameStep.SCORES\n\n  return game\n}\n\n","\n// //////////////////////////////////////////////////\n// model\n\nexport interface GameStats {\n  readonly nbQuestion: number\n  nbCompleted: number\n  progress: number\n}\n\n// //////////////////////////////////////////////////\n// create\n\nexport function newGameStats( nbQuestion: number ): GameStats {\n  return {\n    nbQuestion: nbQuestion,\n    nbCompleted: 0,  \n    progress: 0,\n  }\n}\n","import { Game, GameStep } from './Game'\n\n// //////////////////////////////////////////////////\n// navigate\n\nexport function toAdminThemesPage(): string {\n  return `/admin/theme`\n}\n\nexport function toAdminThemePage( themeId: number ): string {\n  return `/admin/theme/${themeId}`\n}\n\nexport function toHomePage(): string {\n  return `/`\n}\n\nexport function toSettingsPage( game: Game ): string {\n  return `/game/${game.id}/settings`\n}\n\nexport function toPlayersPage( game: Game ): string {\n  return `/game/${game.id}/players`\n}\n\nexport function toQuizzPage( game: Game ): string {\n  if ( !game.questionNumber ) {\n    return `/game/${game.id}/start`    \n  }\n  return `/game/${game.id}/question/${game.questionNumber}`\n}\n\nexport function toScoresPage( game: Game ): string {\n  return `/game/${game.id}/scores`\n}\n\nexport function toGamePage( game: Game | undefined ): string {\n  if ( game ) {\n    switch ( game.step ) {\n      case GameStep.SETTINGS:\n        return toSettingsPage( game )\n      case GameStep.PLAYERS:\n        return toPlayersPage( game )\n      case GameStep.QUIZZ:\n        return toQuizzPage( game )\n      case GameStep.SCORES:\n        return toScoresPage( game )\n    }  \n  }\n  return toHomePage()\n}","import React from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nimport AppBar from '@mui/material/AppBar'\nimport Box from '@mui/material/Box'\nimport Toolbar from '@mui/material/Toolbar'\nimport IconButton from '@mui/material/IconButton'\n\nimport SkipPreviousIcon from '@mui/icons-material/SkipPrevious'\nimport SkipNextIcon from '@mui/icons-material/SkipNext'\nimport MenuIcon from '@mui/icons-material/Menu'\n\nimport { Game, GameStep, OnGameUpdate, OnStep } from '../data/Game'\nimport { isSettingsPageDisabled, isPlayersPageDisabled, isQuizzPageDisabled, isScoresPageDisabled } from '../data/Game'\nimport { toHomePage } from '../data/Navigate'\nimport { onKeyEvent, onUserEvent } from '../data/Util'\nimport {  Group, Home, MilitaryTech, MusicNote, Settings } from '@mui/icons-material'\nimport { ListItemIcon, ListItemText, Menu, MenuItem } from '@mui/material'\nimport { HEADER_KEYBOARD_SHORTCUTS } from '../data/Constants'\n\ninterface Props {\n    title?: string\n    step?: GameStep\n    game?: Game\n    updateGame?: OnGameUpdate\n    onPrevious?: () => void\n    onNext?: () => void\n}\n\nconst Header = ( props: Props ) => {\n    const { title, step, game, updateGame, onPrevious, onNext } = props\n\n    const navigate = useNavigate()\n\n    // title helpers\n\n    const homeTitle = 'Home'\n    const settingsTitle = 'Settings'\n    const playersTitle = 'Players'\n    const quizzTitle = 'Quizz'\n    const scoresTitle = 'Scores'\n\n    // selected helpers\n\n    const isHomeSelected = step === undefined\n    const isSettingsSelected = step == GameStep.SETTINGS\n    const isPlayersSelected = step == GameStep.PLAYERS\n    const isQuizzSelected = step == GameStep.QUIZZ\n    const isScoresSelected = step == GameStep.SCORES\n\n    // disabled helpers\n\n    const isHomeDisabled = false\n    const isSettingsDisabled = isSettingsPageDisabled( game )\n    const isPlayersDisabled = isPlayersPageDisabled( game )\n    const isQuizzDisabled = isQuizzPageDisabled( game )\n    const isScoresDisabled = isScoresPageDisabled( game )\n\n    // update helpers\n\n    const updateGameStep = ( gameStep: GameStep ) => {\n        if ( game && updateGame ) {\n            updateGame( game.id, OnStep( gameStep ) )\n        }\n    }\n\n    // user events\n\n    const onHomePage = !isHomeSelected ? onUserEvent( () => navigate( toHomePage() ) ) : undefined\n    const onSettingsPage = !isSettingsSelected ? onUserEvent( () => updateGameStep( GameStep.SETTINGS ) ) : undefined\n    const onPlayersPage = !isPlayersSelected ? onUserEvent( () => updateGameStep( GameStep.PLAYERS ) ) : undefined\n    const onQuizzPage = !isQuizzSelected ? onUserEvent( () => updateGameStep( GameStep.QUIZZ ) ) : undefined\n    const onScoresPage = !isScoresSelected ? onUserEvent( () => updateGameStep( GameStep.SCORES ) ) : undefined\n\n    // keyboard shortcuts\n\n    if ( HEADER_KEYBOARD_SHORTCUTS ) {\n\n        const handleKeyPress = React.useCallback( onKeyEvent( ( key: string ): boolean => {\n            switch ( key ) {\n                case 'ArrowLeft':\n                    if ( onPrevious ) {\n                        console.log( `header >>> key \"${key}\" >>> onPrevious()`);\n                        onPrevious();\n                        return true;\n                    }\n                    break;\n                case 'ArrowRight':\n                    if ( onNext ) {\n                        console.log( `header >>> key \"${key}\" >>> onNext()`);\n                        onNext();\n                        return true;\n                    }\n                    break;\n            } \n            return false;\n        } ), [ onPrevious, onNext ] );\n        \n        React.useEffect( () => {\n            document.addEventListener( 'keydown', handleKeyPress );\n            return () => {\n                document.removeEventListener( 'keydown', handleKeyPress );\n            };\n        }, [ handleKeyPress ] );\n    }\n\n    // menu \n\n    const [ menuElement, setMenuElement ] = React.useState( null );\n    const open = Boolean( menuElement );\n    const onMenuOpen = ( event: any ) => {\n        setMenuElement( event.currentTarget );\n    };\n    const onMenuClose = () => {\n        setMenuElement( null );\n    };\n\n    // title \n\n    const finalTitle = title ? title : \n                        isHomeSelected ? homeTitle : \n                        isSettingsSelected ? settingsTitle : \n                        isPlayersSelected ? playersTitle : \n                        isQuizzSelected ? quizzTitle : \n                        isScoresSelected ? scoresTitle : ''\n\n    return (\n        <Box className=\"header\" sx={{ flexGrow: 1 }} style={{ marginBottom: '20px' }}>\n            <AppBar position=\"static\" color=\"transparent\">\n                <Toolbar>\n                    <div style={{ width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n\n                        {/* menu */}\n\n                        <div>\n\n                            { game && (\n                                <>\n\n                                    {/* icon */}\n        \n                                    <IconButton\n                                        id=\"menu-button\"\n                                        aria-label=\"menu\"\n                                        aria-controls={ open ? 'basic-menu' : undefined }\n                                        aria-expanded={ open ? 'true' : undefined }\n                                        aria-haspopup=\"true\"\n                                        onClick={onMenuOpen}\n                                    >\n                                        <MenuIcon />\n                                    </IconButton>\n        \n                                    {/* menu items */}\n        \n                                    <Menu\n                                        id=\"basic-menu\"\n                                        anchorEl={menuElement}\n                                        open={open}\n                                        onClose={onMenuClose}\n                                        MenuListProps={{\n                                        'aria-labelledby': 'basic-button',\n                                        }}\n                                    >\n        \n                                        {/* home */}\n        \n                                        <MenuItem selected={isHomeSelected} disabled={isHomeDisabled} onClick={onHomePage}>\n                                            <ListItemIcon>\n                                                <Home fontSize=\"small\" />\n                                            </ListItemIcon>\n                                            <ListItemText>{homeTitle}</ListItemText>\n                                        </MenuItem>\n        \n                                        {/* settings */}\n        \n                                        <MenuItem selected={isSettingsSelected} disabled={isSettingsDisabled} onClick={onSettingsPage}>\n                                            <ListItemIcon>\n                                                <Settings fontSize=\"small\" />\n                                            </ListItemIcon>\n                                            <ListItemText>{settingsTitle}</ListItemText>\n                                        </MenuItem>\n        \n                                        {/* players */}\n        \n                                        <MenuItem selected={isPlayersSelected} disabled={isPlayersDisabled} onClick={onPlayersPage}>\n                                            <ListItemIcon>\n                                                <Group fontSize=\"small\" />\n                                            </ListItemIcon>\n                                            <ListItemText>{playersTitle}</ListItemText>\n                                        </MenuItem>\n        \n                                        {/* quizz */}\n        \n                                        <MenuItem selected={isQuizzSelected} disabled={isQuizzDisabled} onClick={onQuizzPage}>\n                                            <ListItemIcon>\n                                                <MusicNote fontSize=\"small\" />\n                                            </ListItemIcon>\n                                            <ListItemText>{quizzTitle}</ListItemText>\n                                        </MenuItem>\n        \n                                        {/* scores */}\n        \n                                        <MenuItem selected={isScoresSelected} disabled={isScoresDisabled} onClick={onScoresPage}>\n                                            <ListItemIcon>\n                                                <MilitaryTech fontSize=\"small\" />\n                                            </ListItemIcon>\n                                            <ListItemText>{scoresTitle}</ListItemText>\n                                        </MenuItem>\n        \n                                    </Menu>\n                                \n                                </>\n                            ) }\n\n                        </div>\n\n                        {/* title */}\n\n                        <div style={{ fontWeight: 'bold', textTransform: 'uppercase' }}>{finalTitle}</div>\n\n                        {/* Previous & Next */}\n                        \n                        <div>\n\n                            { onPrevious && (\n                                <IconButton \n                                    aria-label=\"Previous\" \n                                    color=\"info\"\n                                    onClick={onPrevious}\n                                >\n                                    <SkipPreviousIcon />\n                                </IconButton>\n                            ) }\n                            \n                            { onNext && (\n                                <IconButton \n                                    aria-label=\"Next\" \n                                    color=\"info\"\n                                    onClick={onNext}\n                                >\n                                    <SkipNextIcon />\n                                </IconButton>\n                            ) }\n\n                        </div>\n\n                    </div>\n\n                </Toolbar>\n            </AppBar>\n        </Box>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport Typography from '@mui/material/Typography';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\n\nimport { Game } from '../data/Game'\n\ninterface Props {\n}\n\nconst GameFooter = ( props: Props ) => {\n\n    return (\n        <>\n            {/* <Box className=\"footer\" sx={{ marginTop: '20px', flexGrow: 1 }}>\n                <AppBar position=\"static\" color=\"transparent\">\n                    <Toolbar style={{ width: '100%', textAlign: 'center' }}>\n                        <Typography variant=\"caption\" display=\"block\" color=\"GrayText\" gutterBottom>\n                            @mnezic\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n            </Box> */}\n        </>\n    )\n}\n\nexport default GameFooter","import React from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nimport { Game, GameStep } from '../data/Game'\nimport { toHomePage, toGamePage } from '../data/Navigate'\n\nimport Header from './GameHeader'\nimport Footer from './GameFooter'\n\ninterface Props {\n    title?: string\n    children: any\n    onNext?: () => void\n}\n\nconst Page = ( props: Props ) => {\n    const { title, children, onNext } = props\n    \n    return (\n        <div className={`page`}>\n            <Header title={title} onNext={onNext}/>\n            {children}\n            <Footer />\n        </div>\n    )\n}\n\nexport default Page","import React from 'react'\n\nimport { makeStyles } from '@mui/styles'\nimport IconButton from '@mui/material/IconButton'\nimport CloseIcon from '@mui/icons-material/Close'\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport MusicNoteIcon from '@mui/icons-material/MusicNote'\nimport CalendarTodayIcon from '@mui/icons-material/CalendarToday'\nimport PersonIcon from '@mui/icons-material/Person'\nimport SkipNextIcon from '@mui/icons-material/SkipNext'\n\nimport { Game } from '../data/Game'\nimport { onUserEvent, toDateTimeString } from '../data/Util'\nimport { Chip, Stack } from '@mui/material';\n\nconst useStyles = makeStyles( () => ( {\n    gameCard: {\n        display: 'flex', \n        flexDirection: 'column', \n        alignItems: 'center', \n        justifyContent: 'space-between',\n        padding: '10px 20px',\n        borderRadius: '10px',\n        border: '2px solid #ddd',        \n        \"&:hover\": {\n            border: '2px solid gold',        \n            backgroundColor: '#ffd70029'\n        }\n    },\n    gameLine: {\n        width: '100%', \n        display: 'flex', \n        alignItems: 'center', \n        justifyContent: 'space-between'\n    },\n    gameItem: {\n        display: 'flex', \n        alignItems: 'center', \n        justifyContent: 'center'\n    },\n} ) );\n\ninterface Props {\n    game?: Game\n    startGame?: () => void\n    resumeGame?: ( game: Game ) => void\n    deleteGame?: ( game: Game ) => void\n}\n\nconst GameCard = ( props: Props ) => {\n    const { game, startGame, resumeGame, deleteGame } = props\n    const classes = useStyles()\n\n    if ( !game ) {\n\n        const onStart = startGame ? onUserEvent( () => startGame() ) : undefined\n\n        return (\n            <div title=\"Start New Game\" className={`${classes.gameCard} selectable`} onClick={onStart}>\n                <div className={classes.gameLine}> \n                    <div className={classes.gameItem}><b>Start New Game</b></div>\n                    <div> </div>\n                </div>\n                <div className={classes.gameLine}> \n                    <div> </div>\n                    <SkipNextIcon style={{ margin: '20px' }} color=\"primary\"/>\n                    <div> </div>\n                </div>\n            </div>\n        )\n    }\n\n    // user events\n\n    const onResume = resumeGame ? onUserEvent( () => resumeGame( game ) ) : undefined\n    const onDelete = deleteGame ? onUserEvent( () => deleteGame( game ) ) : undefined\n\n    const progress = game.ended ? 100 : game.stats ? game.stats.progress : 0\n    const state = game.ended ? 'ended' : game.stats ? `${Math.round(game.stats.progress)}%` : 'not started'\n\n    return (        \n        <div title=\"Resume Game\" className={`${classes.gameCard} selectable`} onClick={onResume}>\n            <div className={classes.gameLine}> \n                <div className={classes.gameItem}><b>Game {game.id}</b></div>\n\n                <div>\n                    <Stack direction=\"row\" spacing={1} style={{ opacity: '0.7' }}>\n                        { game.ended && <Chip label=\"Ended\" color=\"success\" /> }\n                        { !game.ended && game.stats && <Chip label={`${Math.round(game.stats.progress)}%`} color=\"primary\" /> }\n                        { !game.ended && !game.stats && <Chip label=\"Not started\" color=\"warning\" /> }\n                    </Stack>\n                </div>\n\n                <IconButton title=\"Delete Game\" onClick={onDelete}>\n                    <CloseIcon />\n                </IconButton>\n\n            </div>\n            <div style={{ marginLeft: '5%', width: '95%' }}>\n                <div className={classes.gameLine}> \n                    <div className={classes.gameItem}><PersonIcon style={{ marginRight: '10px' }} color=\"primary\"/> {game.settings.nbPlayer} players</div>\n                    <div className={classes.gameItem}><MusicNoteIcon style={{ marginRight: '10px' }} color=\"primary\"/> {game.settings.nbQuestion} questions</div>\n                    <div className={classes.gameItem}><CalendarTodayIcon style={{ marginRight: '10px' }} color=\"primary\"/> {toDateTimeString(game.updated)}</div>                \n                </div>\n                <Box sx={{ width: '100%', display: 'flex', alignItems: 'center', marginTop: '5px' }}>\n                    <Box sx={{ height: '10px', width: '100%', display: 'flex', alignItems: 'center' }}>\n                        <LinearProgress variant=\"determinate\" value={progress} valueBuffer={100}/>\n                    </Box>\n                </Box>\n            </div>\n        </div>\n    )\n}\n\nexport default GameCard","import React from 'react'\n\nimport IconButton from '@mui/material/IconButton';\nimport SkipNextIcon from '@mui/icons-material/SkipNext';\n\nimport { onUserEvent } from '../data/Util'\n\ninterface Props {\n    title?: string\n    onNext: () => void\n}\n\nconst NextButton = ( props: Props ) => {\n    const { title, onNext } = props\n    const description = title && title != '' ? title : 'Next'   \n    \n    // user events\n\n    const onClick = onUserEvent( onNext )\n\n    return (\n        <IconButton color=\"secondary\" title={description} onClick={onClick}>\n            <SkipNextIcon />\n        </IconButton>\n    )\n}\n\nexport default NextButton","import React from 'react'\n\nimport IconButton from '@mui/material/IconButton';\nimport FolderIcon from '@mui/icons-material/Folder';\n\nimport { onUserEvent } from '../data/Util'\n\ninterface Props {\n    title?: string\n    onNext: () => void\n}\n\nconst AdminButton = ( props: Props ) => {\n    const { title, onNext } = props\n    const description = title && title != '' ? title : 'Next'   \n    \n    // user events\n\n    const onClick = onUserEvent( onNext )\n\n    return (\n        <IconButton color=\"secondary\" title={description} onClick={onClick}>\n            <FolderIcon />\n        </IconButton>\n    )\n}\n\nexport default AdminButton","import React from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nimport IconButton from '@mui/material/IconButton'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport Grid from '@mui/material/Grid'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\n\nimport { Game, GameId, GameStep, newGame, OnGameUpdate } from '../data/Game'\nimport { toGamePage, toAdminThemesPage } from '../data/Navigate'\n\nimport Page from '../component/Page'\nimport GameCard from '../component/GameCard'\nimport NextButton from '../component/NextButton'\nimport AdminButton from '../component/AdminButton'\nimport { Accordion, AccordionDetails, AccordionSummary } from '@mui/material'\n\ninterface Props {\n    games: Game[]\n    addGame: ( game: Game ) => void\n    updateGame: OnGameUpdate\n    deleteGames: ( gameIds: GameId[] ) => void\n}\n\nconst HomePage = ( props: Props ) => {\n    const { games, addGame, updateGame, deleteGames } = props\n\n    const navigate = useNavigate()\n\n    // update helpers\n\n    const toThemes = () => {\n        console.log( `[to-themes]` )\n        navigate( toAdminThemesPage() )\n    }\n\n    const startGame = () => {\n        console.log( `[start-game]` )\n        const game = newGame()\n        addGame( game )\n        navigate( toGamePage( game ) )\n    }\n\n    const resumeGame = ( game: Game ) => {\n        console.log( `[resume-game] ${game.id}` )\n        updateGame( game.id, ( game: Game ) => {\n            game.updated = Date.now()\n            if ( game.ended ) {\n                game.step = GameStep.SCORES    \n            } else if ( game.started ) {                \n                game.step = GameStep.QUIZZ\n            }            \n            return game\n        } )\n        navigate( toGamePage( game ) )\n    }\n\n    const deleteGame = ( game: Game ) => {\n        deleteGames( [ game.id ] )\n    }\n\n    const deleteAllGames = () => {\n        var allGameIds: GameId[] = []\n        for ( const game of games ) {\n            allGameIds.push( game.id )\n        }\n        deleteGames( allGameIds )\n    }\n\n    //\n    // clean old games\n    //\n\n    React.useEffect( () => {\n        var oldGameIds: GameId[] = []\n        for ( const game of games ) {\n            if ( game.ended ) {\n                const delta = Date.now() - game.updated\n                if ( delta > /* 30 days */ 30 * 24 * 60 * 60 * 1000 ) {\n                    oldGameIds.push( game.id )\n                }\n            }\n        }\n        if ( oldGameIds.length > 0 ) {\n            deleteGames( oldGameIds )\n        }\n    }, [] )\n\n    //\n    // sort games\n    //\n\n    const sortedGames = [ ...games ].sort( ( left: Game, right: Game ): number => {\n        return right.updated - left.updated\n    } )\n\n    return (\n        <Page title=\"Amnezic\" onNext={startGame}>\n            \n\n            {/* new game */}\n\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', padding: '200px' }}>\n                <NextButton title=\"New Game\" onNext={startGame}/>\n            </div>\n\n            {/* prevous game */}\n\n            <Accordion>\n                \n                <AccordionSummary expandIcon={<ExpandMoreIcon />} >\n                    Previous games\n                </AccordionSummary>\n                \n                <AccordionDetails>\n                    \n                    <Grid container spacing={2}>\n\n                        {\n                            (\n                                <>\n                                    {sortedGames.map( game => {\n                                        return (\n                                            <Grid key={game.id} item xs={12} textAlign=\"left\">\n                                                <GameCard\n                                                    game={game}\n                                                    resumeGame={resumeGame}\n                                                    deleteGame={deleteGame}\n                                                />\n                                            </Grid>\n                                        )\n                                    })}                        \n                                </>\n                            )\n                        }\n\n                        <Grid item xs={12} textAlign=\"right\">\n\n                            {/* clear previous games */}\n\n                            <IconButton\n                                title=\"Delete all games\" \n                                color=\"default\" \n                                disabled={games.length == 0} \n                                onClick={deleteAllGames}\n                            >\n                                <DeleteIcon />\n                            </IconButton>\n\n                        </Grid>\n\n                    </Grid>\n\n                </AccordionDetails>\n                \n            </Accordion>\n\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                <AdminButton title=\"Themes\" onNext={toThemes}/>\n            </div>\n\n        </Page>\n    )\n}\n\nexport default HomePage","import React from 'react'\nimport { AvatarId } from '../data/Avatar'\n\nimport { PlayerId } from '../data/Player'\n\ninterface Props {\n    id: AvatarId\n    size: AvatarSize\n    disabled?: boolean\n    selected?: boolean\n    onClick?: () => void\n}\n\nexport enum AvatarSize {\n    XS = 'XS',\n    S = 'S',\n    M = 'M',\n    L = 'L',\n    XL = 'XL',\n}\n\nconst PlayerAvatar = ( props: Props ) => {\n    const { id, size, disabled, selected, onClick } = props\n\n    let avatarClassNames = `avatar`\n    avatarClassNames = `${avatarClassNames} avatar-${id}`\n    avatarClassNames = `${avatarClassNames} avatar-${size}`    \n    if ( disabled ) {\n        avatarClassNames = `${avatarClassNames} disabled`\n    }\n    if ( selected ) {\n        avatarClassNames = `${avatarClassNames} selected`\n    }\n    if ( onClick ) {\n        avatarClassNames = `${avatarClassNames} selectable`\n    }\n\n    return (\n        <div className={avatarClassNames} onClick={onClick}></div>\n    )\n}\n\nexport default PlayerAvatar\n","import React from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nimport { Game, GameStep } from '../data/Game'\nimport { toHomePage, toGamePage } from '../data/Navigate'\n\nimport GameHeader from './GameHeader'\nimport GameFooter from './GameFooter'\nimport { DEBUG } from '../data/Constants'\n\ninterface Props {\n    title?: string\n    step: GameStep\n    game: Game\n    updateGame: ( gameId: string, update: ( game: Game ) => Game ) => void\n    onPrevious?: () => void\n    onNext?: () => void\n    children: any\n}\n\nconst GamePage = ( props: Props ) => {\n    const { title, step, game, updateGame, onPrevious, onNext, children } = props\n\n    const navigate = useNavigate()\n    \n    React.useEffect( () => { \n        if ( game.step !== step ) {\n            console.log(`[effect] INVALID game step! ( current step: ${step}, game step: ${game.step} )>>> NAVIGATE`)\n            navigate( toGamePage( game ), { replace: true } )    \n        }\n    }, [ game ] )\n    \n    return (\n        <>\n            <div className={`game-page step-${step.toLowerCase()}`}>\n                <GameHeader title={title} step={step} game={game} updateGame={updateGame} onPrevious={onPrevious} onNext={onNext}/>\n                {children}\n                <GameFooter />\n            </div>\n            {DEBUG && <pre style={{ border: '1px solid #999', background: '#eee', padding: '20px' }}>{JSON.stringify(game,undefined,4)}</pre>}\n        </>\n    )\n}\n\nexport default GamePage","import React from 'react'\nimport { useParams } from 'react-router'\nimport { useNavigate } from 'react-router-dom'\n\nimport MusicNoteIcon from '@mui/icons-material/MusicNote'\nimport PersonIcon from '@mui/icons-material/Person'\nimport QuizIcon from '@mui/icons-material/Quiz'\nimport Button from '@mui/material/Button'\nimport Grid from '@mui/material/Grid'\n\nimport GamePage from '../component/GamePage'\n\nimport { Settings } from '../data/Settings'\nimport { Game, GameStep, OnGameUpdate, selectGame, updateSettings, onSetUp } from '../data/Game'\nimport { toHomePage } from '../data/Navigate'\nimport { onUserEvent } from '../data/Util'\nimport { INCREMENT_NB_ANSWER_PER_QUESTION, INCREMENT_NB_PLAYER, INCREMENT_NB_QUESTION, MAX_NB_ANSWER_PER_QUESTION, MAX_NB_PLAYER, MAX_NB_QUESTION, MIN_NB_ANSWER_PER_QUESTION, MIN_NB_PLAYER, MIN_NB_QUESTION } from '../data/Constants'\n\ninterface Props {\n    games: Game[]\n    updateGame: OnGameUpdate\n}\n\nconst SettingsPage = ( props: Props ) => {\n    const { games, updateGame } = props\n\n    const navigate = useNavigate()\n\n    const { gameId } = useParams()\n    const game = selectGame( games, gameId )\n    \n    React.useEffect( () => { \n        if ( !game ) {\n            console.log(`[effect] MISSING game! >>> NAVIGATE home`)\n            navigate( toHomePage() )    \n        }\n    }, [ game ] )\n\n    if ( !game ) {\n        return null\n    }\n\n    // current state\n\n    const settings = game.settings\n\n    const nbPlayer = settings.nbPlayer\n    const nbPlayerIncrement = INCREMENT_NB_PLAYER\n    const lessPlayerDisabled = nbPlayer <= MIN_NB_PLAYER\n    const morePlayerDisabled = nbPlayer >= MAX_NB_PLAYER\n\n    const nbQuestion = settings.nbQuestion\n    const nbQuestionIncrement = INCREMENT_NB_QUESTION\n    const lessQuestionDisabled = nbQuestion <= MIN_NB_QUESTION\n    const moreQuestionDisabled = nbQuestion >= MAX_NB_QUESTION\n\n    const nbAnswer = settings.nbAnswer\n    const nbAnswerIncrement = INCREMENT_NB_ANSWER_PER_QUESTION\n    const lessAnswerDisabled = nbAnswer <= MIN_NB_ANSWER_PER_QUESTION\n    const moreAnswerDisabled = nbAnswer >= MAX_NB_ANSWER_PER_QUESTION\n\n    // update helpers\n\n    const updateNbPlayer = ( nbPlayer: number ) => {\n        updateGame( game.id, updateSettings( ( settings: Settings ) => {\n            settings.nbPlayer = nbPlayer\n            return settings \n        } ) )\n    }\n\n    const updateNbQuestion = ( nbQuestion: number ) => {\n        updateGame( game.id, updateSettings( ( settings: Settings ) => {\n            settings.nbQuestion = nbQuestion\n            return settings \n        } ) )\n    }\n\n    const updateNbAnswer = ( nbAnswer: number ) => {\n        updateGame( game.id, updateSettings( ( settings: Settings ) => {\n            settings.nbAnswer = nbAnswer\n            return settings \n        } ) )\n    }\n\n    const onNext = () => {\n        updateGame( game.id, onSetUp )\n    }\n\n    // user events )\n\n    const lessPlayer = lessPlayerDisabled ? undefined : onUserEvent( () => updateNbPlayer( game.settings.nbPlayer - nbPlayerIncrement ) )\n    const morePlayer = morePlayerDisabled ? undefined : onUserEvent( () => updateNbPlayer( game.settings.nbPlayer + nbPlayerIncrement ) )\n\n    const lessQuestion = lessQuestionDisabled ? undefined : onUserEvent( () => updateNbQuestion( game.settings.nbQuestion - nbQuestionIncrement ) )\n    const moreQuestion = moreQuestionDisabled ? undefined : onUserEvent( () => updateNbQuestion( game.settings.nbQuestion + nbQuestionIncrement ) )\n\n    const lessAnswer = lessAnswerDisabled ? undefined : onUserEvent( () => updateNbAnswer( game.settings.nbAnswer - nbAnswerIncrement ) )\n    const moreAnswer = moreAnswerDisabled ? undefined : onUserEvent( () => updateNbAnswer( game.settings.nbAnswer + nbAnswerIncrement ) )\n\n    return (\n        <GamePage step={GameStep.SETTINGS} game={game} updateGame={updateGame} onNext={onNext}>\n            \n            <Grid container spacing={2}>\n\n                {/* nb players */}\n\n                <Grid \n                    item xs={4} \n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'right' }}\n                > \n                    <Button \n                        style={{ marginRight: '40px' }} \n                        size=\"small\" \n                        variant=\"contained\" \n                        disabled={lessPlayerDisabled} \n                        onClick={lessPlayer}\n                    >\n                        - {nbPlayerIncrement}\n                    </Button>\n                </Grid>\n\n                <Grid \n                    item xs={4} \n                    textAlign=\"center\" \n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}\n                > \n                    <PersonIcon style={{ marginRight: '10px' }} color=\"primary\"/> \n                    {nbPlayer} {nbPlayer > 1 ? 'players' : 'player'}\n                </Grid>\n\n                <Grid \n                    item xs={4} \n                    textAlign=\"center\" \n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'left' }}\n                > \n                    <Button \n                        style={{ marginLeft: '40px' }} \n                        size=\"small\" \n                        variant=\"contained\" \n                        disabled={morePlayerDisabled} \n                        onClick={morePlayer}\n                    >\n                        + {nbPlayerIncrement}\n                    </Button>\n                </Grid>\n\n                {/* nb questions */}\n\n                <Grid \n                    item xs={4} \n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'right' }}\n                >\n                    <Button \n                        style={{ marginRight: '40px' }} \n                        size=\"small\" \n                        variant=\"contained\" \n                        disabled={lessQuestionDisabled} \n                        onClick={lessQuestion}\n                    >\n                        - {nbQuestionIncrement}\n                    </Button>\n                </Grid>\n                \n                <Grid \n                    item xs={4} \n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}\n                > \n                    <MusicNoteIcon \n                        style={{ marginRight: '10px' }} \n                        color=\"primary\"\n                    /> \n                    {nbQuestion} questions\n                </Grid>\n                \n                <Grid \n                    item xs={4} \n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'left' }}\n                > \n                    <Button \n                        style={{ marginLeft: '40px' }} \n                        size=\"small\" \n                        variant=\"contained\" \n                        disabled={moreQuestionDisabled} \n                        onClick={moreQuestion}\n                    >\n                        + {nbQuestionIncrement}\n                    </Button>\n                </Grid>\n\n                {/* nb answer per question */}\n\n                <Grid \n                    item xs={4} \n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'right' }}\n                >\n                    <Button \n                        style={{ marginRight: '40px' }} \n                        size=\"small\" \n                        variant=\"contained\" \n                        disabled={lessAnswerDisabled} \n                        onClick={lessAnswer}\n                    >\n                        - {nbAnswerIncrement}\n                    </Button>\n                </Grid>\n\n                <Grid \n                    item xs={4} \n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}\n                > \n                    <QuizIcon \n                        style={{ marginRight: '10px' }} \n                        color=\"primary\"\n                    /> \n                    {nbAnswer} answers / question\n                </Grid>\n\n                <Grid \n                    item xs={4} \n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'left' }}\n                > \n                    <Button \n                        style={{ marginLeft: '40px' }} \n                        size=\"small\" \n                        variant=\"contained\" \n                        disabled={moreAnswerDisabled} \n                        onClick={moreAnswer}\n                    >\n                        + {nbAnswerIncrement}\n                    </Button>\n                </Grid>\n\n            </Grid>\n\n        </GamePage>\n    )\n}\n\nexport default SettingsPage","import React from 'react'\nimport { CardColor } from '../../data/Card'\n\ninterface Props {\n    color: CardColor \n    onClick?: () => void \n}\n\nconst ClubIcon = ( props: Props ) => {\n    const { color, onClick } = props\n\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" className={`icon color-${color.toLowerCase()}`} onClick={onClick}>\n            <path d=\"M2 12C2 16 6 17 9 14 8 18 8 18 5 20H15C12 18 12 18 11 14 15 17 18 15 18 12 18 7 14 7 12 9 14 7 15 2 10 2 5 2 6 7 8 9 6 7 2 7 2 12z\"/>\n        </svg>\n    )\n}\n\nexport default ClubIcon\n","import React from 'react'\nimport { CardColor } from '../../data/Card'\n\ninterface Props {\n    color: CardColor  \n    onClick?: () => void \n}\n\nconst DiamondIcon = ( props: Props ) => {\n    const { color, onClick } = props\n\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" className={`icon color-${color.toLowerCase()}`} onClick={onClick}>\n            <path d=\"M10 20C13 15 15 13 19 10 15 7 13 5 10 0 7 5 5 7 1 10 5 13 7 15 10 20z\"/>\n        </svg>\n    )\n}\n\nexport default DiamondIcon\n","import React from 'react'\nimport { CardColor } from '../../data/Card'\n\ninterface Props {\n    color: CardColor  \n    onClick?: () => void \n}\n\nconst CircleIcon = ( props: Props ) => {\n    const { color, onClick } = props\n\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" className={`icon color-${color.toLowerCase()}`} onClick={onClick}>\n            <path d=\"M10 19C15 19 19 15 19 10 19 5 15 1 10 1 5 1 1 5 .991 9.99 1 15 5 19 10 19z\"/>\n        </svg>\n    )\n}\n\nexport default CircleIcon\n","import React from 'react'\nimport { CardColor } from '../../data/Card'\n\ninterface Props {\n    color: CardColor \n    onClick?: () => void \n}\n\nconst HeartIcon = ( props: Props ) => {\n    const { color, onClick } = props\n\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" className={`icon color-${color.toLowerCase()}`} onClick={onClick}>\n            <path d=\"M10 20C13 15 19 12 19 8 19 2 12 0 10 6 8 0 1 2 1 8 1 12 7 15 10 20z\"/>\n        </svg>\n    )\n}\n\nexport default HeartIcon\n","import React from 'react'\nimport { CardColor } from '../../data/Card'\n\ninterface Props {\n    color: CardColor \n    onClick?: () => void \n}\n\nconst SpadeIcon = ( props: Props ) => {\n    const { color, onClick } = props\n\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" className={`icon color-${color.toLowerCase()}`} onClick={onClick}>\n            <path d=\"M2 11C2 15 6 17 9 14 8 18 8 18 5 20H15C12 18 12 18 11 14 14 17 18 15 18 11 18 7 12 7 10.023.039 8 7 2 7 2 11z\"/>\n        </svg>\n    )\n}\n\nexport default SpadeIcon\n","import React from 'react'\nimport { CardColor } from '../../data/Card'\n\ninterface Props {\n    color: CardColor \n    onClick?: () => void \n}\n\nconst SquareIcon = ( props: Props ) => {\n    const { color, onClick } = props\n\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" className={`icon color-${color.toLowerCase()}`} onClick={onClick}>\n            <path d=\"M10 19 19 19 19 1 1 1 1 19z\"/>\n        </svg>\n    )\n}\n\nexport default SquareIcon\n","import React from 'react'\nimport { CardColor } from '../../data/Card'\n\ninterface Props {\n    color: CardColor \n    onClick?: () => void \n}\n\nconst StarIcon = ( props: Props ) => {\n    const { color, onClick } = props\n\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" className={`icon color-${color.toLowerCase()}`} onClick={onClick}>\n            <path d=\"M9.99.991 12.751 7.04 17.992 7.003 13.953 11.399 15.588 18.03 10.027 14.705 4.316 18.011 5.97 11.493 1.931 7.003 7.472 7.022 10.008.991z\"/>\n        </svg>\n    )\n}\n\nexport default StarIcon\n","import React from 'react'\nimport { CardColor } from '../../data/Card'\n\ninterface Props {\n    color: CardColor \n    onClick?: () => void \n}\n\nconst TriangleIcon = ( props: Props ) => {\n    const { color, onClick } = props\n\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" className={`icon color-${color.toLowerCase()}`} onClick={onClick}>\n            <path d=\"M1 19 19 19 10 1 1 19z\"/>\n        </svg>\n    )\n}\n\nexport default TriangleIcon\n","import React from 'react'\nimport { CardColor } from '../../data/Card'\n\ninterface Props {\n    color: CardColor \n    onClick?: () => void \n}\n\nconst CrossIcon = ( props: Props ) => {\n    const { color, onClick } = props\n\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" className={`icon color-${color.toLowerCase()}`} onClick={onClick}>\n            <path d=\"M1 16 4 19 10 13 16 19 19 16 13 10 19 4 16 1 10 7 4 1 1 4 7 10z\"/>\n        </svg>\n    )\n}\n\nexport default CrossIcon\n","import React from 'react'\nimport Typography from '@mui/material/Typography';\n\nimport { Card, CardColor, CardSymbol } from '../data/Card'\nimport ClubIcon from './icon/ClubIcon';\nimport DiamondIcon from './icon/DiamondIcon';\nimport CircleIcon from './icon/CircleIcon';\nimport HeartIcon from './icon/HeartIcon';\nimport SpadeIcon from './icon/SpadeIcon';\nimport SquareIcon from './icon/SquareIcon';\nimport StarIcon from './icon/StarIcon';\nimport TriangleIcon from './icon/TriangleIcon';\nimport CrossIcon from './icon/CrossIcon';\n\ninterface Props {\n    symbol: CardSymbol\n    color: CardColor\n    onClick?: () => void\n}\n\nconst PlayingCardIcon = ( props: Props ) => {\n\n    const { symbol, color, onClick } = props\n\n    switch ( symbol ) {\n        case CardSymbol.CLUB:\n            return <ClubIcon color={color} onClick={onClick} />\n        case CardSymbol.CROSS:\n            return <CrossIcon color={color} onClick={onClick} />\n        case CardSymbol.DIAMOND:\n            return <DiamondIcon color={color} onClick={onClick} />\n        case CardSymbol.CIRCLE:\n            return <CircleIcon color={color} onClick={onClick} />\n        case CardSymbol.HEART:\n            return <HeartIcon color={color} onClick={onClick} />\n        case CardSymbol.SPADE:\n            return <SpadeIcon color={color} onClick={onClick} />\n        case CardSymbol.SQUARE:\n            return <SquareIcon color={color} onClick={onClick} />\n        case CardSymbol.STAR:\n            return <StarIcon color={color} onClick={onClick} />\n        case CardSymbol.TRIANGLE:\n            return <TriangleIcon color={color} onClick={onClick} />\n        default:\n            return null\n    }\n}\n\nexport default PlayingCardIcon","import React from 'react'\n\nimport IconButton from '@mui/material/IconButton';\nimport AddIcon from '@mui/icons-material/Add';\nimport CheckIcon from '@mui/icons-material/Check';\nimport CloseIcon from '@mui/icons-material/Close';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\n\nimport { Card, CardSize } from '../data/Card'\nimport PlayingCardIcon from './PlayingCardIcon';\n\ninterface Props {\n    card?: Card\n    cardSize?: CardSize\n    selected?: boolean\n    disabled?: boolean\n    onClick?: () => void    \n}\n\nconst PlayingCard = ( props: Props ) => {\n    const { card, cardSize, selected, disabled, onClick } = props\n\n    if ( card == undefined ) {\n        return (\n            <div className={`card size-${cardSize} card--empty`} onClick={onClick}>\n                <div className=\"card--header\">\n                    <div className=\"card--symbol\"> </div>                \n                </div>\n                <div className=\"card--content\">\n                    <div className=\"card--value\"> </div>\n                    <div className=\"card--symbol\"> </div>\n                </div>\n                <div className=\"card--footer\">\n                    <div className=\"card--symbol\"> </div>\n                </div>\n            </div>\n        )\n    }\n\n    let cardClassNames = `card`\n    if ( card.size ) {\n        cardClassNames = `${cardClassNames} size-${card.size}`\n    }\n    if ( disabled ) {\n        cardClassNames = `${cardClassNames} disabled`\n    }\n    if ( selected ) {\n        cardClassNames = `${cardClassNames} selected`\n    }\n    if ( onClick ) {\n        cardClassNames = `${cardClassNames} selectable`\n    }\n\n    return (\n        <div className={cardClassNames} onClick={onClick}>\n            <div className=\"card--header\">\n                <div className=\"card--symbol\">\n                    <PlayingCardIcon symbol={card.symbol} color={card.color}/>\n                </div>                \n            </div>\n            <div className=\"card--content\">\n                <div className=\"card--value\">\n                    {card.number ? `${card.number % 10}` : card.value}\n                </div>\n                <div className=\"card--symbol\">\n                    <PlayingCardIcon symbol={card.symbol} color={card.color}/>\n                </div>\n            </div>\n            <div className=\"card--footer\">\n                <div className=\"card--symbol\">\n                    <PlayingCardIcon symbol={card.symbol} color={card.color}/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default PlayingCard","import React from 'react'\n\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport { Card as DataCard, CardColor, CardSize, CardSymbol, DefaultCards } from '../data/Card'\nimport PlayingCardIcon from './PlayingCardIcon';\nimport { Box, Grid, Modal, Typography } from '@mui/material';\nimport PlayingCard from './PlayingCard';\n\ninterface Props {\n    open: boolean\n    closeModal: () => void\n    card: DataCard\n    onSymbolChange: (symbol: CardSymbol) => void\n    onColorChange: (color: CardColor) => void\n    onCardChange: (card: DataCard) => void\n}\n\nconst PlayingCardModal = ( props: Props ) => {\n    const { open, closeModal, card, onSymbolChange, onColorChange, onCardChange } = props\n    \n    const style = {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: 500,\n        bgcolor: 'background.paper',\n        borderRadius: '10px',\n        boxShadow: 24,\n        p: 4,\n    };\n\n    return (\n        <Modal\n            open={open}\n            onClose={closeModal}\n            aria-labelledby=\"modal-modal-title\"\n            aria-describedby=\"modal-modal-description\"\n        > \n            <Box sx={style}>\n                <Grid container spacing={2} style={{ alignItems: 'flex-end' }}>\n                    \n                    <Grid item xs={12} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-end' }}>\n                    \n                        <IconButton aria-label=\"Close\" onClick={closeModal}>\n                            <CloseIcon />\n                        </IconButton>\n\n                    </Grid>\n\n                </Grid>\n\n                <Grid container spacing={2} style={{ alignItems: 'flex-end' }}>\n\n                    <Grid item xs={4} container spacing={2} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n\n                        <Grid item xs={12} textAlign=\"center\">\n                            <Typography>\n                                <b>Colors</b>\n                            </Typography> \n                        </Grid>\n\n                        {\n                            Object.keys(CardColor).filter( key => key as CardColor != CardColor.GRAY ).map( key => { \n                                const newColor = key as CardColor\n                                return (\n                                    <Grid item key={newColor} xs={4}>\n                                        <div \n                                            style={{ width: '75%', display: 'flex', alignItems: 'center', justifyContent: 'center' }} \n                                            className={card.color == newColor ? 'selected' : 'selectable'} \n                                            onClick={() => onColorChange(newColor)}\n                                        >\n                                            <PlayingCardIcon \n                                                symbol={CardSymbol.CIRCLE}\n                                                color={newColor}\n                                            />\n                                        </div> \n                                    </Grid>\n                                )\n                            } )\n                        }\n\n                    </Grid>\n\n                    <Grid item xs={4} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', marginTop: '5px', marginBottom: '10px' }}>\n                    \n                        <PlayingCard card={{\n                                ...card,\n                                size: CardSize.XL,\n                            }} \n                        />\n\n                    </Grid>\n\n                    {/* symbols */}\n                    \n                    <Grid item xs={4} container spacing={2} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}> \n\n                        <Grid item xs={12} textAlign=\"center\">\n                            <Typography>\n                                <b>Symbols</b>\n                            </Typography> \n                        </Grid>\n\n                        {\n                            Object.keys(CardSymbol).map( key => { \n                                const newSymbol = key as CardSymbol\n                                return (\n                                    <Grid key={newSymbol} item xs={4}>\n                                        <div \n                                            style={{ width: '75%', display: 'flex', alignItems: 'center', justifyContent: 'center' }}\n                                            className={card.symbol == newSymbol ? 'selected' : 'selectable'} \n                                            onClick={() => onSymbolChange(newSymbol)}\n                                        >\n                                            <PlayingCardIcon \n                                                symbol={newSymbol}\n                                                color={CardColor.GRAY}\n                                            />\n                                        </div>                                                \n                                    </Grid>\n                                )\n                            } )\n                        }\n\n                    </Grid>\n\n                    {/* symbols */}\n\n                    <Grid item xs={12} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                        <Typography>\n                            <b>Pre-defined</b>\n                        </Typography>                                \n                    </Grid>\n\n                    <Grid item xs={12} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}> \n\n                        {\n                            DefaultCards.map( defaultCard => {\n                                return (\n                                    <PlayingCard card={{\n                                            ...defaultCard,\n                                            number: card.number,\n                                            value: card.value,\n                                            size: CardSize.XS,\n                                        }}\n                                        onClick={() => onCardChange(defaultCard)} \n                                    />\n                                )\n                            } )\n                        }\n\n                    </Grid>\n\n                </Grid>\n            </Box>\n\n        </Modal>\n    )\n}\n\nexport default PlayingCardModal","import { MAX_NB_AVATAR } from \"./Constants\"\nimport { range } from \"./Util\"\n\nexport type AvatarId = number\n\nexport const ALL_AVATAR_IDS = range( MAX_NB_AVATAR ).map( i => i + 1 )","import React from 'react'\n\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport { Box, Grid, Modal, Typography } from '@mui/material';\nimport { ALL_AVATAR_IDS, AvatarId } from '../data/Avatar';\nimport PlayerAvatar, { AvatarSize } from './PlayerAvatar';\n\ninterface Props {\n    open: boolean\n    closeModal: () => void\n    avatarId: AvatarId\n    onAvatarChange: (avatarId: AvatarId) => void\n}\n\nconst AvatarModal = ( props: Props ) => {\n    const { open, closeModal, avatarId, onAvatarChange } = props\n    \n    const style = {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: 500,\n        bgcolor: 'background.paper',\n        borderRadius: '10px',\n        boxShadow: 24,\n        p: 4,\n    };\n\n    return (\n        <Modal\n            open={open}\n            onClose={closeModal}\n            aria-labelledby=\"modal-modal-title\"\n            aria-describedby=\"modal-modal-description\"\n        > \n            <Box sx={style}>\n                <Grid container spacing={2} style={{ alignItems: 'center' }}>\n                    \n                    <Grid item xs={12} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-end' }}>\n                    \n                        <IconButton aria-label=\"Close\" onClick={closeModal}>\n                            <CloseIcon />\n                        </IconButton>\n\n                    </Grid>\n\n                    <Grid item xs={4} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', marginTop: '5px', marginBottom: '10px' }}>\n                    \n                        <PlayerAvatar id={avatarId} size={AvatarSize.XL} />\n\n                    </Grid>\n\n                    {/* symbols */}\n                    \n                    <Grid item xs={8} container spacing={1} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}> \n\n                        <Grid item xs={12} textAlign=\"center\">\n                            <Typography>\n                                <b>Avatars</b>\n                            </Typography> \n                        </Grid>\n\n                        {\n                            ALL_AVATAR_IDS.map( newAvatarId => { \n                                return (\n                                    <Grid key={newAvatarId} item xs={3}>\n                                        <PlayerAvatar \n                                            id={newAvatarId} \n                                            size={AvatarSize.M}\n                                            selected={avatarId == newAvatarId} \n                                            onClick={() => onAvatarChange(newAvatarId)}\n                                        />\n                                    </Grid>\n                                )\n                            } )\n                        }\n\n                    </Grid>\n\n                </Grid>\n            </Box>\n\n        </Modal>\n    )\n}\n\nexport default AvatarModal","import React from 'react'\n\nimport Box from '@mui/material/Box'\nimport Card from '@mui/material/Card'\nimport CardContent from '@mui/material/CardContent'\nimport Grid from '@mui/material/Grid'\nimport TextField from '@mui/material/TextField'\nimport Modal from '@mui/material/Modal'\nimport IconButton from '@mui/material/IconButton'\nimport CloseIcon from '@mui/icons-material/Close'\n\nimport { Game, OnGameUpdate, updatePlayer } from '../data/Game'\nimport { Card as DataCard, CardSymbol, CardColor, CardSize, DefaultCards } from '../data/Card'\nimport { Player } from '../data/Player'\n\nimport PlayingCard from './PlayingCard'\nimport PlayingCardIcon from './PlayingCardIcon'\nimport PlayerAvatar, { AvatarSize } from './PlayerAvatar';\nimport { Typography } from '@mui/material'\nimport PlayingCardModal from './PlayingCardModal'\nimport AvatarModal from './AvatarModal'\nimport { AvatarId } from '../data/Avatar'\n\ninterface Props {\n    player: Player \n    avatarSize?: AvatarSize   \n    cardSize?: CardSize\n    game?: Game\n    updateGame?: OnGameUpdate\n}\n\nconst PlayerCard = ( props: Props ) => {\n    const { player, avatarSize, cardSize, game, updateGame } = props\n\n    const [ name, setName ] = React.useState( player.name )\n    const editMode = game !== undefined && updateGame !== undefined\n    \n    const [ playingCardModal, setPlayingCardModal ] = React.useState( false )\n    const openPlayingCardModal = () => setPlayingCardModal(true)\n    const closePlayingCardModal = () => setPlayingCardModal(false)\n    \n    const [ avatarModal, setAvatarModal ] = React.useState( false )\n    const openAvatarModal = () => setAvatarModal(true)\n    const closeAvatarModal = () => setAvatarModal(false)\n\n    if ( !player.number ) {\n        return null\n    }\n\n    //\n    // update helpers\n    //\n\n    const updatePlayerName = ( name: string ) => {\n        if ( editMode ) {\n            updateGame( game.id, updatePlayer( player.id, ( player: Player ): Player => {\n                player.name = name\n                return player\n            } ) )\n        }\n    }\n\n    const updatePlayerAvatar = ( avatarId: AvatarId ) => {\n        if ( editMode ) {\n            updateGame( game.id, updatePlayer( player.id, ( player: Player ): Player => {\n                player.avatarId = avatarId\n                return player\n            } ) )\n        }\n    }\n    \n    const updatePlayerCard = ( card: DataCard ) => {\n        if ( editMode ) {\n            updateGame( game.id, updatePlayer( player.id, ( player: Player ): Player => {\n                player.card = card\n                return player\n            } ) )\n        }\n    }\n\n    //\n    // user events\n    //\n\n    const onNameChange = ( e: any ) => {\n        setName( e.target.value )\n    }\n\n    const onNameBlur = () => {\n        updatePlayerName( name )\n    }\n\n    const onSymbolChange = (symbol: CardSymbol) => {\n        updatePlayerCard( {\n            ...player.card,\n            symbol: symbol\n        } )\n    }\n\n    const onColorChange = (color: CardColor) => {\n        updatePlayerCard( {\n            ...player.card,\n            color: color\n        } )\n    }\n\n    const onCardChange = (card: DataCard) => {\n        updatePlayerCard( {\n            ...player.card,\n            color: card.color,\n            symbol: card.symbol\n        } )\n    }\n\n    const onAvatarChange = (avatarId: AvatarId) => {\n        updatePlayerAvatar( avatarId )\n    }\n\n    return (\n        <Card variant=\"outlined\">\n            <CardContent>\n\n            <Grid container spacing={2}>\n\n                <Grid item xs={12} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}> \n                    <Box sx={{ display: 'flex', alignItems: 'flex-end' }}>\n                        <PlayerAvatar \n                            id={player.avatarId} \n                            size={avatarSize || AvatarSize.L}\n                            onClick={editMode ? openAvatarModal : undefined}\n                        />\n                        { editMode && <TextField id=\"standard-basic\" style={{ marginLeft: '10px' }} label=\"Name\" variant=\"standard\" value={name} onChange={onNameChange} onBlur={onNameBlur} /> }\n                        { !editMode && (\n                            <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-start', marginLeft: '10px', marginRight: '10px' }}>\n                                <Typography><b>Name:</b> {name}</Typography> \n                                <Typography><b>Score:</b> {player.stats.score}</Typography> \n                            </div>                            \n                        ) }\n                    </Box> \n                    <PlayingCard card={{\n                            ...player.card,\n                            number: player.number,\n                            size: cardSize || CardSize.S,\n                        }} \n                        onClick={editMode ? openPlayingCardModal : undefined} \n                    />                   \n                </Grid>\n\n                { editMode && (\n                    <PlayingCardModal\n                        open={playingCardModal}\n                        closeModal={closePlayingCardModal}\n                        card={{\n                            ...player.card,\n                            value: `${player.number % 10}`,\n                        }}\n                        onSymbolChange={onSymbolChange}\n                        onColorChange={onColorChange}\n                        onCardChange={onCardChange}\n                    />\n                ) }\n\n                { editMode && (\n                    <AvatarModal\n                        open={avatarModal}\n                        closeModal={closeAvatarModal}\n                        avatarId={player.avatarId}\n                        onAvatarChange={onAvatarChange}\n                    />\n                ) }\n\n            </Grid>\n\n            </CardContent>\n        </Card>\n    )\n}\n\nexport default PlayerCard","import React from 'react'\nimport { useParams } from 'react-router'\nimport { useNavigate } from 'react-router-dom'\n\nimport Grid from '@mui/material/Grid'\n\nimport GamePage from '../component/GamePage'\nimport PlayerCard from '../component/PlayerCard'\n\nimport { Game, GameStep, OnGameUpdate, selectGame, OnStep } from '../data/Game'\nimport { toHomePage } from '../data/Navigate'\n\ninterface Props {\n    games: Game[]\n    updateGame: OnGameUpdate\n}\n\nconst PlayersPage = ( props: Props ) => {\n    const { games, updateGame } = props\n\n    const navigate = useNavigate()\n\n    const { gameId } = useParams()\n    const game = selectGame( games, gameId )\n    \n    React.useEffect( () => { \n        if ( !game ) {\n            console.log(`[effect] MISSING game! >>> NAVIGATE home`)\n            navigate( toHomePage() )    \n        }\n    }, [ game ] )\n    \n    if ( !game || !game.players ) {\n        return null\n    }\n    \n    // update helpers\n\n    const onNext = () => {    \n        updateGame( game.id, OnStep( GameStep.QUIZZ ) )\n    }\n\n    return (\n        <GamePage step={GameStep.PLAYERS} game={game} updateGame={updateGame} onNext={onNext}>\n\n            <Grid container spacing={2}>\n\n                {\n                    (\n                        <>\n                            {game.players.map( player => {\n                                return (\n                                    <Grid key={player.id} item xs={6} textAlign=\"left\">\n                                        <PlayerCard\n                                            game={game}\n                                            player={player}\n                                            updateGame={updateGame}\n                                        />\n                                    </Grid>\n                                )\n                            })}                        \n                        </>\n                    )\n                }\n\n            </Grid>\n\n        </GamePage>\n    )\n}\n\nexport default PlayersPage","import React from 'react'\nimport { useParams } from 'react-router'\nimport { useNavigate } from 'react-router-dom'\n\nimport GamePage from '../component/GamePage'\n\nimport { Game, GameStep, OnGameUpdate, onStartGame, selectGame } from '../data/Game'\nimport { toHomePage, toGamePage } from '../data/Navigate'\nimport NextButton from '../component/NextButton'\n\ninterface Props {\n    games: Game[]\n    updateGame: OnGameUpdate\n}\n\nconst StartPage = ( props: Props ) => {\n    const { games, updateGame } = props\n\n    const navigate = useNavigate() \n    \n    const { gameId } = useParams()\n    const game = selectGame( games, gameId )\n    \n    React.useEffect( () => { \n        if ( !game ) {\n            console.log(`[effect] MISSING game! >>> NAVIGATE home`)\n            navigate( toHomePage() )    \n        } else if ( game.questionNumber ) {\n            console.log(`[effect] NAVIGATE to question #${game.questionNumber}`)\n            navigate( toGamePage( game ) )    \n        }\n    }, [ game ] ) \n    \n    if ( !game ) {\n        return null\n    }   \n\n    const onNext = () => {\n        updateGame( game.id, onStartGame )\n    }\n\n    return (\n        <GamePage step={GameStep.QUIZZ} game={game} updateGame={updateGame} onNext={onNext}>\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', padding: '200px' }}>\n                <NextButton title=\"Start Game\" onNext={onNext}/>\n            </div>\n        </GamePage>                \n    )\n}\n\nexport default StartPage","import React from 'react'\n\nimport Box from '@mui/material/Box'\nimport Card from '@mui/material/Card'\nimport CardContent from '@mui/material/CardContent'\n\nimport { CardMedia, Typography } from '@mui/material'\nimport { Music } from '../data/Music'\nimport musicBackground from '../static/music.png'\n\ninterface Props {\n    music: Music\n}\n\nconst MusicCard = ( props: Props ) => {\n    const { music } = props\n\n    if ( !music ) {\n        return null\n    }\n\n    const musicImage = music.artist && music.artist.imgUrl ? music.artist.imgUrl : music.album && music.album.imgUrl ? music.album.imgUrl : musicBackground\n    const artistName = music.artist && music.artist.name ? music.artist.name : '-'\n    const albumName = music.album && music.album.name ? music.album.name : '-'\n\n    return (\n        <Card variant=\"outlined\">\n            <CardContent>\n\n                <Typography variant=\"h5\" color=\"text.primary\" component=\"div\" style={{ margin: '5px 10px' }}>\n                    {music.name}\n                </Typography>\n\n                <Box sx={{ display: 'flex', alignItems: 'center', pl: 1, pb: 1 }}>\n\n                    <CardMedia\n                        component=\"img\"\n                        sx={{ width: 56, height: 56, margin: '5px 10px' }}\n                        image={musicImage}\n                    />\n\n                    <div style={{ display: 'flex', flexDirection: 'column', marginRight: '10px' }}>\n                        \n                        <Typography variant=\"subtitle1\" color=\"text.secondary\" component=\"div\">\n                            Artist\n                        </Typography>\n                        \n                        <Typography variant=\"subtitle1\" color=\"text.secondary\" component=\"div\">\n                            Album\n                        </Typography>\n\n                    </div>\n\n                    <div style={{ display: 'flex', flexDirection: 'column', marginRight: '10px' }}>\n                        \n                        <Typography variant=\"subtitle1\" color=\"text.primary\" component=\"div\">\n                            {artistName}\n                        </Typography>\n\n                        <Typography variant=\"subtitle1\" color=\"text.primary\" component=\"div\">\n                            {albumName}\n                        </Typography>\n\n                    </div>\n\n                </Box>\n\n            </CardContent>\n        </Card>\n    )\n}\n\nexport default MusicCard","import React from 'react'\n\nimport IconButton from '@mui/material/IconButton'\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow'\nimport PauseIcon from '@mui/icons-material/Pause'\n\nimport { Game, OnGameUpdate } from '../data/Game'\nimport { Question, OnQuestionUpdate, QuestionId } from '../data/Question'\nimport { onKeyEvent, onUserEvent } from '../data/Util'\nimport { Box, CircularProgress, Tooltip, Typography } from '@mui/material'\nimport { withStyles } from '@mui/styles'\nimport MusicCard from './MusicCard'\nimport { Music } from '../data/Music'\nimport musicBackground from '../static/music.png'\nimport { MUSIC_PLAYER_KEYBOARD_SHORTCUTS } from '../data/Constants'\n\n\ninterface Props {\n    questionId: QuestionId\n    music: Music\n    failed: boolean\n    loading: boolean\n    info?: any\n    started: boolean\n    playing: boolean\n    progress: number\n    played: boolean\n    onMusicLoaded: ( nbSeconds:number ) => void\n    onMusicPlaying: () => void\n    onMusicPaused: () => void\n    onMusicEnded: () => void\n}\n\nconst MusicPlayer = ( props: Props ) => {\n    const { questionId, music, loading, info, started, playing, progress, played, onMusicLoaded, onMusicPlaying, onMusicPaused, onMusicEnded } = props\n\n    if ( !questionId && !music ) {\n        return null\n    }\n        \n    const audioRef = React.useRef<HTMLAudioElement>( new Audio( music.mp3Url ) )\n\n    // const [ loading, setLoading ] = React.useState( true )\n    // const [ isPlaying, setIsPlaying ] = React.useState( false )\n    // const [ duration, setDuration ] = React.useState( 0 )\n    // const [ currentTime, setCurrentTime ] = React.useState( 0 )\n\n    // let currentPercentage = 0\n    // if ( played ) {\n    //     currentPercentage = 100\n    // } else if ( duration ) {\n    //     currentPercentage = Math.ceil( ( currentTime / duration ) * 100 )\n    // }\n\n    //\n    // music helpers\n    //\n\n    const reset = () => {\n        console.log( 'reset' )\n        // setMusicIsReady( false )\n        // setIsPlaying( false )\n        // setDuration( 0 )\n        // setCurrentTime( 0 )\n    }\n\n    const musicReady = () => {\n        console.log( `musicReady >>> setLoading( false ) + onMusicLoaded( ${audioRef.current.duration} )` )\n        // setMusicIsReady( true )\n        // setLoading( false )\n        onMusicLoaded( audioRef.current.duration )\n    }   \n\n    const playMusic = () => {  \n        if ( started && !playing && !played ) {\n            console.log( `playMusic >>> !playing >>> onMusicPlaying()` )\n            onMusicPlaying()\n        }\n    }\n\n    const pauseMusic = () => {     \n        if ( started && playing && !played ) {\n            console.log( `pauseMusic >>> playing >>> onMusicPaused()` )\n            onMusicPaused()\n        }\n    }\n    \n    const toggleMusic = () => {           \n        if ( started && !played ) {\n            if ( playing ) {\n                console.log( `toggleMusic >>> playing >>> onMusicPaused()` )\n                onMusicPaused()\n            } else {\n                console.log( `toggleMusic >>> not playing >>> onMusicPlaying()` )\n                onMusicPlaying()\n            }\n        } else {\n            console.log( `toggleMusic >>> not started or already played >>> No-Op` )\n        }\n    }\n\n    React.useEffect( () => {\n        if ( audioRef.current ) {\n            if ( playing ) {\n                console.log( `playing >>> audio.play()` )\n                audioRef.current.play()\n            } else {\n                console.log( `!playing >>> audio.pause()` )\n                audioRef.current.pause()\n            }\n        }\n    }, [ playing ] ); \n\n    const lessVolume = () => {\n        console.log( `lessVolume` ) \n        if ( audioRef.current ) {\n            audioRef.current.volume = Math.max( 0.1, audioRef.current.volume - 0.1 )\n        } \n    }\n\n    const moreVolume = () => {\n        console.log( `moreVolume` )  \n        if ( audioRef.current ) {\n            audioRef.current.volume = Math.min( 1.0, audioRef.current.volume + 0.1 )\n        }\n    }\n\n    const musicEnded = () => {\n        console.log( 'musicEnded >>> onMusicEnded()' )\n        onMusicEnded()\n    }\n\n    //\n    // audio events\n    //\n\n    React.useEffect( () => {\n        \n        if ( audioRef.current ) {\n            console.log(\"pause current music...\")\n            audioRef.current.pause();\n        }\n    \n        if ( !played ) {\n\n            if ( audioRef.current.src != music.mp3Url ) {\n                console.log(\"new music...\")\n                audioRef.current = new Audio( music.mp3Url )\n                audioRef.current.loop = false\n                audioRef.current.volume = 1.0\n                reset()\n            }\n        \n            const onAudioLoad = () => {\n                console.log( `onAudioLoad >>> setCurrentTime( ${audioRef.current.currentTime} ) + setDuration( ${audioRef.current.duration} )` )\n                // setCurrentTime( audioRef.current.currentTime )\n                // setDuration( audioRef.current.duration )\n            }\n            const onAudioReady = () => {            \n                console.log( 'onAudioReady >>> musicReady' )\n                musicReady()\n            }\n            // const onAudioUpdate = () => {  \n            //     // console.log( `onAudioUpdate >>> setCurrentTime( ${audio.currentTime} )` )\n            //     // setCurrentTime( audioRef.current.currentTime )\n            // }\n            const onAudioEnd = () => {\n                console.log( 'onAudioEnd >>> musicEnded()' )\n                musicEnded()\n            }\n        \n            // listeners\n\n            console.log(\"add listener...\")\n            audioRef.current.addEventListener( 'loadeddata', onAudioLoad )    \n            audioRef.current.addEventListener( 'canplaythrough', onAudioReady )\n            // audioRef.current.addEventListener( 'timeupdate', onAudioUpdate )\n            audioRef.current.addEventListener( 'ended', onAudioEnd )\n\n            // effect cleanup\n            return () => {\n                console.log(\"remove listener...\")\n                audioRef.current.removeEventListener( 'loadeddata', onAudioLoad )    \n                audioRef.current.removeEventListener( 'canplaythrough', onAudioReady )\n                // audioRef.current.removeEventListener( 'timeupdate', onAudioUpdate )\n                audioRef.current.removeEventListener( 'ended', onAudioEnd )\n                reset()\n            }\n        }\n\n        return reset\n\n    }, [ played, questionId ] ); \n\n    const loadingMusic = !played && !started && loading\n    // const musicReady = !played && !started && !loading\n    // const countingDown = !played && musicIsReady && ( seconds > 0 )\n    const playingMusic = !played && started && playing\n    const pausingMusic = !played && started && !playing\n\n    const onPause = playingMusic ? onUserEvent( () => pauseMusic() ) : undefined\n    const onPlay = pausingMusic ? onUserEvent( () => playMusic() ) : undefined\n\n    //\n    // keyboard shortcuts\n    // \n\n    if ( MUSIC_PLAYER_KEYBOARD_SHORTCUTS ) {\n\n        const handleKeyPress = React.useCallback( onKeyEvent( ( key: string ): boolean => {\n            switch ( key ) {\n                case ' ':\n                    console.log( `music-player >>> key \"${key}\" >>> toggleMusic()`);\n                    toggleMusic();\n                    return true;\n                case 'ArrowUp':\n                    console.log( `music-player >>> key \"${key}\" >>> moreVolume()`);\n                    moreVolume();\n                    return true;\n                case 'ArrowDown':\n                    console.log( `music-player >>> key \"${key}\" >>> lessVolume()`);\n                    lessVolume();\n                    return true;\n            } \n            return false;\n        } ), [ toggleMusic, moreVolume, lessVolume ] );\n\n        React.useEffect( () => {\n            document.addEventListener( 'keydown', handleKeyPress );\n            return () => {\n                document.removeEventListener( 'keydown', handleKeyPress );\n            };\n        }, [ handleKeyPress ] ); \n\n    }  \n\n    //\n    // tooltip\n    //\n\n    const LightTooltip = withStyles( theme => ( {\n        tooltip: {\n            backgroundColor: 'transparent',\n            color: \"rgba(0, 0, 0, 0.87)\",\n            fontSize: 11\n        },\n        arrow: {\n            color: \"white\"\n        }\n    } ) ) ( Tooltip );\n\n    // console.log( `[render] music player: ready=${musicIsReady}, seconds=${seconds}/${delay}, played=${played}` )\n    \n    const icon = started && pausingMusic ? (\n        <Typography variant=\"caption\" component=\"div\" color=\"text.secondary\">\n            <IconButton aria-label=\"play\" onClick={onPlay}>\n                <PlayArrowIcon sx={{ height: 38, width: 38 }}/>\n            </IconButton> \n        </Typography>\n    ) : undefined\n    \n    const onClick = started && playingMusic ? onPause : undefined\n\n    return (\n        <LightTooltip title={played ? <MusicCard music={music} /> : false} >\n            <div \n                style={{ \n                    width: '56px', \n                    height: '56px', \n                    cursor: played ? 'help' : 'auto', \n                    marginRight: '10px', \n                    border: played ? '1px solid #777' : 'none',\n                    borderRadius: '28px', \n                    backgroundColor: played ? 'transparent' : '#eee',\n                    background: played ? music.album ? `url(${music.album.imgUrl})` : `url(${musicBackground})` : 'none', \n                    backgroundSize: '56px 56px' \n                }}\n            >                \n\n                <Box \n                    sx={{ \n                        width: '56px', \n                        height: '56px',\n                        position: 'relative', \n                        display: 'inline-flex', \n                        alignItems: 'center', \n                        justifyContent: 'center',\n                        cursor: onClick ? 'pointer' : 'auto',                        \n                    }} \n                    onClick={onClick}\n                >\n                    \n                    {/* progress */}\n\n                    { !played && loading && <CircularProgress variant=\"indeterminate\"/> }                    \n                    { !played && !loading && started && <CircularProgress size={56} variant=\"determinate\" value={progress} onClick={onClick}/> }\n                    \n                    {/* button or info */}\n\n                    <Box\n                        sx={{\n                            top: 0,\n                            left: 0,\n                            bottom: 0,\n                            right: 0,\n                            position: 'absolute',\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                        }}\n                        onClick={onClick}\n                    >\n                        { icon ? icon : info }\n                    </Box>                    \n\n                </Box>\n\n            </div>\n        </LightTooltip>\n    )\n}\n\nexport default MusicPlayer","import React from 'react'\n\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Box from '@mui/material/Box'\nimport Card from '@mui/material/Card'\nimport Paper from '@mui/material/Paper'\nimport CardMedia from '@mui/material/CardMedia'\nimport IconButton from '@mui/material/IconButton'\nimport Typography from '@mui/material/Typography'\nimport SkipPreviousIcon from '@mui/icons-material/SkipPrevious'\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow'\nimport PauseIcon from '@mui/icons-material/Pause'\nimport SkipNextIcon from '@mui/icons-material/SkipNext'\nimport Slide from '@mui/material/Slide';\n\nimport { Game, onAnswers, onErrorAnswers, OnGameUpdate, onQuestionNumber } from '../data/Game'\nimport { Player, PlayerId } from '../data/Player'\nimport { Question, OnQuestionUpdate, onQuestionPlayed, onQuestionCompleted, addPlayerAnswer, removePlayerAnswer, hasPlayerAnswer, onQuestionError } from '../data/Question'\nimport { range, onUserEvent } from '../data/Util'\nimport { Alert, Avatar, Badge, Fade, Grow, Tooltip } from '@mui/material'\nimport PlayingCard from './PlayingCard'\nimport { CardSize } from '../data/Card'\nimport { Answer, AnswerId } from '../data/Answer'\nimport PlayerAvatar, { AvatarSize } from './PlayerAvatar'\nimport { getQuestionAnswerStats, getQuestionStats } from '../data/PlayerStats'\nimport PlayerCard from './PlayerCard'\nimport { withStyles } from '@mui/styles'\nimport MusicPlayer from './MusicPlayer'\nimport { DEBUG, MAX_NB_SECONDS_LOADING, MAX_NB_SECONDS_PLAYING, ONE_SECOND } from '../data/Constants'\n\ninterface Props {\n    game: Game\n    question: Question\n    updateGame: OnGameUpdate\n    updateQuestion: OnQuestionUpdate    \n    onNext: () => void\n}\n\nconst QuestionCard = ( props: Props ) => {\n    const { game, question, updateGame, updateQuestion, onNext } = props\n\n    const [ questionId, setQuestionId ] = React.useState( question.id )\n    const [ musicLoading, setMusicLoading ] = React.useState( true )\n    const [ nbSecondsTotal, setNbSecondsTotal ] = React.useState( 0 )\n    const [ nbShownAnswers, setNbShownAnswers ] = React.useState( 0 )\n    const [ musicReady, setMusicReady ] = React.useState( false )\n    const [ countDown, setCountDown ] = React.useState( 3 )\n    const [ musicStarted, setMusicStarted ] = React.useState( false )\n    const [ musicPlaying, setMusicPlaying ] = React.useState( false )\n    const [ nbSecondsPlayed, setNbSecondsPlayed ] = React.useState( 0 )\n    const [ musicEnded, setMusicEnded ] = React.useState( false )\n\n    if ( !game || !question ) {\n        return null\n    }\n\n    React.useEffect( () => {\n        if ( questionId != question.id ) {\n            console.log( `new question >>> setQuestionId( ${question.id} ) + reset()` ) \n            setQuestionId( question.id )\n            reset()\n        }\n    }, [ questionId, question.id ] );\n        \n    const musicError = question.status == 'error'\n    const musicPlayed = musicEnded || question.status == 'played' || question.status == 'completed'\n\n    //\n    // update helpers\n    //\n\n    const hasAnswer = ( playerId: PlayerId, answerId: AnswerId ): boolean => {\n        return hasPlayerAnswer( question, playerId, answerId )\n    }\n\n    const addAnswer = ( playerId: PlayerId, answerId: AnswerId ) => {\n        updateQuestion( game.id, question.id, ( question: Question ) => addPlayerAnswer( question, playerId, answerId ) )    \n    }\n\n    const removeAnswer = ( playerId: PlayerId, answerId: AnswerId ) => {\n        updateQuestion( game.id, question.id, ( question: Question ) => removePlayerAnswer( question, playerId, answerId ) )        \n    }\n\n    const flagQuestionAsFailed = () => {\n        updateQuestion( game.id, question.id, ( question: Question ) => onQuestionError( question ) )  \n        updateGame( game.id, onErrorAnswers( game, question ) )     \n    }\n\n    //\n    // sort players by score\n    //\n     \n    const sortedPlayers = [ ...game.players ].sort( ( left: Player, right: Player ): number => {\n        return right.stats.score - left.stats.score\n    } )\n\n    //\n    // badge\n    //\n\n    const badgeValue = ( value: number | undefined ): string | undefined => {\n        if ( value ) {\n            if ( value === 0 ) {\n                return `-`\n            } else if ( value > 0 ) {\n                return `+${value}`\n            } else {\n                return `${value}`\n            }\n        }\n        return undefined\n    }\n\n    const badgeColor = ( value: number | undefined ): 'info' | 'success' | 'warning' | undefined => {\n        if ( value ) {\n            if ( value === 0 ) {\n                return `info`\n            } else if ( value > 0 ) {\n                return `success`\n            } else {\n                return `warning`\n            }\n        }\n        return undefined\n    }\n\n    const LightTooltip = withStyles( theme => ( {\n        tooltip: {\n            backgroundColor: 'transparent', // theme.palette.common.white,\n            color: \"rgba(0, 0, 0, 0.87)\",\n            // boxShadow: theme.shadows[1],\n            fontSize: 11\n        },\n        arrow: {\n            color: \"white\"\n        }\n    } ) ) ( Tooltip );\n\n    //\n    // events\n    //\n\n    const reset = () => {\n        setMusicLoading( true )\n        setNbSecondsTotal( 0 )\n        setNbShownAnswers( 0 )\n        setMusicReady( false )\n        setCountDown( 3 )\n        setMusicStarted( false )\n        setMusicPlaying( false )\n        setNbSecondsPlayed( 0 )\n        setMusicEnded( false )\n    }\n\n    const resetOnError = () => {\n        setMusicLoading( false )\n        setNbShownAnswers( 0 )\n    }\n\n    const resetOnPlayed = () => {\n        setNbShownAnswers( question.answers.length )\n    }\n\n    const onMusicLoaded = ( nbSeconds: number ) => {\n        console.log( `onMusicLoaded >>> setMusicLoading( false ) + setNbSeconds( Math.min( ${nbSeconds}, ${MAX_NB_SECONDS_PLAYING} ) )` ) \n        setMusicLoading( false )\n        setNbSecondsTotal( Math.min( Math.ceil( nbSeconds ), MAX_NB_SECONDS_PLAYING ) )\n        setMusicStarted( false )\n        setMusicPlaying( false )\n        setNbSecondsPlayed( 0 )\n        setMusicEnded( false )\n    }\n\n    const onMusicFailed = () => {\n        console.log( `onMusicFailed >>> flagQuestionAsFailed() + setMusicLoading( false )` )\n        setMusicLoading( false )\n        flagQuestionAsFailed()\n    }\n\n    const onMusicPlaying = () => {\n        if ( musicStarted && !musicPlayed ) {\n            console.log( 'onMusicPlaying >>> setMusicPlaying( true )' ) \n            setMusicPlaying( true )\n        } else {\n            console.log( `onMusicPlaying >>> WRONG state! ( musicStarted: ${musicStarted}, musicPlayed: ${musicPlayed} )` ) \n        }\n    }\n\n    const onMusicPaused = () => {\n        if ( musicStarted && !musicPlayed ) {\n            console.log( 'onMusicPaused >>> setMusicPlaying( false )' ) \n            setMusicPlaying( false )\n        } else {\n            console.log( `onMusicPaused >>> WRONG state! ( musicStarted: ${musicStarted}, musicPlayed: ${musicPlayed} )` ) \n        }\n    }\n\n    const onMusicEnded = () => {\n        console.log( 'onMusicEnded >>> onNext() + reset()' )\n        onNext()        \n        reset() \n    }\n\n    const showNextAnswer = () => {        \n        if ( nbShownAnswers == question.answers.length ) {\n            console.log( 'showNextAnswer >>> setMusicReady( true )' ) \n            setMusicReady( true )\n        } else {            \n            // console.log( `showNextAnswer >>> ${nbShownAnswers} + 1` ) \n            setNbShownAnswers( nbShownAnswers + 1 )\n        }\n    }\n\n    const showCountDown = () => {\n        if ( countDown > 1 ) {\n            // console.log( `showCountDown >>> ${countDown} - 1` ) \n            setCountDown( countDown - 1 )\n        } else {\n            console.log( 'showCountDown >>> setMusicStarted( true ) + setMusicPlaying( true )' ) \n            setCountDown( 0 )\n            setMusicStarted( true )\n            setMusicPlaying( true )\n        }\n    }\n\n    const showNbSecondsPlayed = () => {\n        if ( nbSecondsPlayed < nbSecondsTotal ) {\n            // console.log( `showNbSecondsPlayed >>> ${nbSecondsPlayed} + 1` ) \n            setNbSecondsPlayed( nbSecondsPlayed + 1 )\n        } else {\n            console.log( 'showCountDown >>> pauseMusic()' ) \n            setMusicPlaying( false )\n            setMusicEnded( true )\n            onMusicEnded()\n        }\n    }\n\n    React.useEffect( () => {\n        let timerId: any = undefined;\n        if ( musicError ) {\n            resetOnError()\n            clearInterval( timerId );\n            timerId = undefined;\n        } else if ( musicPlayed ) {\n            resetOnPlayed()\n            clearInterval( timerId );\n            timerId = undefined;\n        } else if ( musicLoading ) {\n            // console.log( 'timer >>> musicLoading >>> showMusicLoading' ) \n            timerId = setInterval( onMusicFailed, ONE_SECOND * MAX_NB_SECONDS_LOADING );\n        } else if ( !musicReady ) {\n            // console.log( 'timer >>> !musicReady >>> showNextAnswer' ) \n            timerId = setInterval( showNextAnswer, ONE_SECOND );\n        } else if ( !musicStarted ) {\n            // console.log( 'timer >>> !musicStarted >>> showCountDown' ) \n            timerId = setInterval( showCountDown, ONE_SECOND );\n        } else if ( musicPlaying ) {\n            // console.log( 'timer >>> musicPlaying >>> showNbSecondsPlayed' ) \n            timerId = setInterval( showNbSecondsPlayed, ONE_SECOND );\n        } else {\n            resetOnPlayed()\n            console.log( 'timer >>> ??? >>> STOP' ) \n            clearInterval( timerId );\n            timerId = undefined;\n        }                \n        return () => {\n            timerId && clearInterval( timerId );\n        }\n    }, [ musicLoading, musicError, countDown, nbShownAnswers, musicReady, musicStarted, musicPlaying, nbSecondsPlayed, musicPlayed ] );\n\n    const progress = musicPlayed ? 100 : !musicStarted ? 0 : Math.ceil( Math.min( nbSecondsPlayed, nbSecondsTotal ) * 100 / nbSecondsTotal )\n    const musicPaused = !musicPlayed && musicStarted && !musicPlaying\n    const showHints = progress > 50\n    const countingDown = musicReady && !musicStarted\n\n    let musicPlayerInfo = undefined\n    if ( musicError ) {\n        musicPlayerInfo = (\n            <Typography sx={{ fontSize: 40, fontWeight: 'bold', color: 'red' }}>\n                X\n            </Typography>\n        )\n    } else if ( musicLoading || !musicReady || musicPlayed ) {\n        musicPlayerInfo = undefined\n    } else if ( !musicStarted ) {\n        musicPlayerInfo = (\n            <Typography sx={{ fontSize: 40, fontWeight: 'bold', color: 'gray' }}>\n                {countDown}\n            </Typography>\n        )\n    } else {\n        musicPlayerInfo = (\n            <Typography sx={{ fontSize: 20, fontWeight: 'bold', color: 'black' }}>\n                {nbSecondsTotal-nbSecondsPlayed}s\n            </Typography>\n        )\n    }\n\n    return (\n        <>  \n\n            {/* warning: music failed */}\n\n            {musicError && (\n                <Alert \n                    severity=\"warning\" \n                    style={{ \n                        position: 'absolute',\n                        width: '500px',\n                        top: '25%',\n                        left: 'calc( 50% - 250px )',\n                        boxShadow: '3px 3px 3px rgb(0,0,0,0.1)',\n                        borderRadius: '10px',\n                    }}\n                >\n                    Could not load music! Please proceed to next question.\n                </Alert>\n            )}\n\n            {/* answers */}\n\n            {\n                question.answers.map( ( answer, index ) => {\n\n                    const shown = index < nbShownAnswers\n                    const hidden = musicError || !shown\n                    const answerNumber = answer.id % 100 \n                    const color = musicPlayed ? answer.correct ? '#00c508' : 'grey' : 'grey'\n                    const backgroundColor = musicPlayed ? answer.correct ? '#00ff131f' : 'white' : 'white'\n                    \n                    return (\n                        <Paper key={answer.id} className=\"answer\" elevation={3} style={{ margin: '2px', opacity: hidden ? '0' : '1', filter: musicPaused ? 'blur(6px)' : 'none', backgroundColor: backgroundColor }}>\n                            <div \n                                style={{\n                                    position: 'relative', \n                                    display: 'inline-flex',\n                                    alignItems: 'center', \n                                    justifyContent: 'space-between',\n                                    width: '100%'\n                                }}\n                            >                                    \n                                <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'left' }}>\n                                    <Avatar sx={{ bgcolor: color }} style={{ margin: '10px', padding: '5px', fontSize: '2rem', fontWeight: 'bold' }}>{answer.number}</Avatar>\n                                    <div style={{ display: 'flex', flexDirection:'column', alignItems: 'flex-start', justifyContent: 'left' }}> \n                                        <Typography variant='h5' style={{ lineHeight: '1', fontSize: '2rem', fontWeight: 'bold' }}>{answer.answer}</Typography>\n                                        <Typography variant='subtitle2' style={{ marginLeft: '20px', color: 'gray', lineHeight: '1', fontSize: '1.5rem', opacity: showHints ? '1' : '0' }}>{answer.hint}</Typography>\n                                    </div>\n                                </div>\n                                <div\n                                    style={{\n                                        top: 0,\n                                        left: 0,\n                                        bottom: 0,\n                                        right: 5,\n                                        position: 'absolute',\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        justifyContent: 'flex-end',\n                                    }}\n                                >\n                                    { ( question.status == 'played' ) && (\n                                        game.players.map( ( player: Player ) => {\n                                            const disabled = hasAnswer( player.id, answer.id )\n                                            const onClick = question.status == 'played' && !disabled ? () => addAnswer( player.id, answer.id ) : undefined\n                                            return (\n                                                <div key={`answer-${answer.id}-${player.id}`} style={{ marginLeft: '5px' }}>\n                                                    <PlayingCard\n                                                        key={`${player.id}-${answer.id}`} \n                                                        card={{\n                                                            ...player.card,\n                                                            number: answer.number,\n                                                            size: CardSize.XS,\n                                                        }}\n                                                        disabled={disabled} \n                                                        onClick={onClick} \n                                                    />\n                                                </div>\n                                            )\n                                        } )\n                                    ) }\n                                </div>\n                            </div>                                \n                        </Paper>\n                    )\n                })\n            } \n\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n\n                <div style={{ width: '100%', display: 'flex', alignItems: 'center', justifyItems: 'flex-start', marginTop: '15px' }}>\n\n                    {/* music player */}\n\n                    <MusicPlayer \n                        questionId={question.id} \n                        music={question.music}\n                        failed={musicError}\n                        loading={musicLoading}\n                        info={musicPlayerInfo}\n                        started={musicStarted}\n                        playing={musicPlaying} \n                        progress={progress}\n                        played={musicPlayed} \n                        onMusicLoaded={onMusicLoaded}\n                        onMusicPlaying={onMusicPlaying}\n                        onMusicPaused={onMusicPaused}\n                        onMusicEnded={onMusicEnded}\n                    />\n    \n                    {/* selected players answers */}\n\n                    <div style={{ display: 'flex', alignItems: 'center', justifyItems: 'flex-start', justifyContent: 'space-between', marginLeft: '50px' }}>\n                    { \n                        question.playerAnswers.map( playerAnswer => {\n                            const player = game.players.find( player => player.id === playerAnswer.playerId )\n                            if ( !player ) {\n                                return null\n                            }\n                            const answer = question.answers.find( answer => answer.id === playerAnswer.answerId )\n                            if ( !answer ) {\n                                return null\n                            }\n                            const correct = question.status == 'completed' ? answer.correct : undefined\n                            const answerStats = getQuestionAnswerStats( player.stats, question.id, playerAnswer.answerId )\n                            const score = question.status == 'completed' && answerStats ? answerStats.score : undefined\n                            const onClick = question.status == 'played' ? () => removeAnswer( player.id, answer.id ) : undefined                            \n                            return ( \n                                <div key={`selected-${answer.id}-${player.id}`} style={{ transition: 'transform 1000ms cubic-bezier(0, 0, 0.2, 1) 1000ms' }}>                               \n                                    <Badge className='card--badge' badgeContent={badgeValue(score)} color={badgeColor(score)}>                                    \n                                        <PlayingCard\n                                            key={`${player.id}-${answer.id}`} \n                                            card={{\n                                                ...player.card,\n                                                number: answer.number,\n                                                size: CardSize.XS,\n                                            }} \n                                            onClick={onClick} \n                                        />\n                                    </Badge>\n                                </div>\n                            )\n                        } )\n                    }\n                    {\n                        range( Math.max( 1, game.settings.nbPlayer - question.playerAnswers.length ) ).map( i => {\n                            return (\n                                <div key={`selected-${i}`} className='card--badge'>     \n                                    <PlayingCard cardSize={CardSize.XS}/>\n                                </div>        \n                            )\n                        } )\n                    }\n                    </div>\n\n                </div>\n\n            </div>\n\n            {/* players */}\n\n            <div className='playerChips'>\n            {\n                sortedPlayers.map( player => {\n                    const tooltipId = `player-tooltip-${player.id}`\n                    const questionStats = getQuestionStats( player.stats, question.id )\n                    const score = question.status == 'completed' && questionStats ? questionStats.score : undefined\n                    const disableTooltip = !musicPlayed\n                    return (\n                        <LightTooltip \n                            key={tooltipId} \n                            title={<PlayerCard player={player} avatarSize={AvatarSize.M} cardSize={CardSize.XS}/>} \n                            disableFocusListener={disableTooltip}\n                            disableHoverListener={disableTooltip}\n                        >\n                            <Badge className='playerChip--badge' badgeContent={badgeValue(score)} color={badgeColor(score)}>  \n                                <div className='playerChip' style={{ cursor: musicPlayed ? 'help' : 'auto', }}>\n                                    <span className='playerChip--avatar'><PlayerAvatar key={player.id} id={player.avatarId} size={AvatarSize.S}/></span>\n                                    <span className='playerChip--score'>{player.stats.score}</span>\n                                </div>\n                            </Badge>                            \n                        </LightTooltip>\n                    )\n                } )\n            }\n            </div>\n\n            {/* debug */}\n\n            {DEBUG && <pre style={{ border: '1px solid #999', background: '#fff6f2', display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n                <span>{musicError?'error':'--'}</span>\n                <span>{musicLoading?'loading':'--'}</span>\n                <span>answers: {nbShownAnswers}/{question.answers.length}</span>\n                <span>{musicReady?'ready':'--'}</span>\n                <span>{countDown}s</span>\n                <span>{musicStarted?'started':'--'}</span>\n                <span>music: {nbSecondsPlayed}s / {nbSecondsTotal}s</span>\n                <span>{progress}%</span>\n                <span>{musicPlaying?'playing':'paused'}</span>\n                <span>{showHints?'hints':'--'}</span>\n                <span>{musicEnded?'ended':'--'}</span>\n                <span>{musicPlayed?'played':'--'}</span>\n            </pre>}\n\n            {DEBUG && <pre style={{ border: '1px solid #999', background: '#f2fff6', padding: '20px' }}>{JSON.stringify(question,undefined,4)}</pre>}\n\n        </>\n    )\n}\n\nexport default QuestionCard","import React from 'react'\nimport { useParams } from 'react-router'\nimport { useNavigate } from 'react-router-dom'\n\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Box from '@mui/material/Box'\nimport Card from '@mui/material/Card'\nimport CardContent from '@mui/material/CardContent'\nimport CardMedia from '@mui/material/CardMedia'\nimport IconButton from '@mui/material/IconButton'\nimport Typography from '@mui/material/Typography'\nimport SkipPreviousIcon from '@mui/icons-material/SkipPrevious'\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow'\nimport SkipNextIcon from '@mui/icons-material/SkipNext'\nimport NextButton from '../component/NextButton'\n\nimport Timeline from '@mui/lab/Timeline';\nimport TimelineItem from '@mui/lab/TimelineItem';\nimport TimelineSeparator from '@mui/lab/TimelineSeparator';\nimport TimelineConnector from '@mui/lab/TimelineConnector';\nimport TimelineContent from '@mui/lab/TimelineContent';\nimport TimelineDot from '@mui/lab/TimelineDot';\n\nimport GamePage from '../component/GamePage'\nimport QuestionCard from '../component/QuestionCard'\n\nimport { Game, GameStep, OnGameUpdate, selectGame, selectQuestion, onQuestionNumber, onEndGame, onAnswers } from '../data/Game'\nimport { QuestionId, OnQuestionUpdate, onQuestionPlayed, onQuestionCompleted } from '../data/Question'\nimport { toHomePage, toGamePage } from '../data/Navigate'\nimport { onUserEvent } from '../data/Util'\nimport { DEBUG } from '../data/Constants'\n\ninterface Props {\n    games: Game[]\n    updateGame: OnGameUpdate\n    updateQuestion: OnQuestionUpdate\n}\n\nconst QuestionPage = ( props: Props ) => {\n    const { games, updateGame, updateQuestion } = props\n\n    const navigate = useNavigate()\n\n    const { gameId, questionNumber } = useParams()\n    \n    const game = selectGame( games, gameId )\n    const question = selectQuestion( game, questionNumber )\n    \n    React.useEffect( () => { \n        if ( !game ) {\n            console.log(`[effect] MISSING game! >>> NAVIGATE to home`)\n            navigate( toHomePage() )    \n        } else if ( !question ) {\n            console.log(`[effect] UNKNOWN question! >>> NAVIGATE to home`)\n            navigate( toHomePage() )     \n        } else if ( game.questionNumber != question.number ) {\n            console.log(`[effect] NEW question! >>> NAVIGATE to question ${game.questionNumber}`)\n            navigate( toGamePage( game ) )    \n        }  \n    }, [ game ] )\n    \n    if ( !game ) {\n        return null\n    }\n\n    \n    if ( !question ) {\n        return null\n    }\n\n    // update helpers\n\n    const musicPlayed = () => {\n        updateQuestion( game.id, question.id, onQuestionPlayed )\n    }\n\n    const musicAnswered = () => {\n        updateGame( game.id, onAnswers( game, question ) )\n        updateQuestion( game.id, question.id, onQuestionCompleted )\n    }\n\n    const updateQuestionNumber = ( questionNumber: number ) => {\n        updateGame( game.id, onQuestionNumber( questionNumber ) )\n    }\n\n    const endGame = () => {\n        updateGame( game.id, onEndGame )\n    }\n\n    // user events\n    \n    const onPrevious = DEBUG && question.previousNumber ? () => {\n        if ( question.previousNumber ) {\n            console.log( `onNext >>> updateQuestionNumber( ${question.previousNumber} )` )\n            updateQuestionNumber( question.previousNumber )\n        }\n    } : undefined\n\n    const onNext = () => {\n        switch ( question.status ) {\n            case 'not-played':\n                console.log( 'onNext >>> musicPlayed()' )\n                musicPlayed()\n                break\n            case 'played':\n                console.log( 'onNext >>> musicAnswered()' )\n                musicAnswered()\n                break\n            case 'error':\n            case 'completed':\n                if ( question.nextNumber ) {\n                    console.log( `onNext >>> updateQuestionNumber( ${question.nextNumber} )` )\n                    updateQuestionNumber( question.nextNumber )\n                } else {\n                    console.log( `onNext >>> endGame()` )\n                    endGame()\n                }\n                break\n        }\n    }\n\n    // title\n\n    const title =  DEBUG ? `Q${question.number} - ${question.title} - ${question.status}` : `Q${question.number} - ${question.title}`\n\n    return (\n        <GamePage title={title} step={GameStep.QUIZZ} game={game} updateGame={updateGame} onPrevious={onPrevious} onNext={onNext}>\n            <QuestionCard game={game} question={question} updateGame={updateGame} updateQuestion={updateQuestion} onNext={onNext}/>\n        </GamePage>\n    )\n}\n\nexport default QuestionPage","import React from 'react'\n\nimport Box from '@mui/material/Box'\nimport Card from '@mui/material/Card'\nimport CardContent from '@mui/material/CardContent'\nimport Grid from '@mui/material/Grid'\nimport TextField from '@mui/material/TextField'\nimport Modal from '@mui/material/Modal'\nimport IconButton from '@mui/material/IconButton'\nimport CloseIcon from '@mui/icons-material/Close'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\nimport MilitaryTechIcon from '@mui/icons-material/MilitaryTech'\n\nimport { Game, OnGameUpdate, updatePlayer } from '../data/Game'\nimport { Card as DataCard, CardSymbol, CardColor, CardSize, DefaultCards } from '../data/Card'\nimport { Player } from '../data/Player'\n\nimport PlayingCard from './PlayingCard'\nimport PlayingCardIcon from './PlayingCardIcon'\nimport PlayerAvatar, { AvatarSize } from './PlayerAvatar';\nimport { Accordion, AccordionDetails, AccordionSummary, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography } from '@mui/material'\nimport { ColorizeRounded } from '@mui/icons-material'\n\ninterface Props {\n    game: Game\n    player: Player\n    position: number\n    color: string\n    medalColor?: string    \n}\n\nconst PlayerScoreCard = ( props: Props ) => {\n    const { game, player, position, color, medalColor } = props\n\n    if ( !player.number ) {\n        return null\n    }\n\n    const prettyPoints = ( value: number ): string => {\n        value = value < 10 ? Math.ceil( 10 * value ) / 10 : Math.ceil( value )\n        if ( value > 0 ) {\n            return `+ ${value} pts`\n        } else if ( value < 0 ) {\n            return `- ${-value} pts`\n        } else {\n            return `-`\n        }\n    }\n\n    const prettyPercent = ( value: number ): string => {\n        value = value < 10 ? Math.ceil( 10 * value ) / 10 : Math.ceil( value )\n        if ( value > 0 ) {\n            return `${value} %`\n        } else if ( value < 0 ) {\n            return `-${-value} %`\n        } else {\n            return `-`\n        }\n    }\n\n    const nbTotal = player.stats.nbAnswer + player.stats.nbMiss\n    const successPercent = nbTotal > 0 ? player.stats.nbSuccess * 100 / nbTotal : 0\n    const failurePercent = nbTotal > 0 ? player.stats.nbFailure * 100 / nbTotal : 0\n    const missPercent = nbTotal > 0 ? player.stats.nbMiss * 100 / nbTotal : 0\n\n    let sumBySuccessAnswer = 0\n    let sumByFailureAnswer = 0\n    let nbSuccessAnswer = 0\n    let nbFailureAnswer = 0\n    for ( const question of player.stats.questions ) {\n        for ( const answer of question.answers ) {\n            if ( answer.success ) {\n                nbSuccessAnswer++\n                sumBySuccessAnswer += answer.score\n            } else {\n                nbFailureAnswer++\n                sumByFailureAnswer += answer.score\n            }\n        } \n    }    \n    const avgSuccessDelta = nbSuccessAnswer > 0 ? sumBySuccessAnswer / nbSuccessAnswer : 0    \n    const avgFailureDelta = nbFailureAnswer > 0 ? sumByFailureAnswer / nbFailureAnswer : 0\n    const avgDelta = ( nbSuccessAnswer + nbFailureAnswer ) > 0 ? ( sumBySuccessAnswer + sumByFailureAnswer ) / ( nbSuccessAnswer + nbFailureAnswer ) : 0    \n\n    return (\n\n        <Accordion>\n            <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n            >\n                \n                <Grid container spacing={2} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}> \n                    <Grid item xs={12}>\n                        <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n                            <div style={{ display: 'inline-flex', alignItems: 'center' }}>\n                                <div style={{ \n                                    width: '32px',\n                                    borderRadius: '20px',\n                                    border: `4px solid ${medalColor || '#42a5f5'}`,\n                                    color: medalColor || '#42a5f5',\n                                    // boxShadow: 'rgb(0 0 0 / 20%) 3px 3px 3px',\n                                    fontSize: '15px',\n                                    fontWeight: 'bold',\n                                    aspectRatio: '1',\n                                    display: 'flex',\n                                    alignItems: 'center',\n                                    justifyContent: 'center',\n                                    marginRight: '30px',\n                                }}>\n                                    {position}                                   \n                                </div>\n                                <PlayerAvatar id={player.avatarId} size={AvatarSize.M}/>\n                                <Typography style={{ marginLeft: '10px' }} >{player.name}</Typography>\n                                <MilitaryTechIcon style={{ marginLeft: '20px', fontSize: '2.5em', color: medalColor, opacity: medalColor ? '1' : '0' }}/>\n                            </div>\n                            <div style={{ \n                                width: '40px',\n                                borderRadius: '20px',\n                                marginRight: '10px',\n                                backgroundColor: color,\n                                boxShadow: 'rgb(0 0 0 / 20%) 3px 3px 3px',\n                                fontSize: '15px',\n                                fontWeight: 'bold',\n                                aspectRatio: '1',\n                                display: 'flex',\n                                alignItems: 'center',\n                                justifyContent: 'center'\n                            }}>\n                                {player.stats.score}\n                            </div>\n                        </Box> \n                    </Grid>\n                </Grid>\n\n            </AccordionSummary>\n\n            <AccordionDetails>\n    \n                <TableContainer component={Paper}>\n                    <Table aria-label=\"simple table\" size=\"small\">\n                        <TableHead>\n                            <TableRow sx={{ backgroundColor: '#e3d5ca' }}>\n                                <TableCell>score: {player.stats.score}</TableCell>\n                                <TableCell align=\"right\">gain</TableCell>\n                                <TableCell align=\"right\">nb</TableCell>\n                                <TableCell align=\"right\">%</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">answers:</TableCell>\n                                <TableCell align=\"right\">{prettyPoints(avgDelta)}</TableCell>\n                                <TableCell align=\"right\">{player.stats.nbSuccess+player.stats.nbFailure}</TableCell>\n                                <TableCell align=\"right\">{prettyPercent(successPercent+failurePercent)}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\"> - succeed</TableCell>\n                                <TableCell align=\"right\">{prettyPoints(avgSuccessDelta)}</TableCell>\n                                <TableCell align=\"right\">{player.stats.nbSuccess}</TableCell>\n                                <TableCell align=\"right\">{prettyPercent(successPercent)}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\"> - failed</TableCell>\n                                <TableCell align=\"right\">{prettyPoints(avgFailureDelta)}</TableCell>\n                                <TableCell align=\"right\">{player.stats.nbFailure}</TableCell>\n                                <TableCell align=\"right\">{prettyPercent(failurePercent)}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">missed</TableCell>\n                                <TableCell align=\"right\">{prettyPoints(0)}</TableCell>\n                                <TableCell align=\"right\">{player.stats.nbMiss}</TableCell>\n                                <TableCell align=\"right\">{prettyPercent(missPercent)}</TableCell>\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n\n            </AccordionDetails>\n        </Accordion>\n    )\n}\n\nexport default PlayerScoreCard","\n// //////////////////////////////////////////////////\n// steps\n\nexport enum AdminStep {\n    THEMES = 'THEMES',\n    THEME = 'THEME',\n}","import React from 'react'\nimport { useParams } from 'react-router'\nimport { useNavigate } from 'react-router-dom'\nimport ReplayButton from '../component/ReplayButton'\n\nimport GamePage from '../component/GamePage'\n\nimport { Game, GameStep, OnGameUpdate, OnStep, selectGame, newGame } from '../data/Game'\nimport { toHomePage, toGamePage } from '../data/Navigate'\nimport { Grid } from '@mui/material'\nimport PlayerScoreCard from '../component/PlayerScoreCard'\nimport { Player } from '../data/Player'\nimport { VictoryChart, VictoryLine, VictoryScatter, VictoryTooltip, VictoryGroup, VictoryVoronoiContainer, VictoryLegend } from 'victory'\nimport { computeVizualiationScoreData } from '../data/PlayerStats'\nimport PlayerAvatar, { AvatarSize } from '../component/PlayerAvatar'\n\ninterface Props {\n    games: Game[]\n    updateGame: OnGameUpdate\n    addGame: ( game: Game ) => void\n}\n\nconst ScoresPage = ( props: Props ) => {\n    const { games, updateGame, addGame } = props\n\n    const navigate = useNavigate()\n\n    const { gameId } = useParams()\n    const game = selectGame( games, gameId )\n    \n    React.useEffect( () => { \n        if ( !game ) {\n            console.log(`[effect] MISSING game! >>> NAVIGATE home`)\n            navigate( toHomePage() )    \n        }\n    }, [ game ] )\n    \n    if ( !game ) {\n        return null\n    }\n\n    const restartNewGame = () => {\n        const game = newGame()\n        addGame( game )\n        navigate( toGamePage( game ) )\n    }\n\n    const onNext = () => {   \n        if ( game.ended ) {\n            navigate( toHomePage() )\n        } else {\n            updateGame( game.id, OnStep( GameStep.QUIZZ ) )\n        }        \n    }\n\n    //\n    // sort players by score\n    //\n     \n    const sortedPlayers = [ ...game.players ].sort( ( left: Player, right: Player ): number => {\n        return right.stats.score - left.stats.score\n    } )\n\n    let previousPosition: number | undefined = undefined\n    let previousScore: number | undefined = undefined\n\n    const colorScale: string[] = [ \n        \"#f29e4c\",\n        \"#f1c453\",\n        \"#efea5a\",\n        \"#b9e769\", \n        \"#83e377\", \n        \"#16db93\", \n        \"#0db39e\", \n        \"#048ba8\", \n        \"#2c699a\", \n        \"#54478c\" \n    ]\n    const medalColorScale: string[] = [ \n        \"gold\",\n        \"grey\",\n        \"brown\" \n    ]\n\n    return (\n        <GamePage step={GameStep.SCORES} game={game} updateGame={updateGame} onNext={onNext}>\n\n            <Grid container spacing={2}>\n\n                {/* players */}\n\n                {\n                    (\n                        <>\n                            {sortedPlayers.map( ( player, index ) => {\n                                \n                                let position = 1                                \n                                if ( previousPosition !== undefined && previousScore !== undefined ) {\n                                    if ( previousScore > player.stats.score ) {\n                                        position = previousPosition + 1\n                                    } else {\n                                        position = previousPosition\n                                    }\n                                }\n                                previousScore = player.stats.score\n                                previousPosition = position\n\n                                return (\n                                    <Grid key={player.id} item xs={12} textAlign=\"left\">\n                                        <PlayerScoreCard\n                                            game={game}\n                                            player={player}\n                                            position={position}\n                                            color={colorScale[index % colorScale.length]}\n                                            medalColor={position-1 < medalColorScale.length ? medalColorScale[position-1] : undefined}\n                                        />\n                                    </Grid>\n                                )\n                            })}                        \n                        </>\n                    )\n                }\n\n                {/* graph */}\n\n                <VictoryChart height={390}> \n\n                    {sortedPlayers.map( ( player, index ) => {\n                        const data = computeVizualiationScoreData( player.stats )\n                        const color = colorScale[index % colorScale.length]\n                        return (\n\n                            <VictoryGroup\n                                key={`player-graph-${player.id}`}\n                                color={color}\n                                labels={({ datum }) => `#${index+1} - ${player.name}: ${datum.tooltip}`}\n                                labelComponent={\n                                    <VictoryTooltip\n                                        style={{ fontSize: 10 }}\n                                    />\n                                }\n                                data={data}\n                            >\n                                <VictoryLine/>\n                                <VictoryScatter\n                                    size={3}\n                                    style={{ data: { fill: color } }}\n                                />\n                            </VictoryGroup>\n                        )\n                    })}\n\n                </VictoryChart>\n\n            </Grid> \n            \n        </GamePage>\n    )\n}\n\nexport default ScoresPage","import React from 'react'\n\nimport Grid from '@mui/material/Grid';\n\nimport Page from '../component/Page'\n\nimport PlayerAvatar, { AvatarSize } from '../component/PlayerAvatar';\n\ninterface Props {}\n\nconst AvatarsPage = ( props: Props ) => {\n\n    return (\n        <Page title=\"Avatars\">\n\n            <Grid container spacing={2}>\n\n                { [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20].map(number => {\n\n                    return (\n                        <Grid key={number} item xs={12} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-around', backgroundColor: '#ddd' }}>\n                            {\n                                Object.keys( AvatarSize ).map(size => {\n                                    return (\n                                        <PlayerAvatar key={`${number}-${size}`} id={number} size={size as AvatarSize} />\n                                    )\n                                })\n                            }\n                        </Grid>\n                    )\n                } ) }\n\n            </Grid>\n\n        </Page>\n    )\n}\n\nexport default AvatarsPage","import React from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nimport AppBar from '@mui/material/AppBar'\nimport Box from '@mui/material/Box'\nimport Toolbar from '@mui/material/Toolbar'\nimport IconButton from '@mui/material/IconButton'\n\nimport SkipPreviousIcon from '@mui/icons-material/SkipPrevious'\nimport SkipNextIcon from '@mui/icons-material/SkipNext'\nimport KeyboardArrowLeftIcon from '@mui/icons-material/KeyboardArrowLeft'\n\nimport { AdminStep } from '../data/Admin'\n\ninterface Props {\n    title?: string\n    step?: AdminStep\n    onBack?: () => void\n    onPrevious?: () => void\n    onNext?: () => void\n}\n\nconst Header = ( props: Props ) => {\n    const { title, step, onBack, onPrevious, onNext } = props\n\n    const navigate = useNavigate()\n\n    // title helpers\n\n    const themesTitle = 'Themes'\n    const themeTitle = 'Theme'\n\n    // selected helpers\n\n    const isNoneSelected = step === undefined\n    const isThemesSelected = step == AdminStep.THEMES\n    const isThemeSelected = step == AdminStep.THEME\n\n    // title \n\n    const finalTitle = title ? title : \n                        isThemesSelected ? themesTitle : \n                        isThemeSelected ? themeTitle : ''\n\n    return (\n        <Box className=\"header\" sx={{ flexGrow: 1 }} style={{ marginBottom: '20px' }}>\n            <AppBar position=\"static\" color=\"transparent\">\n                <Toolbar>\n\n                    {/* back */}\n\n                    {onBack && (\n                            <IconButton \n                                aria-label=\"Back\" \n                                onClick={onBack}\n                            >\n                                <KeyboardArrowLeftIcon />\n                            </IconButton>\n                        )}\n\n                    <div style={{ width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n\n                        \n\n                        {/* title */}\n\n                        <div style={{ fontWeight: 'bold', textTransform: 'uppercase' }}>{finalTitle}</div>\n\n                        {/* Previous & Next */}\n                        \n                        <div>\n\n                            { onPrevious && (\n                                <IconButton \n                                    aria-label=\"Previous\" \n                                    color=\"info\"\n                                    onClick={onPrevious}\n                                >\n                                    <SkipPreviousIcon />\n                                </IconButton>\n                            ) }\n                            \n                            { onNext && (\n                                <IconButton \n                                    aria-label=\"Next\" \n                                    color=\"info\"\n                                    onClick={onNext}\n                                >\n                                    <SkipNextIcon />\n                                </IconButton>\n                            ) }\n\n                        </div>\n\n                    </div>\n\n                </Toolbar>\n            </AppBar>\n        </Box>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport Typography from '@mui/material/Typography';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\n\nimport { Game } from '../data/Game'\n\ninterface Props {\n}\n\nconst AdminFooter = ( props: Props ) => {\n\n    return (\n        <>\n            {/* <Box className=\"footer\" sx={{ marginTop: '20px', flexGrow: 1 }}>\n                <AppBar position=\"static\" color=\"transparent\">\n                    <Toolbar style={{ width: '100%', textAlign: 'center' }}>\n                        <Typography variant=\"caption\" display=\"block\" color=\"GrayText\" gutterBottom>\n                            @mnezic\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n            </Box> */}\n        </>\n    )\n}\n\nexport default AdminFooter","import React from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nimport { AdminStep } from '../data/Admin'\nimport { toHomePage, toGamePage } from '../data/Navigate'\n\nimport AdminHeader from './AdminHeader'\nimport AdminFooter from './AdminFooter'\nimport { DEBUG } from '../data/Constants'\n\ninterface Props {\n    title?: string\n    step: AdminStep\n    onBack?: () => void\n    children: any\n}\n\nconst AdminPage = ( props: Props ) => {\n    const { title, step, onBack, children } = props\n\n    const navigate = useNavigate()\n    \n    return (\n        <>\n            <div className={`admin-page step-${step.toLowerCase()}`}>\n                <AdminHeader title={title} step={step} onBack={onBack}/>\n                {children}\n                <AdminFooter />\n            </div>\n        </>\n    )\n}\n\nexport default AdminPage","import React from 'react'\n\nimport { IconButton, Typography } from '@mui/material';\nimport CheckIcon from '@mui/icons-material/Check';\nimport CloseIcon from '@mui/icons-material/Close';\nimport AddIcon from '@mui/icons-material/Add';\nimport SearchIcon from '@mui/icons-material/Search';\n\nimport { Box, Grid, Modal, Button, TextField } from '@mui/material';\nimport { DataGrid, GridColDef } from '@mui/x-data-grid';\n\nimport { onUserEvent, onValueEvent } from '../data/Util';\n\ninterface Props {\n    open: boolean\n    closeModal: () => void\n    createTheme: (title: string, imgUrl?: string) => void\n}\n\nconst CreateThemeModal = ( props: Props ) => {\n    const { open, closeModal, createTheme } = props\n\n    const [ title, SetTitle ] = React.useState<string>()\n    const [ imgUrl, SetImgUrl ] = React.useState<string>()\n\n    const handleTitleChange = onValueEvent((value) => {\n        console.log(`SetTitle: ${value}`)\n        SetTitle(value);\n    })\n\n    const handleImgUrlChange = onValueEvent((value) => {\n        console.log(`SetImgUrl: ${value}`)\n        SetImgUrl(value);\n    })\n\n    const onSubmit = onUserEvent(() => {\n        console.log(`createTheme: ${title} - ${imgUrl}`)\n        if ( title ) {\n            createTheme(title,imgUrl);\n            closeModal();\n        }\n    })\n\n    const style = {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: 700,\n        bgcolor: 'background.paper',\n        borderRadius: '10px',\n        boxShadow: 24,\n        p: 4,\n    };\n\n    return (\n        <Modal\n            open={open}\n            onClose={closeModal}\n            aria-labelledby=\"modal-modal-title\"\n            aria-describedby=\"modal-modal-description\"\n        > \n            <Box sx={style}>\n                <Grid container spacing={0} style={{ alignItems: 'center' }}>\n                    \n                    <Grid item xs={12} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-end' }}>\n                        <IconButton aria-label=\"Close\" onClick={closeModal}>\n                            <CloseIcon />\n                        </IconButton>\n                    </Grid>\n\n                    <Grid item xs={12} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', marginTop: '5px', marginBottom: '10px' }}>\n                        <TextField\n                            onChange={handleTitleChange}\n                            id=\"theme-title\"\n                            label=\"Title\"\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            style={{minWidth:'200px'}}\n                            type=\"text\"\n                            />\n                    </Grid>\n\n                    <Grid item xs={12} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', marginTop: '5px', marginBottom: '10px' }}>\n                        <TextField\n                            onChange={handleImgUrlChange}\n                            id=\"theme-img-url\"\n                            label=\"Image URL\"\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            style={{minWidth:'200px'}}\n                            type=\"text\"\n                            />\n                    </Grid>\n\n                    <Grid item xs={12} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', marginTop: '5px', marginBottom: '10px' }}>\n                        <Button aria-label=\"Create\" onClick={onSubmit}>\n                            <AddIcon />\n                        </Button>\n                    </Grid>\n\n                </Grid>\n\n            </Box>\n\n        </Modal>\n    )\n}\n\nexport default CreateThemeModal","// //////////////////////////////////////////////////\n// import\n\nimport { ThemeInfo } from \"../data/ThemeInfo\"\n\nimport { JsonThemeInfo, ToThemeInfo } from \"./JsonThemeInfo\"\n\n// //////////////////////////////////////////////////\n// themes\n\nexport async function FetchThemes(): Promise<ThemeInfo[]> {\n\n    let requestURL = `${process.env.REACT_APP_API_ROOT_URI}/theme`\n    console.log(`[api] requestURL = ${requestURL}`)\n\n    const response = await fetch(requestURL, {method: 'GET'})\n    if (!response.ok) {\n        const message = `An error has occured while fetching themes: ${response.status} ${response.body}`;\n        throw new Error(message);\n    }\n\n    const jsonResponse = await response.json() as JsonThemesResponse;\n    if (!jsonResponse.success) {\n        const message = `Unable to fetch themes: ${response.status} ${response.body}`;\n        throw new Error(message);\n    }\n    return jsonResponse.themes.map( jsonThemeInfo => ToThemeInfo( jsonThemeInfo ) );\n}\n\n// //////////////////////////////////////////////////\n// json\n\nexport interface JsonThemesResponse {\n    success: boolean\n    themes: JsonThemeInfo[]\n}","// //////////////////////////////////////////////////\n// import\n\nimport { ThemeInfo } from \"../data/ThemeInfo\"\n\n// //////////////////////////////////////////////////\n// adapter\n\nexport function ToThemeInfo( json: JsonThemeInfo ): ThemeInfo {\n    return {\n        id: json.id,\n        title: json.title,\n        imgUrl: json.imgUrl,\n        nbQuestion: json.nbQuestion,\n    }\n}\n\n// //////////////////////////////////////////////////\n// json\n\nexport interface JsonThemeInfo {\n    id: number\n    title: string\n    imgUrl: string\n    nbQuestion: number\n}","// //////////////////////////////////////////////////\n// import\n\nimport { JsonMusic, ToMusic, FromMusic } from \"./JsonMusic\"\nimport { ThemeQuestion } from \"../data/ThemeQuestion\"\n\n// //////////////////////////////////////////////////\n// adapter\n\nexport function ToThemeQuestion( json: JsonThemeQuestion ): ThemeQuestion {\n    return {\n        id: json.id,\n        text: json.text,\n        hint: json.hint,\n        music: json.music ? ToMusic( json.music ): undefined,\n    }\n}\n\nexport function FromThemeQuestion( question: ThemeQuestion ): JsonThemeQuestion {\n    return {\n        id: question.id,\n        text: question.text,\n        hint: question.hint,\n        music: question.music ? FromMusic( question.music ) : undefined,\n    }\n}\n\nexport interface JsonThemeQuestion {\n    id: number\n    text: string\n    hint: string\n    music?: JsonMusic\n}","// //////////////////////////////////////////////////\n// import\n\nimport { Theme } from \"../data/Theme\"\n\nimport { JsonThemeQuestion, FromThemeQuestion, ToThemeQuestion } from \"./JsonThemeQuestion\"\n\n// //////////////////////////////////////////////////\n// adapter\n\nexport function ToTheme( json: JsonTheme ): Theme {\n    return {\n        id: json.id,\n        title: json.title,\n        imgUrl: json.imgUrl,\n        questions: ( json.questions || [] ).map( jsonQuestion => ToThemeQuestion( jsonQuestion ) )\n    }\n}\n\nexport function FromTheme( theme: Theme ): JsonTheme {\n    return {\n        id: theme.id,\n        title: theme.title,\n        imgUrl: theme.imgUrl,\n        questions: ( theme.questions || [] ).map( question => FromThemeQuestion( question ) )\n    }\n}\n\nexport interface JsonTheme {\n    id: number\n    title: string\n    imgUrl: string\n    questions: JsonThemeQuestion[]\n}","// //////////////////////////////////////////////////\n// import\n\nimport { Theme } from \"../data/Theme\"\n\nimport { JsonTheme, ToTheme } from \"./JsonTheme\"\n\n// //////////////////////////////////////////////////\n// create theme\n\nexport async function CreateTheme( title: string, imgUrl?: string ): Promise<Theme> {\n\n    let url = `${process.env.REACT_APP_API_ROOT_URI}/theme/new`\n    console.log(`[client] requestURL = ${url}`)\n\n    let body: JsonCreateThemeBody = {\n        theme: {\n            title: title,\n            imgUrl: imgUrl,\n        }\n    }\n\n    const response = await fetch(url, {\n        method: 'PUT',\n        headers: {\n            'content-type': 'application/json;charset=UTF-8',\n        },\n        body: JSON.stringify(body),\n    })\n    if (!response.ok) {\n        const message = `An error has occured while creating theme: ${response.status} ${response.body}`;\n        throw new Error(message);\n    }\n\n    const jsonResponse = await response.json() as JsonCreateThemeResponse;\n    if (!jsonResponse.success) {\n        const message = `Unable to create theme: ${response.status} ${response.body}`;\n        throw new Error(message);\n    }\n\n    return ToTheme( jsonResponse.theme )\n}\n\nexport interface JsonCreateThemeBody {\n    theme: JsonCreateTheme\n}\n\nexport interface JsonCreateTheme {\n    title: string\n    imgUrl?: string\n}\n\nexport interface JsonCreateThemeResponse {\n    success: boolean\n    theme: JsonTheme\n}","// //////////////////////////////////////////////////\n// import\n\nimport { Theme } from \"../data/Theme\"\n\nimport { JsonTheme, ToTheme } from \"./JsonTheme\"\n\n// //////////////////////////////////////////////////\n// remove theme\n\nexport async function RemoveTheme( themeId: number ): Promise<boolean> {\n\n    let url = `${process.env.REACT_APP_API_ROOT_URI}/theme/${themeId}`\n    console.log(`[client] requestURL = ${url}`)\n\n    const response = await fetch(url, {\n        method: 'DELETE',\n    })\n    if (!response.ok) {\n        const message = `An error has occured while deleting theme: ${response.status} ${response.body}`;\n        throw new Error(message);\n    }\n\n    const jsonResponse = await response.json() as JsonRemoveThemeResponse;\n    if (!jsonResponse.success) {\n        const message = `Unable to delete theme: ${response.status} ${response.body}`;\n        throw new Error(message);\n    }\n\n    return jsonResponse.success\n}\n\nexport interface JsonRemoveThemeResponse {\n    success: boolean\n}","import React from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nimport { IconButton, Alert, AlertTitle, Box } from '@mui/material'\nimport AddIcon from '@mui/icons-material/Add'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport EditIcon from '@mui/icons-material/Edit'\nimport { DataGrid, GridColDef } from '@mui/x-data-grid'\n\nimport AdminPage from '../component/AdminPage'\nimport CreateThemeModal from '../component/CreateThemeModal'\n\nimport { FetchThemes } from '../client/FetchThemes'\nimport { CreateTheme } from '../client/CreateTheme'\nimport { RemoveTheme } from '../client/RemoveTheme'\n\nimport { AdminStep } from '../data/Admin'\nimport { ThemeInfo } from '../data/ThemeInfo'\nimport { toHomePage, toAdminThemePage } from '../data/Navigate'\nimport { onUserEvent } from '../data/Util'\n\ninterface Props {\n}\n\nconst AdminThemesPage = ( props: Props ) => {\n\n    const navigate = useNavigate()\n\n    const [themes, setThemes] = React.useState<ThemeInfo[]>()\n    const [error, setError] = React.useState<Error>();\n\n    const [ createThemeModal, setCreateThemeModal ] = React.useState( false )\n    const openCreateThemeModal = () => {\n        setCreateThemeModal(true)\n    }\n    const closeCreateThemeModal = () => {\n        setCreateThemeModal(false)\n    }\n    const createTheme = ( title: string, imgUrl?: string ) => {\n        if ( title ) {\n            CreateTheme(title,imgUrl).then((theme) => { fetchThemes() }).catch(onError)\n        } else {\n            console.log(\"missing theme title!\")\n        }\n    }\n    \n    const editTheme = (theme: ThemeInfo) => {\n        return onUserEvent(() => {\n            console.log(\"click >>> edit theme\", theme.id )\n            if ( theme.id ) {\n                toTheme(theme.id)\n            } else {\n                console.log(\"missing theme id!\", theme)\n            }\n        })\n    }\n\n    const deleteTheme = (theme: ThemeInfo) => {\n        console.log(\"click >>> delete theme\", theme.id )\n        if ( theme.id ) {\n            if (window.confirm('Are you sure you wish to delete this item?')) {\n                RemoveTheme(theme.id).then((ok) => { fetchThemes() }).catch(console.log)\n            }\n        } else {\n            console.log(\"missing theme id!\", theme)\n        }\n    }\n    \n    const fetchThemes = () => {\n        FetchThemes()\n            .then((themes) => setThemes(themes))\n            .catch(onError);\n    }\n\n    const onError = (err: Error) => {\n        console.error(err)\n        setError(err)\n    }\n\n    React.useEffect(() => {\n        fetchThemes()\n    }, [])\n\n    console.log(error)\n    if ( error !== undefined ) {\n        return <Alert severity=\"error\">\n                    <AlertTitle>Error</AlertTitle>\n                    <strong>{error.message}</strong>\n                </Alert>\n    }\n    console.log(themes)\n    if ( themes === undefined ) {\n        return null\n    }\n\n    const toHome = () => {\n        console.log( `[to-home]` )\n        navigate( toHomePage() )\n    }\n\n    const toTheme = ( themeId: number ) => {\n        console.log( `[to-theme] ${themeId}` )\n        navigate( toAdminThemePage( themeId ) )\n    }\n\n    const columns: GridColDef[] = [\n          {\n          field: 'imgUrl',\n          headerName: ' ',\n          cellClassName: 'music-button-cell',\n          width: 56,\n          editable: false,\n          disableColumnMenu: true,\n          sortable: false,\n          renderCell: (params) => {\n            if ( params.value == null ) {\n                return null\n            }\n            return <img src={params.value} style={{ width: '100%', height: '100%', objectFit: 'contain' }} />\n          },\n        },\n        {\n          field: 'title',\n          headerName: 'Title',\n          flex: 1,\n          editable: false,\n        },\n        {\n          field: 'nbQuestion',\n          headerName: ' ',\n          type: 'number',\n          width: 50,\n          editable: false,\n          disableColumnMenu: true,\n          valueFormatter: (params) => {\n            if ( params.value == null ) {\n                return '-'\n            }\n            return `${params.value}`\n          },\n        },\n        {\n          field: 'actions',\n          headerName: 'Actions',\n          width: 100,\n          editable: false,\n            disableColumnMenu: true,\n          sortable: true,\n          renderHeader(params) {\n              return <IconButton \n              color=\"primary\"\n              aria-label=\"Add\"\n              onClick={openCreateThemeModal}\n              >\n              <AddIcon />\n          </IconButton>\n          },\n          renderCell: (params) => {\n              return <>\n              <IconButton\n                  aria-label=\"Edit\"\n                  onClick={editTheme(params.row)}\n              >\n                  <EditIcon />\n              </IconButton>\n              <IconButton\n              aria-label=\"Delete\"\n              onClick={() => { deleteTheme(params.row) }}\n          >\n              <DeleteIcon />\n          </IconButton>\n          </>\n              \n              \n              \n              \n              \n        },\n        },\n      ];\n\n    return (\n        <AdminPage step={AdminStep.THEMES} onBack={toHome}>\n            <Box sx={{ height: 400, width: '100%' }}>\n\n            <CreateThemeModal\n                open={createThemeModal}\n                closeModal={closeCreateThemeModal}\n                createTheme={createTheme}\n            />\n\n                <DataGrid\n                    rows={themes}\n                    columns={columns}\n                    rowHeight={76}\n                    initialState={{\n                        pagination: {\n                            paginationModel: {\n                                pageSize: 10,\n                            },\n                        },\n                    }}\n                    pageSizeOptions={[10,25,50,100]}\n                    disableRowSelectionOnClick\n                    />\n            </Box>\n        </AdminPage>\n    )\n}\n\nexport default AdminThemesPage","// //////////////////////////////////////////////////\n// import\n\nimport { Theme } from \"../data/Theme\"\n\nimport { JsonTheme, ToTheme } from \"./JsonTheme\"\n\n// //////////////////////////////////////////////////\n// fetch theme\n\nexport async function FetchTheme( themeId: number ): Promise<Theme> {\n\n    let requestURL = `${process.env.REACT_APP_API_ROOT_URI}/theme/${themeId}`\n    console.log(`[api] requestURL = ${requestURL}`)\n\n    const response = await fetch(requestURL, {method: 'GET'})\n    if (!response.ok) {\n        const message = `An error has occured while fetching theme: ${response.status} ${response.body}`;\n        throw new Error(message);\n    }\n\n    const jsonResponse = await response.json() as JsonGetThemeResponse;\n    if (!jsonResponse.success) {\n        const message = `Unable to fetch theme: ${response.status} ${response.body}`;\n        throw new Error(message);\n    }\n\n    return ToTheme( jsonResponse.theme )\n}\n\nexport interface JsonGetThemeResponse {\n    success: boolean\n    theme: JsonTheme\n}","// //////////////////////////////////////////////////\n// import\n\nimport { Theme } from \"../data/Theme\"\n\nimport { JsonTheme, ToTheme } from \"./JsonTheme\"\n\n// //////////////////////////////////////////////////\n// add music to them\n\nexport async function AddMusicToTheme( themeId: number, deezerId: number ): Promise<Theme> {\n\n    let url = `${process.env.REACT_APP_API_ROOT_URI}/theme-question/${themeId}/new?deezer_id=${deezerId}`\n    console.log(`[client] requestURL = ${url}`)\n\n    const response = await fetch(url, {\n        method: 'PUT',\n    })\n    if (!response.ok) {\n        const message = `An error has occured while adding music to theme: ${response.status} ${response.body}`;\n        throw new Error(message);\n    }\n\n    const jsonResponse = await response.json() as JsonAddMusicToThemeResponse;\n    if (!jsonResponse.success) {\n        const message = `Unable to add music to theme: ${response.status} ${response.body}`;\n        throw new Error(message);\n    }\n\n    return ToTheme( jsonResponse.theme )\n}\n\nexport interface JsonAddMusicToThemeResponse {\n    success: boolean\n    theme: JsonTheme\n}","// //////////////////////////////////////////////////\n// import\n\nimport { Theme } from \"../data/Theme\"\n\nimport { JsonTheme, ToTheme } from \"./JsonTheme\"\n\n// //////////////////////////////////////////////////\n// remove theme question\n\nexport async function RemoveThemeQuestion( themeId: number, questionId: number ): Promise<Theme> {\n\n    let url = `${process.env.REACT_APP_API_ROOT_URI}/theme-question/${themeId}/${questionId}`\n    console.log(`[client] requestURL = ${url}`)\n\n    const response = await fetch(url, {\n        method: 'DELETE',\n    })\n    if (!response.ok) {\n        const message = `An error has occured while removing theme question: ${response.status} ${response.body}`;\n        throw new Error(message);\n    }\n\n    const jsonResponse = await response.json() as JsonRemoveThemeQuestionResponse;\n    if (!jsonResponse.success) {\n        const message = `Unable to remove theme question: ${response.status} ${response.body}`;\n        throw new Error(message);\n    }\n\n    return ToTheme( jsonResponse.theme )\n}\n\nexport interface JsonRemoveThemeQuestionResponse {\n    success: boolean\n    theme: JsonTheme\n}","// //////////////////////////////////////////////////\n// import\n\nimport { Theme } from \"../data/Theme\"\nimport { ThemeQuestion } from \"../data/ThemeQuestion\"\n\nimport { JsonTheme, ToTheme } from \"./JsonTheme\"\nimport { JsonThemeQuestion, FromThemeQuestion } from \"./JsonThemeQuestion\"\n\n// //////////////////////////////////////////////////\n// update theme question\n\nexport async function UpdateThemeQuestion( themeId: number, question: ThemeQuestion ): Promise<Theme> {\n\n    let url = `${process.env.REACT_APP_API_ROOT_URI}/theme-question/${themeId}/${question.id}`\n    console.log(`[client] requestURL = ${url}`)\n\n    let body: JsonUpdateThemeQuestionBody = {\n        question: FromThemeQuestion( question ),\n    }\n\n    const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n            'content-type': 'application/json;charset=UTF-8',\n        },\n        body: JSON.stringify(body),\n    })\n    if (!response.ok) {\n        const message = `An error has occured while updating theme question: ${response.status} ${response.body}`;\n        throw new Error(message);\n    }\n\n    const jsonResponse = await response.json() as JsonUpdateThemeQuestionResponse;\n    if (!jsonResponse.success) {\n        const message = `Unable to update theme question: ${response.status} ${response.body}`;\n        throw new Error(message);\n    }\n\n    return ToTheme( jsonResponse.theme )\n}\n\nexport interface JsonUpdateThemeQuestionBody {\n    question: JsonThemeQuestion\n}\n\nexport interface JsonUpdateThemeQuestionResponse {\n    success: boolean\n    theme: JsonTheme\n}","// //////////////////////////////////////////////////\n// import\n\nimport { Theme } from \"../data/Theme\"\nimport { ThemeQuestion } from \"../data/ThemeQuestion\"\n\nimport { JsonTheme, FromTheme, ToTheme } from \"./JsonTheme\"\nimport { JsonThemeQuestion, FromThemeQuestion } from \"./JsonThemeQuestion\"\n\n// //////////////////////////////////////////////////\n// update theme\n\nexport async function UpdateTheme( theme: Theme ): Promise<Theme> {\n\n    let url = `${process.env.REACT_APP_API_ROOT_URI}/theme/${theme.id}`\n    console.log(`[client] requestURL = ${url}`)\n\n    let body: JsonUpdateThemeBody = {\n        theme: FromTheme( theme ),\n    }\n\n    const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n            'content-type': 'application/json;charset=UTF-8',\n        },\n        body: JSON.stringify(body),\n    })\n    if (!response.ok) {\n        const message = `An error has occured while updating theme: ${response.status} ${response.body}`;\n        throw new Error(message);\n    }\n\n    const jsonResponse = await response.json() as JsonUpdateThemeResponse;\n    if (!jsonResponse.success) {\n        const message = `Unable to update theme: ${response.status} ${response.body}`;\n        throw new Error(message);\n    }\n\n    return ToTheme( jsonResponse.theme )\n}\n\nexport interface JsonUpdateThemeBody {\n    theme: JsonTheme\n}\n\nexport interface JsonUpdateThemeResponse {\n    success: boolean\n    theme: JsonTheme\n}","import React from 'react'\n\n// //////////////////////////////////////////////////\n// audio player\n\nimport { MutableRefObject } from \"react\";\n\nexport interface AudioPlayerInterface {\n    unload(): void;\n    load( src: string ): void;\n    play(): void;\n    loadAndPlay( src: string ): void;\n    pause(): void;\n    toggle(): void;\n\n    // events\n    onAudioLoading?: () => void\n    onAudioLoaded?: () => void\n    onAudioReady?: () => void\n    onAudioPlaying?: () => void\n    onAudioPausing?: () => void\n    onAudioEnd?: () => void\n    onAudioReset?: () => void\n    onAudioUnload?: () => void\n}\n\nexport class AudioPlayer implements AudioPlayerInterface {\n    audioRef: MutableRefObject<HTMLAudioElement> = React.useRef<HTMLAudioElement>( new Audio() )\n    loading = false\n    loaded = false\n    autoPlay = false\n    playing = false    \n    \n    onAudioLoading?: () => void = undefined\n    onAudioLoaded?: () => void = undefined\n    onAudioReady?: () => void = undefined\n    onAudioPlaying?: () => void = undefined\n    onAudioPausing?: () => void = undefined\n    onAudioEnd?: () => void = undefined\n    onAudioReset?: () => void = undefined\n    onAudioUnload?: () => void = undefined\n\n\n    // //////////////////////////////////////////////////\n    // constructor\n\n    constructor() {}\n    \n    // //////////////////////////////////////////////////\n    // unload\n    \n    unload(): void {\n        console.log(`[unload] src=${this.audioRef.current.src}`)\n        if ( this.audioRef.current.src ) {\n            if ( this.playing ) {\n                this.reset()\n            }\n            this._onAudioUnload()\n            if ( this.audioRef.current.src ) {\n                this.audioRef.current.removeEventListener( 'loadeddata', this._onAudioLoaded.bind(this) )    \n                this.audioRef.current.removeEventListener( 'canplaythrough', this._onAudioReady.bind(this) )\n                this.audioRef.current.removeEventListener( 'ended', this._onAudioEnd.bind(this) )\n                this.audioRef.current = new Audio()\n            }\n            this.loading = false\n            this.loaded = false\n            this.playing = false\n            this.onAudioLoading = undefined\n            this.onAudioLoaded = undefined\n            this.onAudioReady = undefined\n            this.onAudioPlaying = undefined\n            this.onAudioPausing = undefined\n            this.onAudioEnd = undefined\n            this.onAudioReset = undefined\n        }\n    }\n    \n    // //////////////////////////////////////////////////\n    // load\n\n    load( src: string ): void {\n        console.log(`[load] src=${src}`)\n        if ( this.audioRef.current.src != src ) {\n\n            this.audioRef.current = new Audio( src )\n            this.audioRef.current.loop = false\n            this.audioRef.current.volume = 1.0\n\n            this.audioRef.current.addEventListener( 'loadeddata', this._onAudioLoaded.bind(this) )    \n            this.audioRef.current.addEventListener( 'canplaythrough', this._onAudioReady.bind(this) )\n            this.audioRef.current.addEventListener( 'ended', this._onAudioEnd.bind(this) )\n\n            this._onAudioLoading()\n        }\n    }\n\n    loadAndPlay( src: string ): void {\n        console.log(`[load-and-play] src=${src}`)\n        this.autoPlay = true\n        console.log(`[load-and-play] this.autoPlay=${this.autoPlay}`)\n        this.load( src )\n    }\n\n    reset(): void {\n        console.log( '[reset]' )\n        this.playing = false\n        this.audioRef.current.pause()\n        this.audioRef.current.currentTime = 0\n        this._onAudioReset()\n    }\n\n    play(): void {\n        console.log( '[play]' )\n        this.playing = true\n        this.audioRef.current.play()\n        this._onAudioPlaying()\n    }\n\n    pause(): void {\n        console.log( '[pause]' )\n        this.playing = false\n        this.audioRef.current.pause()\n        this._onAudioPausing()\n    }\n\n    toggle(): void {\n        console.log( '[toggle]' )\n        if ( this.playing ) {\n            this.pause()\n        } else {\n            this.play()\n        }\n    }\n    \n    // //////////////////////////////////////////////////\n    // internal events\n\n    _onAudioLoading() {\n        console.log( '_onAudioLoading' )\n        if ( this.onAudioLoading ) {\n            this.onAudioLoading()\n        }\n    }\n\n    _onAudioLoaded() {\n        console.log( '_onAudioLoaded' )\n        if ( this.onAudioLoaded ) {\n            this.onAudioLoaded()\n        }\n    }\n\n    _onAudioReady() {\n        console.log( '_onAudioReady' )\n        if ( this.onAudioReady ) {\n            this.onAudioReady()\n        }\n        console.log( `this.autoPlay: ${this.autoPlay }` )\n        if ( this.autoPlay ) {\n            this.autoPlay = false\n            this.play()\n        }\n    }\n\n    _onAudioPlaying() {\n        console.log( '_onAudioPlaying' )\n        if ( this.onAudioPlaying ) {\n            this.onAudioPlaying()\n        }\n    }\n\n    _onAudioPausing() {\n        console.log( '_onAudioPausing' )\n        if ( this.onAudioPausing ) {\n            this.onAudioPausing()\n        }\n    }\n\n    _onAudioEnd() {\n        console.log( '_onAudioEnd' )\n        if ( this.onAudioEnd ) {\n            this.onAudioEnd()\n        }\n        this.reset()\n    }\n\n    _onAudioReset() {\n        console.log( '_onAudioReset' )\n        if ( this.onAudioReset ) {\n            this.onAudioReset()\n        }\n    }\n\n    _onAudioUnload() {\n        console.log( '_onAudioUnload' )\n        if ( this.onAudioUnload ) {\n            this.onAudioUnload()\n        }\n    }\n\n  }","import React from 'react'\n\nimport IconButton from '@mui/material/IconButton'\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow'\nimport PauseIcon from '@mui/icons-material/Pause'\nimport DownloadingIcon from '@mui/icons-material/Downloading'\n\nimport { Game, OnGameUpdate } from '../data/Game'\nimport { Question, OnQuestionUpdate, QuestionId } from '../data/Question'\nimport { onKeyEvent, onUserEvent } from '../data/Util'\nimport { Box, CircularProgress, Tooltip, Typography } from '@mui/material'\nimport { withStyles } from '@mui/styles'\nimport MusicCard from './MusicCard'\nimport { Music, getImgUrl } from '../data/Music'\nimport { MUSIC_PLAYER_KEYBOARD_SHORTCUTS } from '../data/Constants'\n\nimport { AudioPlayerInterface } from '../data/AudioPlayer'\n\ninterface Props {\n    audioPlayer: AudioPlayerInterface\n    music: Music\n    size?: number\n}\n\nconst MusicButton = ( props: Props ) => {\n    const { audioPlayer, music, size } = props\n\n    if ( !music ) {\n        return null\n    }\n        \n    //\n    // load music\n    //\n\n    const width = size ? size : 56;\n    const height = size ? size : 56;\n\n    const iconWidth = width*0.75;\n    const iconHeight = height*0.75;\n\n    const playIcon = <PlayArrowIcon sx={{ height: iconHeight, width: iconWidth, color: '#fff' }}/>\n    const pauseIcon = <PauseIcon sx={{ height: iconHeight, width: iconWidth, color: '#fff' }}/>\n    const downloadingIcon = <DownloadingIcon sx={{ height: iconHeight, width: iconWidth, color: '#fff' }}/>\n\n    const [ loaded, setLoaded ] = React.useState(false)\n    const [ icon, setIcon ] = React.useState(playIcon)\n\n    //\n    // toggle music\n    //\n    \n    const loadAndPlay = () => {\n        console.log( `[load-and-play-music]` )\n        audioPlayer.unload()\n        audioPlayer.onAudioPlaying = () => { \n            console.log( `audioPlayer.onAudioPlaying` )\n            setIcon( pauseIcon )\n        }\n        audioPlayer.onAudioPausing = () => { \n            console.log( `audioPlayer.onAudioPausing` )\n            setIcon( playIcon )\n        }\n        audioPlayer.onAudioLoading = () => { \n            console.log( `audioPlayer.onAudioLoading` )\n            setIcon( downloadingIcon )\n        }\n        audioPlayer.onAudioLoaded = () => { \n            console.log( `audioPlayer.onAudioLoaded` )\n            setLoaded( true )\n        }\n        audioPlayer.onAudioUnload = () => { \n            console.log( `audioPlayer.onAudioUnload` )\n            setIcon( playIcon )\n            setLoaded( false )\n        }\n        audioPlayer.loadAndPlay( music.mp3Url )\n    }\n\n    const pauseMusic = () => { \n        console.log( `[pause-music]` )\n        audioPlayer.pause()\n    }\n\n    const toggleMusic = () => { \n        console.log( `[toggle-music]` )\n        audioPlayer.toggle()\n    }\n\n    //\n    // on click\n    //\n\n    const onClick = onUserEvent( () => {\n        if ( loaded ) {\n            toggleMusic()\n        } else if ( !loaded ) {\n            loadAndPlay()\n        }\n    } )\n\n\n\n    return (\n        <div \n            style={{ \n                width: `${width}px`, \n                height: `${height}px`, \n                cursor: 'auto', \n                marginRight: '0px', \n                border: 'none',\n                background: `no-repeat url(${getImgUrl( music )})`,\n                backgroundSize: `${width}px ${height}px`,\n                backgroundColor: '#999',\n                borderRadius: `5%`,\n            }} \n            onClick={onClick}\n        >\n\n            <Box \n                sx={{\n                    width: `${width}px`,\n                    height: `${height}px`, \n                    position: 'relative',\n                    display: 'inline-flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    opacity: '0.8',\n                    cursor: 'pointer',\n                }}\n            >\n\n                { icon }\n\n            </Box>\n\n        </div>\n    )\n}\n\nexport default MusicButton","// //////////////////////////////////////////////////\n// import\n\nimport { Music } from \"../data/Music\"\n\nimport { JsonMusic, ToMusic } from \"./JsonMusic\"\n\n// //////////////////////////////////////////////////\n// search music\n\nexport async function SearchMusic( search: string, limit: number ): Promise<Music[]> {\n\n    let url = `${process.env.REACT_APP_API_ROOT_URI}/music?search=${search}&limit=${limit}`\n    console.log(`[client] requestURL = ${url}`)\n\n    const response = await fetch(url, {\n        method: 'GET',\n    })\n    if (!response.ok) {\n        const message = `An error has occured while searching music: ${response.status} ${response.body}`;\n        throw new Error(message);\n    }\n\n    const jsonResponse = await response.json() as JsonAddMusicToThemeResponse;\n    if (!jsonResponse.success) {\n        const message = `Unable to search music: ${response.status} ${response.body}`;\n        throw new Error(message);\n    }\n\n    return jsonResponse.musics.map( jsonMusic => ToMusic( jsonMusic ) )\n}\n\nexport interface JsonAddMusicToThemeResponse {\n    success: boolean\n    musics: JsonMusic[]\n}","import React from 'react'\n\nimport { IconButton, Typography } from '@mui/material';\nimport CheckIcon from '@mui/icons-material/Check';\nimport CloseIcon from '@mui/icons-material/Close';\nimport AddIcon from '@mui/icons-material/Add';\nimport SearchIcon from '@mui/icons-material/Search';\n\nimport { Box, Grid, Modal, Button, TextField } from '@mui/material';\nimport { DataGrid, GridColDef } from '@mui/x-data-grid';\n\nimport { SearchMusic } from '../client/SearchMusic';\n\nimport { Music } from '../data/Music';\nimport { AudioPlayerInterface } from '../data/AudioPlayer';\nimport { onUserEvent, onValueEvent } from '../data/Util';\n\nimport MusicButton from './MusicButton'\n\ninterface Props {\n    open: boolean\n    closeModal: () => void\n    isMusicIncluded: (music: Music) => boolean\n    addMusic: (music: Music) => void\n    removeMusic: (music: Music) => void\n    audioPlayer: AudioPlayerInterface\n}\n\nconst SearchMusicModal = ( props: Props ) => {\n    const { open, closeModal, isMusicIncluded, addMusic, removeMusic, audioPlayer } = props\n\n    const [ search, SetSearch ] = React.useState<string>(\"\")\n    const [ submit, SetSubmit ] = React.useState<boolean>(false)\n    const [ musics, SetMusics ] = React.useState<Music[]>()\n\n    const handleChange = onValueEvent((value) => {\n        console.log(`search: ${value}`)\n        SetSearch(value);\n    })\n\n    const onSubmit = onUserEvent(() => {\n        console.log(`submit: true`)\n        SetSubmit(true);\n    })\n\n    React.useEffect(() => {\n        console.log(`submit: ${submit} / search: ${search}`)\n        if ( submit && search ) {\n            SearchMusic(search,100)\n            .then((musics) => {\n                SetMusics(musics)\n                SetSubmit(false)\n            })\n            .catch((err) => {\n                console.log(err)\n                SetSubmit(false)\n            })\n        }\n    }, [submit])\n\n    const columns: GridColDef[] = [\n        {\n            field: 'music',\n            headerName: ' ',\n            width: 56,\n            sortable: false,\n            disableColumnMenu: true,\n            cellClassName: 'music-button-cell',\n            renderCell: (params) => {\n                if (params.row == null) {\n                    return null\n                }\n                return <MusicButton audioPlayer={audioPlayer} music={params.row} size={56}/>\n            },\n        },\n        {\n          field: 'name',\n          headerName: 'Title',\n          flex: 1,\n          renderCell: (params) => {\n            const artist = params.row.artist ? params.row.artist.name : '-';\n            const album = params.row.album ? params.row.album.name : '-';\n            return <div style={{ justifyContent: 'left' }}>\n                <Typography align='left'><b>{params.row.name}</b></Typography>\n                <Typography align='left' color=\"textSecondary\">{artist} / {album}</Typography>\n            </div>  \n          },\n        },\n        {\n            field: 'actions',\n            headerName: ' ',\n            width: 50,\n            sortable: false,\n            disableColumnMenu: true,\n            renderCell: (params) => {\n                if ( isMusicIncluded(params.row) ) {\n                    return <IconButton\n                            aria-label=\"Remove\"\n                            onClick={onUserEvent(() => { \n                                removeMusic(params.row)\n                                audioPlayer.unload()\n                            })}>\n                        <CheckIcon />\n                    </IconButton>\n                }\n                return <IconButton\n                            aria-label=\"Add\"\n                            onClick={onUserEvent(() => { \n                                addMusic(params.row)\n                                audioPlayer.unload()\n                            })}\n                        >\n                            <AddIcon />\n                        </IconButton>\n            },\n        },\n      ];\n\n    \n    const style = {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: '90%',\n        maxWidth: '700px',\n        bgcolor: 'background.paper',\n        borderRadius: '10px',\n        boxShadow: 24,\n        p: 4,\n    };\n\n    return (\n        <Modal\n            open={open}\n            onClose={closeModal}\n            aria-labelledby=\"modal-modal-title\"\n            aria-describedby=\"modal-modal-description\"\n        > \n            <Box sx={style}>\n                <Grid container spacing={2} style={{ alignItems: 'center' }}>\n                    \n                    <Grid item xs={10} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-start', marginTop: '0px', marginBottom: '0px' }}>\n                    \n                            <TextField\n                                onChange={handleChange}\n                                id=\"outlined-name\"\n                                label=\"Search\"\n                                margin=\"normal\"\n                                variant=\"outlined\"\n                                style={{minWidth:'200px'}}\n                                type=\"text\"\n                                />\n                            <IconButton aria-label=\"Search\" onClick={onSubmit}>\n                                <SearchIcon />\n                            </IconButton>\n                    </Grid>\n\n                    <Grid item xs={2} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-end' }}>\n                    \n                        <IconButton aria-label=\"Close\" onClick={closeModal}>\n                            <CloseIcon />\n                        </IconButton>\n\n                    </Grid>\n\n                </Grid>\n\n                {/* musics */}\n                \n                <Grid item xs={12} container spacing={1} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}> \n\n                    {musics && <Box sx={{ height: 400, width: '100%' }}>\n                        <DataGrid\n                            density='compact'\n                            rows={musics}\n                            rowHeight={76}\n                            columns={columns}\n                            initialState={{\n                                pagination: {\n                                    paginationModel: {\n                                        pageSize: 100,\n                                    },\n                                },\n                            }}\n                            pageSizeOptions={[100]}\n                            disableRowSelectionOnClick\n                            getRowId={(row) => { return row.deezerId}}\n                            />\n                    </Box>}\n\n                </Grid>\n            </Box>\n\n        </Modal>\n    )\n}\n\nexport default SearchMusicModal","import React from 'react'\n\nimport { IconButton, Typography } from '@mui/material';\nimport CheckIcon from '@mui/icons-material/Check';\nimport CloseIcon from '@mui/icons-material/Close';\nimport AddIcon from '@mui/icons-material/Add';\nimport SaveIcon from '@mui/icons-material/Save';\nimport SearchIcon from '@mui/icons-material/Search';\n\nimport { Box, Grid, Modal, Button, TextField } from '@mui/material';\nimport { DataGrid, GridColDef } from '@mui/x-data-grid';\n\nimport { ThemeQuestion } from '../data/ThemeQuestion';\nimport { onUserEvent, onValueEvent } from '../data/Util';\n\ninterface Props {\n    open: boolean\n    closeModal: () => void\n    question?: ThemeQuestion\n    updateQuestion: (question: ThemeQuestion) => void\n}\n\nconst UpdateQuestionModal = ( props: Props ) => {\n    const { open, closeModal, question, updateQuestion } = props\n\n    if ( !question ) {\n        return null\n    }\n\n    const [ text, SetText ] = React.useState<string>(\"\")\n    const [ hint, SetHint ] = React.useState<string>(\"\")\n\n    const handleTextChange = onValueEvent((value) => {\n        console.log(`text: ${value}`)\n        SetText(value);\n    })\n\n    const handleHintChange = onValueEvent((value) => {\n        console.log(`hint: ${value}`)\n        SetHint(value);\n    })\n\n    const onSubmit = onUserEvent(() => {\n        console.log(`[update-question] text: ${text} / hint: ${hint}`)\n        updateQuestion({ ...question, text: text, hint: hint});\n        closeModal();\n    })\n\n    React.useEffect(() => {\n        SetText(question.text)\n        SetHint(question.hint)\n    }, [question])\n\n    const style = {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: '90%',\n        maxWidth: '700px',\n        bgcolor: 'background.paper',\n        borderRadius: '10px',\n        boxShadow: 24,\n        p: 4,\n    };\n\n    return (\n        <Modal\n            open={open}\n            onClose={closeModal}\n            aria-labelledby=\"modal-modal-title\"\n            aria-describedby=\"modal-modal-description\"\n        > \n        \n            <Box sx={style}>\n\n                <Grid container spacing={0} style={{ alignItems: 'center' }}>\n                    \n                    <Grid item xs={12} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-end' }}>\n                        <IconButton aria-label=\"Close\" onClick={onSubmit}>\n                            <CloseIcon />\n                        </IconButton>\n                    </Grid>\n\n                    <Grid item xs={12} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', marginTop: '5px', marginBottom: '10px' }}>\n                        <TextField\n                            onChange={handleTextChange}\n                            id=\"theme-title\"\n                            label=\"Text\"\n                            margin=\"dense\"\n                            variant=\"outlined\"\n                            style={{width:'100%'}}\n                            type=\"text\"\n                            value={text}\n                            />\n                    </Grid>\n\n                    <Grid item xs={12} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', marginTop: '5px', marginBottom: '10px' }}>\n                    <TextField\n                            onChange={handleHintChange}\n                            id=\"theme-title\"\n                            label=\"Hint\"\n                            margin=\"dense\"\n                            variant=\"outlined\"\n                            style={{width:'100%'}}\n                            type=\"text\"\n                            value={hint}\n                            />\n                    </Grid>\n\n                    <Grid item xs={12} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', marginTop: '5px', marginBottom: '10px' }}>\n                        <Button aria-label=\"Save\" onClick={onSubmit}>\n                            <SaveIcon />\n                        </Button>\n                    </Grid>\n\n                </Grid>\n\n            </Box>\n\n        </Modal>\n    )\n}\n\nexport default UpdateQuestionModal","import React from 'react'\nimport { useParams } from 'react-router'\nimport { useNavigate } from 'react-router-dom'\n\nimport { Grid, Alert, AlertTitle, Box, IconButton, Typography, TextField } from '@mui/material';\nimport { DataGrid, GridColDef } from '@mui/x-data-grid'\nimport AddIcon from '@mui/icons-material/Add'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport EditIcon from '@mui/icons-material/Edit'\nimport SaveIcon from '@mui/icons-material/Save'\nimport CheckIcon from '@mui/icons-material/Check'\n\nimport { FetchTheme } from '../client/FetchTheme'\nimport { AddMusicToTheme } from '../client/AddMusicToTheme'\nimport { RemoveThemeQuestion } from '../client/RemoveThemeQuestion'\nimport { UpdateThemeQuestion } from '../client/UpdateThemeQuestion'\nimport { UpdateTheme } from '../client/UpdateTheme'\n\nimport { AdminStep } from '../data/Admin'\nimport { Theme } from '../data/Theme'\nimport { Music } from '../data/Music'\nimport { ThemeQuestion } from '../data/ThemeQuestion'\nimport { toAdminThemesPage } from '../data/Navigate'\nimport { onUserEvent, onValueEvent } from '../data/Util'\nimport { AudioPlayer } from '../data/AudioPlayer'\n\nimport AdminPage from '../component/AdminPage'\nimport MusicButton from '../component/MusicButton'\nimport SearchMusicModal from '../component/SearchMusicModal'\nimport UpdateQuestionModal from '../component/UpdateQuestionModal'\n\ninterface Props {\n}\n\nconst AdminThemePage = ( props: Props ) => {\n\n    const navigate = useNavigate()\n\n    const { themeId } = useParams()\n    \n    if ( !themeId ) {\n        return null\n    }\n    const id = parseInt(themeId,10)\n\n    const [theme, setTheme] = React.useState<Theme>();\n    const [needSave, setNeedSave] = React.useState<boolean>(false);\n    const [error, setError] = React.useState<Error>();\n    const [question, setQuestion] = React.useState<ThemeQuestion>();\n\n    const handleTitleChange = onValueEvent((value) => {\n        console.log(`SetTitle: ${value}`)\n        if ( theme ) {\n            setTheme( { ...theme, title: value } )\n            setNeedSave(true)\n        }\n    })\n\n    const handleImgUrlChange = onValueEvent((value) => {\n        console.log(`SetImgUrl: ${value}`)\n        if ( theme ) {\n            setTheme( { ...theme, imgUrl: value } )\n            setNeedSave(true)\n        }\n    })\n    \n    const [ updateQuestionModal, setUpdateQuestionModal ] = React.useState( false )\n    const openUpdateQuestionModal = () => {\n        audioPlayer.pause()\n        setUpdateQuestionModal(true)\n    }\n    const closeUpdateQuestionModal = () => {\n        audioPlayer.pause()\n        setUpdateQuestionModal(false)\n    }\n\n    const audioPlayer = new AudioPlayer()\n    \n    const [ searchMusicModal, setSearchMusicModal ] = React.useState( false )\n    const openSearchMusicModal = () => {\n        audioPlayer.pause()\n        setSearchMusicModal(true)\n    }\n    const closeSearchMusicModal = () => {\n        audioPlayer.pause()\n        setSearchMusicModal(false)\n    }\n    const isMusicIncluded = (music: Music) => {\n        if ( theme && theme.questions ) {\n            for ( var question of theme.questions ) {\n                if ( question.music && question.music.deezerId == music.deezerId ) {\n                    return true\n                }\n            }\n        }\n        return false\n    }\n    const addMusic = (music: Music) => {\n        if ( music.deezerId ) {\n            AddMusicToTheme(id,music.deezerId).then(setTheme).catch(console.log)\n        } else {\n            console.log(\"missing deezer id!\", music)\n        }\n    }\n    \n    const removeMusic = (music: Music) => {\n        if ( theme ) {\n            for ( var question of theme.questions ) {\n                if ( question.music && question.music.id && question.music.deezerId == music.deezerId ) {\n                    RemoveThemeQuestion(id,question.id).then(setTheme).catch(console.log)\n                }\n            }\n        }\n    }\n\n    const editQuestion = (question: ThemeQuestion) => {\n        return onUserEvent(() => {\n            console.log(\"click >>> pause music\")\n            audioPlayer.pause()\n            console.log(\"click >>> edit question\", question.id )\n            if ( question.id ) {\n                setQuestion(question)\n                openUpdateQuestionModal()\n            } else {\n                console.log(\"missing question id!\", question)\n            }\n        })\n    }\n\n    const updateTheme = () => {\n        if ( theme ) {\n            UpdateTheme(theme).then((theme) => {\n                setTheme(theme)\n                setNeedSave(false)\n            }).catch(console.log)\n        }\n    }\n\n    const updateQuestion = (question: ThemeQuestion) => {\n        UpdateThemeQuestion(id,question).then(setTheme).catch(console.log)\n    }\n\n    const removeQuestion = (question: ThemeQuestion) => {\n        return onUserEvent(() => {\n            console.log(\"click >>> pause music\" )\n            audioPlayer.pause()\n            console.log(\"click >>> remove question\", question.id )\n            if ( question.id ) {\n                if (window.confirm('Are you sure you wish to delete this question?')) {\n                    RemoveThemeQuestion(id,question.id).then(setTheme).catch(console.log)\n                }\n            } else {\n                console.log(\"missing question id!\", question)\n            }\n        })\n    }\n\n    React.useEffect(() => {\n        FetchTheme(id)\n            .then((theme) => setTheme(theme))\n            .catch((err) => {\n                console.error(err)\n                setError(err)\n            });\n      }, [])\n\n    console.log(error)\n    if ( error !== undefined ) {\n        return <Alert severity=\"error\">\n                    <AlertTitle>Error</AlertTitle>\n                    <strong>{error.message}</strong>\n                </Alert>\n    }\n    console.log(theme)\n    if ( theme === undefined ) {\n        return null\n    }\n\n    const toThemes = () => {\n        console.log( `[to-themes]` )\n        navigate( toAdminThemesPage() )\n    }\n\n    const columns: GridColDef[] = [\n        {\n            field: 'music',\n            headerName: ' ',\n            width: 56,\n            cellClassName: 'music-button-cell',\n            disableColumnMenu: true,\n            sortable: false,\n            renderCell: (params) => {\n                if (params.value == null) {\n                    return null\n                }\n                return <MusicButton audioPlayer={audioPlayer} music={params.value} size={56}/>\n            },\n        },\n        {\n          field: 'text',\n          headerName: 'Questions',\n          editable: true,\n          hideable: false,\n          flex: 1,\n          renderCell: (params) => {\n            const artist = params.row.artist ? params.row.artist.name : '-';\n            const album = params.row.album ? params.row.album.name : '-';\n            return <div style={{ justifyContent: 'left' }}>\n                <Typography align='left'><b>{params.row.text ? params.row.text : \"-\"}</b></Typography>\n                <Typography align='left' color=\"textSecondary\">{params.row.hint ? params.row.hint : \"-\"}</Typography>\n            </div>  \n          },\n        },\n        {\n            field: 'actions',\n            headerName: ' ',\n            width: 100,\n            disableColumnMenu: true,\n            sortable: false,\n            renderHeader(params) {\n                return <IconButton \n                color=\"primary\"\n                aria-label=\"Add\"\n                onClick={openSearchMusicModal}\n                >\n                <AddIcon />\n            </IconButton>\n            },\n            renderCell: (params) => {\n                return <>\n                    <IconButton\n                        aria-label=\"Edit\"\n                        onClick={editQuestion(params.row)}\n                    >\n                        <EditIcon />\n                    </IconButton>\n                    <IconButton\n                        aria-label=\"Delete\"\n                        onClick={removeQuestion(params.row)}\n                    >\n                        <DeleteIcon />\n                    </IconButton>\n                </>\n            },\n        },\n      ];\n\n    return (\n        <AdminPage title={`Theme #${theme.id} - ${theme.title}`} step={AdminStep.THEME} onBack={toThemes}>\n            <Grid container spacing={0} style={{ alignItems: 'center' }}>\n                <Grid item xs={10} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-start' }}>\n                    <TextField\n                        margin='dense'\n                        onChange={handleTitleChange}\n                        id=\"theme-title\"\n                        label=\"Title\"\n                        variant=\"outlined\"\n                        style={{width:'100%'}}\n                        type=\"text\"\n                        value={theme.title}\n                        />\n                </Grid>\n                <Grid item xs={2} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                    {needSave && <IconButton color=\"primary\" aria-label=\"Save\" onClick={updateTheme}><SaveIcon /></IconButton>}\n                    {!needSave && <IconButton disabled aria-label=\"Saved\"><CheckIcon /></IconButton>}\n                </Grid>\n                <Grid item xs={10} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-start' }}>\n                    <TextField\n                        margin='dense'\n                        onChange={handleImgUrlChange}\n                        id=\"theme-img-url\"\n                        label=\"Image URL\"\n                        variant=\"outlined\"\n                        style={{width:'100%'}}\n                        type=\"text\"\n                        value={theme.imgUrl}\n                        />\n                </Grid>\n                <Grid item xs={2} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-start' }}>\n                    {theme.imgUrl && <img src={theme.imgUrl} style={{ height: '56px', margin: '0 auto' }}/>}\n                </Grid>\n                \n                <Grid item xs={12} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-end' }}>\n                    \n                    <UpdateQuestionModal\n                        open={updateQuestionModal}\n                        closeModal={closeUpdateQuestionModal}\n                        question={question}\n                        updateQuestion={updateQuestion}\n                    />\n                    \n                    <SearchMusicModal\n                        open={searchMusicModal}\n                        closeModal={closeSearchMusicModal}\n                        isMusicIncluded={isMusicIncluded}\n                        addMusic={addMusic}\n                        removeMusic={removeMusic}\n                        audioPlayer={audioPlayer}\n                    />\n\n                    <Box sx={{ height: 500, width: '100%' }}>\n                        <DataGrid\n                            density='compact'\n                            rows={theme.questions || []}\n                            rowHeight={76}\n                            columns={columns}\n                            initialState={{\n                                pagination: {\n                                    paginationModel: {\n                                        pageSize: 25,\n                                    },\n                                },\n                            }}\n                            pageSizeOptions={[25]}\n                            disableRowSelectionOnClick\n                            disableColumnSelector\n                            />\n                    </Box>\n                </Grid>\n            </Grid>\n\n        </AdminPage>\n        \n    )\n}\n\nexport default AdminThemePage","import React from 'react'\n\nimport Grid from '@mui/material/Grid';\n\nimport Page from '../component/Page'\n\nimport { CardSymbol, CardSize, CardColor } from '../data/Card'\nimport PlayingCard from '../component/PlayingCard';\n\ninterface Props {}\n\nconst PlayingCardsPage = ( props: Props ) => {\n\n    return (\n        <Page>\n            \n            <h3>Playing Cards</h3>\n\n            <Grid container spacing={2}>\n\n                { Object.keys( CardSymbol ).map(symbol => {\n\n                    return (\n                        <Grid key={symbol} item xs={12} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n                            {\n                                Object.keys( CardSize ).map(size => {\n                                    return (\n                                        <>\n                                            <PlayingCard key={`${symbol}-${size}-black`} card={{\n                                                    symbol: symbol as CardSymbol,\n                                                    color: CardColor.BLACK,\n                                                    size: size as CardSize,\n                                                    number: 2,\n                                                }} \n                                                onClick={() => {}} \n                                            />\n                                            <PlayingCard key={`${symbol}-${size}-red`} card={{\n                                                    symbol: symbol as CardSymbol,\n                                                    color: CardColor.RED,\n                                                    size: size as CardSize,\n                                                    number: 2,\n                                                }} \n                                                onClick={() => {}} \n                                            />\n                                        </>\n                                    )\n                                })\n                            }\n                        </Grid>\n                    )\n                } ) }\n\n            </Grid>\n\n        </Page>\n    )\n}\n\nexport default PlayingCardsPage","import React from 'react'\n\nimport { HashRouter, Route, Routes, Navigate } from \"react-router-dom\"\n\nimport HomePage from './page/HomePage'\nimport SettingsPage from './page/SettingsPage'\nimport PlayersPage from './page/PlayersPage'\nimport StartPage from './page/StartPage'\nimport QuestionPage from './page/QuestionPage'\nimport ScoresPage from './page/ScoresPage'\nimport AvatarsPage from './page/AvatarsPage'\nimport AdminThemesPage from './page/AdminThemesPage'\nimport AdminThemePage from './page/AdminThemePage'\n\nimport { Game, GameUpdater, loadGames, storeGames, clearGames, GameId } from './data/Game'\n\nimport './App.css';\nimport PlayingCardsPage from './page/PlayingCardsPage';\nimport { QuestionId, QuestionUpdater } from './data/Question'\nimport { loadingButtonClasses } from '@mui/lab'\n\nfunction App() {\n\n  //\n  // global state \n  //\n\n  const [ games, setGames ] = React.useState( loadGames() )\n\n  function addGame( game: Game ) {\n      console.log( `[add-game] ${game.id}` )\n      setGames( prev => {\n        const newGames = [ game, ...prev ]\n        return storeGames( newGames )\n      } )\n  }\n\n  function deleteGame( game: Game ) {\n      console.log( `[delete-game] ${game.id}` )\n      setGames( prev => {\n        const newGames = prev.filter( g => g.id !== game.id ) \n        return storeGames( newGames )\n      } )\n  }\n\n  function deleteGames( gameIds: GameId[] ) {\n      console.log( `[delete-games]` )\n      setGames( prev => {\n        for ( const gameId of gameIds ) {\n          console.log( `[todo] ${gameId}` )\n        }\n        for ( const game of prev ) {\n          console.log( `[before] ${game.id}` )\n        }\n        const newGames = prev.filter( game => gameIds.indexOf( game.id ) === -1 )\n        for ( const game of newGames ) {\n          console.log( `[after] ${game.id}` )\n        }\n        return storeGames( newGames )\n      } )\n  }\n\n  function updateGame( gameId: GameId, update: GameUpdater ) {\n    console.log( `[update-game] ${gameId}` )\n    setGames( prev => {\n      const newGames = prev.map( game => game.id === gameId ? update( game ) : game )\n      return storeGames( newGames )\n    } )\n  }\n\n  function updateQuestion( gameId: GameId, questionId: QuestionId, update: QuestionUpdater ) {\n    console.log( `[update-question] ${gameId} - ${questionId}` )\n    setGames( prev => {\n      const newGames = prev.map( game => {\n        if ( game.id != gameId ) {\n          return game\n        }\n        game.questions = game.questions.map( question => question.id === questionId ? update( question ) : question )\n        return game        \n      } )\n      return storeGames( newGames )\n    } )\n  }\n\n  // GREG console.log( '[render] app' )\n  // <Route path=\"*\" element={<>page not found</>} />\n\n  return (\n    <div className=\"app app-amnezic\">\n\n      <HashRouter>\n        <Routes>\n          <Route path=\"/\" element={<HomePage games={games} addGame={addGame} updateGame={updateGame} deleteGames={deleteGames}/>}/>\n          <Route path=\"/game/:gameId/settings\" element={<SettingsPage games={games} updateGame={updateGame} />} />\n          <Route path=\"/game/:gameId/players\" element={<PlayersPage games={games} updateGame={updateGame} />} />\n          <Route path=\"/game/:gameId/start\" element={<StartPage games={games} updateGame={updateGame} />} />\n          <Route path=\"/game/:gameId/question/:questionNumber\" element={<QuestionPage games={games} updateGame={updateGame} updateQuestion={updateQuestion}/>} />\n          <Route path=\"/game/:gameId/scores\" element={<ScoresPage games={games} updateGame={updateGame} addGame={addGame} />} />\n          <Route path=\"/avatars\" element={<AvatarsPage />} />\n          <Route path=\"/cards\" element={<PlayingCardsPage />} />\n          <Route path=\"/admin/theme\" element={<AdminThemesPage />} />\n          <Route path=\"/admin/theme/:themeId\" element={<AdminThemePage />} />\n          <Route path=\"*\" element={<Navigate to=\"/\" replace />}/>\n        </Routes>\n      </HashRouter>\n\n    </div>\n  );\n}\n\nexport default App;\n","\"use client\";\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nif (module.hot) {\n  module.hot.accept();\n}"],"sourceRoot":""}