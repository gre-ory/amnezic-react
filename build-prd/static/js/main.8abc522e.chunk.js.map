{"version":3,"sources":["static/music.png","data/Source.tsx","data/Question.tsx","client/JsonArtist.tsx","client/JsonAlbum.tsx","client/JsonMusic.tsx","client/FetchGame.tsx","data/Constants.tsx","data/Card.tsx","data/Settings.tsx","data/Util.tsx","data/QuestionStats.tsx","data/PlayerStats.tsx","data/Artist.tsx","data/Music.tsx","data/Quizz.tsx","data/Album.tsx","data/Game.tsx","data/GameStats.tsx","data/Navigate.tsx","component/GameHeader.tsx","component/GameFooter.tsx","component/Page.tsx","component/GameCard.tsx","component/AdminButton.tsx","page/HomePage.tsx","component/GamePage.tsx","client/JsonPlaylist.tsx","client/SearchPlaylist.tsx","data/Playlist.tsx","component/SearchPlaylistModal.tsx","data/ThemeLabels.tsx","component/PlaylistCard.tsx","client/JsonThemeQuestion.tsx","client/JsonTheme.tsx","client/FetchThemes.tsx","client/JsonThemeInfo.tsx","page/SettingsPage.tsx","component/PlayerAvatar.tsx","component/icon/ClubIcon.tsx","component/icon/DiamondIcon.tsx","component/icon/CircleIcon.tsx","component/icon/HeartIcon.tsx","component/icon/SpadeIcon.tsx","component/icon/SquareIcon.tsx","component/icon/StarIcon.tsx","component/icon/TriangleIcon.tsx","component/icon/CrossIcon.tsx","component/PlayingCardIcon.tsx","component/PlayingCard.tsx","component/PlayingCardModal.tsx","data/Avatar.tsx","component/AvatarModal.tsx","component/PlayerCard.tsx","page/PlayersPage.tsx","component/NextButton.tsx","page/StartPage.tsx","component/MusicCard.tsx","component/MusicPlayer.tsx","component/QuestionCard.tsx","page/QuestionPage.tsx","component/PlayerScoreCard.tsx","data/Admin.tsx","page/ScoresPage.tsx","page/AvatarsPage.tsx","component/AdminHeader.tsx","component/AdminFooter.tsx","component/AdminPage.tsx","component/CreateThemeModal.tsx","client/CreateTheme.tsx","client/RemoveTheme.tsx","page/AdminThemesPage.tsx","client/FetchTheme.tsx","client/AddMusicToTheme.tsx","client/RemoveThemeQuestion.tsx","client/UpdateThemeQuestion.tsx","client/UpdateTheme.tsx","data/AudioPlayer.tsx","component/MusicButton.tsx","client/SearchMusic.tsx","client/FetchPlaylist.tsx","component/SearchMusicModal.tsx","component/UpdateQuestionModal.tsx","page/AdminThemePage.tsx","data/Theme.tsx","page/PlayingCardsPage.tsx","App.tsx","index.jsx"],"names":["module","exports","__webpack_require__","p","Source","addAnswer","question","answer","hint","arguments","length","undefined","correct","number","answers","current","id","push","getPlayerAnswerIndex","playerId","answerId","playerAnswers","findIndex","playerAnswer","hasPlayerAnswer","onQuestionPlayed","console","log","concat","status","onQuestionCompleted","ToArtist","json","deezerId","name","imgUrl","ToAlbum","ToMusic","mp3Url","album","artist","FromMusic","music","_regeneratorRuntime","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","_createForOfIteratorHelper","o","allowArrayLike","it","Array","isArray","minLen","_arrayLikeToArray","n","toString","from","test","_unsupportedIterableToArray","F","s","e","_e","f","normalCompletion","didErr","step","_e2","arr","len","arr2","_FetchGame","_asyncToGenerator","_callee","game","requestURL","response","message","jsonResponse","jsonGame","_iterator","_step","jsonQuestion","jsonMusic","jsonTheme","_iterator2","_step2","jsonAnswer","_context","process","settings","nbQuestion","nbAnswer","nbPlayer","source","Legacy","Deezer","playlist","Store","themeIds","join","fetch","ok","body","questions","theme","addQuestion","title","text","t0","apply","CardSymbol","CardColor","CardSize","MAX_NB_GAME","DEFAULT_NB_PLAYER","PLAYER_ID_SUFFIX","DEFAULT_NB_QUESTION","QUESTION_ID_SUFFIX","DEFAULT_NB_ANSWER_PER_QUESTION","ANSWER_ID_SUFFIX","newSettings","range","nb","toZeroPadString","padSize","padStart","toDateTimeString","date","Date","year","getFullYear","month","getMonth","day","getDate","toDateString","hours","getHours","minutes","getMinutes","seconds","getSeconds","toTimeString","onUserEvent","callback","event","stopPropagation","preventDefault","onKeyEvent","keyCallback","onValueEvent","target","HeartCard","symbol","HEART","color","RED","DiamondCard","DIAMOND","DefaultCards","CLUB","BLACK","SPADE","CIRCLE","BLUE","YELLOW","GREEN","TRIANGLE","ORANGE","PURPLE","getAnswerStats","stats","find","getOrSetAnswerStats","answerStats","success","score","getQuestionStats","questionId","getOrSetQuestionStats","questionStats","flagQuestionAsError","nbError","newArtist","newMusic","getImgUrl","GameStep","newGameId","customAlphabet","newGameCode","previous","nextNumber","previousNumber","updateSettings","update","_objectSpread","updatePlayer","players","map","player","GAMES","sortGames","games","_toConsumableArray","sort","left","right","updated","storeGames","sanitizedGames","localStorage","setItem","JSON","stringify","loadGames","parse","getItem","selectGame","gameId","g","isSettingsPageDisabled","loaded","ended","OnStep","gameStep","onSetUp","_x","FetchGame","index","card","avatarId","nbSuccess","nbFailure","nbMiss","addPlayer","PLAYERS","onStartGame","started","questionNumber","nbCompleted","progress","QUIZZ","onAnswers","nbPoint","_loop","some","isCorrect","flagAnswerAsIncorrect","flagAnswerAsCorrect","_step3","miss","_iterator3","onEndGame","SCORES","toGamePage","SETTINGS","toSettingsPage","toPlayersPage","toQuizzPage","toScoresPage","Header","props","updateGame","canPrevious","onPrevious","canNext","onNext","navigate","useNavigate","isHomeSelected","isSettingsSelected","isPlayersSelected","isQuizzSelected","isScoresSelected","isSettingsDisabled","isPlayersDisabled","isPlayersPageDisabled","isQuizzDisabled","isQuizzPageDisabled","isScoresDisabled","isScoresPageDisabled","previousVisible","previousDisabled","nextVisible","nextDisabled","updateGameStep","onHomePage","onSettingsPage","onPlayersPage","onQuizzPage","onScoresPage","handleKeyPress","React","useCallback","useEffect","document","addEventListener","removeEventListener","_React$useState","useState","_React$useState2","_slicedToArray","menuElement","setMenuElement","open","Boolean","finalTitle","createElement","Box","className","sx","flexGrow","style","marginBottom","AppBar","position","Toolbar","width","display","alignItems","justifyContent","Fragment","IconButton","aria-label","aria-controls","aria-expanded","aria-haspopup","onClick","currentTarget","MenuIcon","Menu","anchorEl","onClose","MenuListProps","aria-labelledby","MenuItem","selected","disabled","ListItemIcon","Home","fontSize","ListItemText","Settings","Group","MusicNote","MilitaryTech","fontWeight","textTransform","SkipPreviousIcon","SkipNextIcon","GameFooter","Page","children","Footer","useStyles","makeStyles","gameCard","flexDirection","padding","borderRadius","border","&:hover","backgroundColor","gameLine","gameItem","GameCard","startGame","resumeGame","deleteGame","classes","onStart","onResume","onDelete","Math","round","Stack","direction","spacing","opacity","Chip","label","CloseIcon","marginLeft","PersonIcon","marginRight","MusicNoteIcon","CalendarTodayIcon","marginTop","height","LinearProgress","variant","valueBuffer","AdminButton","description","FolderIcon","HomePage","addGame","deleteGames","code","created","now","newGame","oldGameIds","sortedGames","hasPreviousGames","unfinishedGames","filter","finishedGames","Grid","container","item","xs","textAlign","Typography","gutterBottom","allGameIds","DeleteIcon","GamePage","replace","toLowerCase","GameHeader","ToPlaylist","public","nbMusics","user","musics","_SearchPlaylist","search","limit","url","_message","playlists","jsonPlaylist","Language","Category","SearchPlaylistModal","closeModal","selectPlaylist","SetSearch","_React$useState3","_React$useState4","submit","SetSubmit","_React$useState5","_React$useState6","loading","SetLoading","_React$useState7","_React$useState8","SetPlaylists","handleChange","onSubmit","onClear","_x2","SearchPlaylist","finally","columns","field","headerName","cellClassName","renderCell","params","src","row","flex","sortable","disableColumnMenu","ForwardIcon","Modal","aria-describedby","top","transform","maxWidth","bgcolor","boxShadow","TextField","defaultValue","onChange","margin","minWidth","size","SearchIcon","SearchOffIcon","CircularProgress","DataGrid","density","rows","rowHeight","initialState","pagination","paginationModel","pageSize","pageSizeOptions","disableRowSelectionOnClick","getRowId","playlistCard","playlistLine","playlistItem","PlaylistCard","onPlaylist","searchPlaylistModal","setSearchPlaylistModal","closeSearchPlaylistModal","clearPlaylist","languageToLabel","language","French","English","categoryToLabel","category","Top","Genre","Decade","Year","updateLanguage","labels","updateCategory","FromThemeQuestion","ToTheme","ToThemeLabels","FromTheme","FromThemeLabels","FetchThemes","_FetchThemes","themes","jsonThemeInfo","AvatarSize","SettingsPage","SetThemes","useParams","isLegacyGame","isStore","isStoreGame","isDeezer","isDeezerGame","lessPlayerDisabled","morePlayerDisabled","lessQuestionDisabled","moreQuestionDisabled","lessAnswerDisabled","moreAnswerDisabled","updateNbPlayer","updateNbQuestion","updateNbAnswer","updateThemeIds","updater","Set","allIds","selectIds","matchAll","add","addThemeIds","ids","removeThemeIds","_step4","_iterator4","delete","_step5","categories","languages","_iterator5","matchCategory","isSelected","includes","allOf","predicate","_step6","_iterator6","bothOf","_step7","_iterator7","_step8","_iterator8","toggleFilter","lessPlayer","morePlayer","lessQuestion","moreQuestion","lessAnswer","moreAnswer","Button","QuizIcon","FormControlLabel","control","Checkbox","checked","indeterminate","toggleCategory","toggleTheme","ClubIcon","xmlns","viewBox","d","DiamondIcon","CircleIcon","HeartIcon","SpadeIcon","SquareIcon","StarIcon","TriangleIcon","CrossIcon","PlayingCardIcon","CROSS","SQUARE","STAR","PlayingCard","cardSize","cardClassNames","PlayerAvatar","avatarClassNames","PlayingCardModal","onSymbolChange","onColorChange","onCardChange","GRAY","newColor","XL","newSymbol","defaultCard","XS","ALL_AVATAR_IDS","AvatarModal","onAvatarChange","newAvatarId","M","PlayerCard","avatarSize","setName","editMode","playingCardModal","setPlayingCardModal","avatarModal","setAvatarModal","updatePlayerCard","Card","CardContent","L","onBlur","updatePlayerName","S","updatePlayerAvatar","PlayersPage","NextButton","StartPage","MusicCard","musicImage","musicBackground","artistName","albumName","component","pl","pb","CardMedia","image","MusicPlayer","playing","played","onMusicLoaded","onMusicPlaying","onMusicPaused","onMusicEnded","audioRef","useRef","Audio","toggleMusic","play","pause","lessVolume","volume","max","moreVolume","min","loop","onAudioLoad","currentTime","duration","onAudioReady","onAudioEnd","playingMusic","pausingMusic","onPause","onPlay","LightTooltip","withStyles","tooltip","arrow","Tooltip","icon","PlayArrowIcon","cursor","background","backgroundSize","bottom","QuestionCard","updateQuestion","setQuestionId","musicLoading","setMusicLoading","nbSecondsTotal","setNbSecondsTotal","nbShownAnswers","setNbShownAnswers","_React$useState9","_React$useState10","musicReady","setMusicReady","_React$useState11","_React$useState12","countDown","setCountDown","_React$useState13","_React$useState14","musicStarted","setMusicStarted","_React$useState15","_React$useState16","musicPlaying","setMusicPlaying","_React$useState17","_React$useState18","nbSecondsPlayed","setNbSecondsPlayed","_React$useState19","_React$useState20","musicEnded","setMusicEnded","musicError","musicPlayed","addPlayerAnswer","removeAnswer","splice","removePlayerAnswer","flagQuestionAsFailed","onQuestionError","onErrorAnswers","sortedPlayers","badgeValue","badgeColor","resetOnPlayed","onMusicFailed","showNextAnswer","showCountDown","showNbSecondsPlayed","timerId","clearInterval","setInterval","ONE_SECOND","ceil","musicPaused","showHints","musicPlayerInfo","Alert","severity","hidden","Paper","elevation","Avatar","lineHeight","justifyItems","failed","nbSeconds","getQuestionAnswerStats","transition","Badge","badgeContent","tooltipId","disableTooltip","disableFocusListener","disableHoverListener","QuestionPage","_useParams","questionParam","parseInt","selectQuestion","updateQuestionNumber","onQuestionNumber","AdminStep","PlayerScoreCard","medalColor","prettyPoints","prettyPercent","nbTotal","successPercent","failurePercent","missPercent","sumBySuccessAnswer","sumByFailureAnswer","nbSuccessAnswer","nbFailureAnswer","avgSuccessDelta","avgFailureDelta","avgDelta","Accordion","AccordionSummary","expandIcon","ExpandMoreIcon","aspectRatio","MilitaryTechIcon","AccordionDetails","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","scope","ScoresPage","previousPosition","previousScore","colorScale","medalColorScale","VictoryChart","data","intermediateScore","x","y","computeVizualiationScoreData","VictoryGroup","_ref","datum","labelComponent","VictoryTooltip","VictoryLine","VictoryScatter","fill","AvatarsPage","onBack","isThemesSelected","THEMES","isThemeSelected","THEME","KeyboardArrowLeftIcon","AdminFooter","AdminPage","AdminHeader","CreateThemeModal","createTheme","SetTitle","handleTitleChange","AddIcon","_CreateTheme","headers","content-type","_RemoveTheme","themeId","AdminThemesPage","setThemes","setError","createThemeModal","setCreateThemeModal","openCreateThemeModal","deleteTheme","window","confirm","RemoveTheme","fetchThemes","onError","AlertTitle","toTheme","toAdminThemePage","editable","valueGetter","valueFormatter","renderHeader","EditIcon","CreateTheme","_FetchTheme","_AddMusicToTheme","RemoveThemeQuestion","_RemoveThemeQuestion","_UpdateThemeQuestion","_UpdateTheme","AudioPlayer","_classCallCheck","autoPlay","onAudioLoading","onAudioLoaded","onAudioPlaying","onAudioPausing","onAudioReset","onAudioUnload","_createClass","_onAudioUnload","_onAudioLoaded","bind","_onAudioReady","_onAudioEnd","_onAudioLoading","load","_onAudioReset","_onAudioPlaying","_onAudioPausing","MusicButton","audioPlayer","iconWidth","iconHeight","playIcon","pauseIcon","PauseIcon","downloadingIcon","DownloadingIcon","setLoaded","setIcon","toggle","unload","loadAndPlay","_SearchMusic","_FetchPlaylist","playlistId","SearchMusicModal","isMusicIncluded","addMusic","removeMusic","SetMusics","SetPlaylist","SearchMusic","FetchPlaylist","CheckIcon","UpdateQuestionModal","SetText","SetHint","handleTextChange","handleHintChange","SaveIcon","AdminThemePage","setTheme","needSave","setNeedSave","setQuestion","SetPlaylistId","handleImgUrlChange","handleLanguageLabelChange","handleCategoryLabelChange","updateQuestionModal","setUpdateQuestionModal","searchMusicModal","setSearchMusicModal","openSearchMusicModal","openSearchPlaylistModal","editQuestion","FetchTheme","hideable","QueueMusicIcon","UpdateTheme","FormControl","m","InputLabel","Select","labelId","UpdateThemeQuestion","AddMusicToTheme","disableColumnSelector","PlayingCardsPage","App","setGames","HashRouter","Routes","Route","path","element","gameIds","newGames","indexOf","Navigate","to","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8abc522e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/music.45a44973.png\";","export enum Source {\n    Legacy = 'legacy',\n    Decade = 'decade',\n    Genre = 'genre',\n    Store = 'store',\n    Deezer = 'deezer',\n}  \n","import { Answer, AnswerId } from './Answer'\nimport { GameId } from './Game'\nimport { Music } from './Music'\nimport { PlayerId } from './Player'\nimport { PlayerAnswer } from './PlayerAnswer'\nimport { toZeroPadString } from './Util'\n\n// //////////////////////////////////////////////////\n// status\n\nexport type QuestionStatus = \n  | 'not-played' \n  | 'played'\n  | 'completed'\n  | 'error'\n\n// //////////////////////////////////////////////////\n// model\n\nexport type QuestionId = number\n\nexport interface Question {\n  id: QuestionId\n  number: number\n  status: QuestionStatus\n  title: string\n  music: Music\n  answers: Answer[] \n  playerAnswers: PlayerAnswer[] \n  previousNumber?: number\n  nextNumber?: number\n}\n\nexport type QuestionUpdater = ( question: Question ) => Question\nexport type OnQuestionUpdate = ( gameId: GameId, questionId: QuestionId, questionUpdater: QuestionUpdater ) => void\n\n// //////////////////////////////////////////////////\n// add\n\nexport function addAnswer( question: Question, answer: string, hint: string = \"\", correct: boolean = false ): Answer {\n  const number = question.answers.length + 1\n  const current: Answer = {\n    id: question.id + number, \n    number: number,\n    answer: answer,\n    hint: hint,\n    correct: correct,\n  }\n  question.answers.push( current )\n  return current\n}\n\nexport function addPlayerAnswer( question: Question, playerId: PlayerId, answerId: AnswerId ): Question {\n  if ( !hasPlayerAnswer( question, playerId, answerId ) ) {\n    question.playerAnswers.push( {\n      playerId: playerId, \n      answerId: answerId,\n    } )\n  }\n  return question\n}\n\nexport function getPlayerAnswerIndex( question: Question, playerId: PlayerId, answerId: AnswerId ): number {\n  return question.playerAnswers.findIndex( playerAnswer => ( playerAnswer.playerId === playerId ) && ( playerAnswer.answerId === answerId ) )\n}\n\nexport function hasPlayerAnswer( question: Question, playerId: PlayerId, answerId: AnswerId ): boolean {\n  return getPlayerAnswerIndex( question, playerId, answerId ) > -1\n}\n\nexport function removePlayerAnswer( question: Question, playerId: PlayerId, answerId: AnswerId ): Question {\n  let index = getPlayerAnswerIndex( question, playerId, answerId )\n  while ( index > -1 ) {\n    question.playerAnswers.splice( index, 1 )\n    index = getPlayerAnswerIndex( question, playerId, answerId )\n  }\n  return question\n}\n\nexport function isCorrect( question: Question, playerAnswer: PlayerAnswer ): boolean {\n  return question.answers.some( answer => ( answer.id ===  playerAnswer.answerId ) && answer.correct )\n}\n\n// //////////////////////////////////////////////////\n// state\n\nexport function onQuestionPlayed( question: Question ): Question {\n  console.log( `[on-question-played] question: ${question.id}` )\n\n  question.status = 'played'\n  \n  return question\n}\n\nexport function onQuestionCompleted( question: Question ): Question {\n  console.log( `[on-question-completed] question: ${question.id}` )\n\n  question.status = 'completed'\n  \n  return question\n}\n\nexport function onQuestionError( question: Question ): Question {\n  console.log( `[on-question-error] question: ${question.id}` )\n\n  question.status = 'error'\n  \n  return question\n}","// //////////////////////////////////////////////////\n// import\n\nimport { Artist } from \"../data/Artist\"\n\n// //////////////////////////////////////////////////\n// adapter\n\nexport function ToArtist( json: JsonArtist ): Artist {\n    return {\n        id: json.id,\n        deezerId: json.deezerId,\n        name: json.name,\n        imgUrl: json.imgUrl,\n    }\n}\n\nexport function FromArtist( artist: Artist ): JsonArtist {\n    return {\n        id: artist.id,\n        deezerId: artist.deezerId,\n        name: artist.name,\n        imgUrl: artist.imgUrl,\n    }\n}\n\n// //////////////////////////////////////////////////\n// json\n\nexport interface JsonArtist {\n    id?: number\n    deezerId?: number\n    name: string\n    imgUrl?: string\n}","// //////////////////////////////////////////////////\n// import\n\nimport { Album } from \"../data/Album\"\n\n// //////////////////////////////////////////////////\n// adapter\n\nexport function ToAlbum( json: JsonAlbum ): Album {\n    return {\n        id: json.id,\n        deezerId: json.deezerId,\n        name: json.name,\n        imgUrl: json.imgUrl,\n    }\n}\n\nexport function FromAlbum( album: Album ): JsonAlbum {\n    return {\n        id: album.id,\n        deezerId: album.deezerId,\n        name: album.name,\n        imgUrl: album.imgUrl,\n    }\n}\n\n// //////////////////////////////////////////////////\n// json\n\nexport interface JsonAlbum {\n    id?: number\n    deezerId?: number\n    name: string\n    imgUrl?: string\n}","// //////////////////////////////////////////////////\n// import\n\nimport { Music } from \"../data/Music\"\n\nimport { JsonArtist, ToArtist, FromArtist } from \"./JsonArtist\"\nimport { JsonAlbum, ToAlbum, FromAlbum } from \"./JsonAlbum\"\n\n// //////////////////////////////////////////////////\n// adapter\n\nexport function ToMusic( json: JsonMusic ): Music {\n    return {\n        id: json.id,\n        deezerId: json.deezerId,\n        name: json.name,\n        mp3Url: json.mp3Url,\n        album: json.album ? ToAlbum( json.album ) : undefined,\n        artist: json.artist ? ToArtist( json.artist ) : undefined,\n    }\n}\n\nexport function FromMusic( music: Music ): JsonMusic {\n    return {\n        id: music.id,\n        deezerId: music.deezerId,\n        name: music.name,\n        mp3Url: music.mp3Url,\n        album: music.album ? FromAlbum( music.album ) : undefined,\n        artist: music.artist ? FromArtist( music.artist ) : undefined,\n    }\n}\n\n// //////////////////////////////////////////////////\n// json\n\nexport interface JsonMusic {\n    id?: number\n    deezerId?: number\n    name: string\n    mp3Url: string\n    artist?: JsonArtist\n    album?: JsonAlbum\n}","// //////////////////////////////////////////////////\n// import\n\nimport { addQuestion, Game } from \"../data/Game\"\nimport { Music } from \"../data/Music\"\nimport { Source } from \"../data/Source\"\nimport { addAnswer, Question } from \"../data/Question\"\n\nimport { JsonMusic, ToMusic } from \"./JsonMusic\"\n\n// //////////////////////////////////////////////////\n// fetch game\n\nexport async function FetchGame( game: Game ) {\n\n    let requestURL = `${process.env.REACT_APP_API_ROOT_URI}/game/new`\n    requestURL = `${requestURL}?nb_question=${game.settings.nbQuestion}`\n    requestURL = `${requestURL}&nb_answer=${game.settings.nbAnswer}`\n    requestURL = `${requestURL}&nb_player=${game.settings.nbPlayer}`\n\n    if ( game.settings.source == Source.Legacy ) {\n        requestURL = `${requestURL}&sources=${Source.Legacy}`\n    } else if ( game.settings.source == Source.Deezer && game.settings.playlist ) {\n        requestURL = `${requestURL}&sources=${Source.Deezer}`\n        requestURL = `${requestURL}&deezer_playlist_id=${game.settings.playlist.deezerId}`\n    } else {\n        requestURL = `${requestURL}&sources=${Source.Store}`\n        if ( game.settings.themeIds && game.settings.themeIds.length > 0 ) {\n            requestURL = `${requestURL}&theme_ids=${game.settings.themeIds.join(\",\")}`\n        }\n    }\n\n    console.log(`[api] requestURL = ${requestURL}`)\n\n    const response = await fetch(requestURL, {method: 'PUT'})\n    if (!response.ok) {\n        const message = `An error has occured while fetching new game: ${response.status} ${response.body}`;\n        throw new Error(message);\n    }\n\n    const jsonResponse = await response.json() as JsonResponse;\n    const jsonGame = jsonResponse.game;\n    \n    for ( const jsonQuestion of jsonGame.questions ) {\n        if ( !jsonQuestion ) {\n            continue\n        }\n        const jsonMusic = jsonQuestion.music\n        const jsonTheme = jsonQuestion.theme\n\n        const music: Music = ToMusic( jsonMusic )\n        const question: Question = addQuestion( game, jsonTheme.title, music )\n\n        for ( const jsonAnswer of jsonQuestion.answers ) {\n            addAnswer( question, jsonAnswer.text, jsonAnswer.hint, jsonAnswer.correct )\n        }\n    }\n}\n\nexport interface JsonResponse {\n    success: boolean\n    game: JsonGame\n}\n\nexport interface JsonGame {\n    id: number\n    players: JsonGamePlayer[]\n    questions: JsonGameQuestion[]\n}\n\nexport interface JsonGamePlayer {\n    id: number\n    name: string\n    active: boolean\n}\n\nexport interface JsonGameQuestion {\n    id: number\n    theme: JsonGameTheme\n    music: JsonMusic\n    answers: JsonGameAnswer[]\n}\n\nexport interface JsonGameTheme {\n    title: string\n}\n\nexport interface JsonGameAnswer {\n    id: number\n    text: string\n    hint: string\n    correct: boolean\n}","\nexport const DEBUG = false\n\nexport const HEADER_KEYBOARD_SHORTCUTS = true\nexport const MUSIC_PLAYER_KEYBOARD_SHORTCUTS = true\n\nexport const MAX_NB_GAME = 4\n\nexport const DEFAULT_NB_PLAYER = 3\nexport const MIN_NB_PLAYER = 2\nexport const MAX_NB_PLAYER = 9\nexport const INCREMENT_NB_PLAYER = 1\nexport const PLAYER_ID_SUFFIX = 9000\n\nexport const DEFAULT_NB_QUESTION = 10\nexport const MIN_NB_QUESTION = 10\nexport const MAX_NB_QUESTION = 99\nexport const INCREMENT_NB_QUESTION = 10\nexport const QUESTION_ID_SUFFIX = 0\n\nexport const DEFAULT_NB_ANSWER_PER_QUESTION = 6\nexport const MIN_NB_ANSWER_PER_QUESTION = 3\nexport const MAX_NB_ANSWER_PER_QUESTION = 6\nexport const INCREMENT_NB_ANSWER_PER_QUESTION = 1\nexport const ANSWER_ID_SUFFIX = 100\n\nexport const ONE_SECOND = DEBUG ? 300 : 1000\nexport const MAX_NB_SECONDS_LOADING = DEBUG ? 10 : 15\nexport const MAX_NB_SECONDS_PLAYING = DEBUG ? 20 : 30\n\nexport const MAX_NB_AVATAR = 20","\nexport enum CardSymbol {\n  HEART = 'HEART',\n  DIAMOND = 'DIAMOND',\n  CLUB = 'CLUB',\n  SPADE = 'SPADE',\n  STAR = 'STAR',\n  CIRCLE = 'CIRCLE',\n  SQUARE = 'SQUARE',\n  TRIANGLE = 'TRIANGLE',\n  CROSS = 'CROSS',\n}  \n\nexport enum CardColor {\n  BLACK = 'BLACK',\n  RED = 'RED',\n  BLUE = 'BLUE',\n  GREEN = 'GREEN',\n  PURPLE = 'PURPLE',\n  YELLOW = 'YELLOW',\n  ORANGE = 'ORANGE',\n  PINK = 'PINK',\n  BROWN = 'BROWN',\n  GRAY = 'GRAY',\n}\n\nexport enum CardSize {\n  XS = 'XS',\n  S = 'S',\n  M = 'M',\n  L = 'L',\n  XL = 'XL',\n}\n\nexport interface Card {\n  readonly symbol: CardSymbol\n  readonly color: CardColor\n  size?: CardSize\n  number?: number\n  value?: string\n}\n\nexport const HeartCard: Card = { symbol: CardSymbol.HEART, color: CardColor.RED }\nexport const DiamondCard: Card = { symbol: CardSymbol.DIAMOND, color: CardColor.RED }\nexport const ClubCard: Card = { symbol: CardSymbol.CLUB, color: CardColor.BLACK }\nexport const SpadeCard: Card = { symbol: CardSymbol.SPADE, color: CardColor.BLACK }\n\nexport const BlueCircleCard: Card = { symbol: CardSymbol.CIRCLE, color: CardColor.BLUE }\nexport const YellowCircleCard: Card = { symbol: CardSymbol.CIRCLE, color: CardColor.YELLOW }\nexport const RedCircleCard: Card = { symbol: CardSymbol.CIRCLE, color: CardColor.RED }\nexport const GreenCircleCard: Card = { symbol: CardSymbol.CIRCLE, color: CardColor.GREEN }\n\nexport const OrangeTriangleCard: Card = { symbol: CardSymbol.TRIANGLE, color: CardColor.ORANGE }\nexport const PurpleTriangleCard: Card = { symbol: CardSymbol.TRIANGLE, color: CardColor.PURPLE }\n\nexport const DefaultCards: Card[] = [ \n  ClubCard, \n  DiamondCard, \n  HeartCard, \n  SpadeCard,\n\n  BlueCircleCard, \n  YellowCircleCard, \n  RedCircleCard, \n  GreenCircleCard,\n  \n  OrangeTriangleCard,\n  PurpleTriangleCard \n]","// //////////////////////////////////////////////////\n// import\n\nimport { DEFAULT_NB_ANSWER_PER_QUESTION, DEFAULT_NB_PLAYER, DEFAULT_NB_QUESTION } from \"./Constants\"\nimport { Source } from \"./Source\"\nimport { Playlist } from \"./Playlist\"\n\n// //////////////////////////////////////////////////\n// model\n\n\n\nexport interface Settings {\n  source: Source\n  nbPlayer: number\n  nbQuestion: number\n  nbAnswer: number\n  themeIds?: number[]\n  playlist?: Playlist\n}\n\nexport type SettingsUpdater = ( settings: Settings ) => Settings\n\n// //////////////////////////////////////////////////\n// create\n\nexport function newSettings( source: Source, nbPlayer: number = DEFAULT_NB_PLAYER, nbQuestion: number = DEFAULT_NB_QUESTION, nbAnswer: number = DEFAULT_NB_ANSWER_PER_QUESTION ): Settings {\n  return {\n    source: source,\n    nbPlayer: nbPlayer,\n    nbQuestion: nbQuestion,\n    nbAnswer: nbAnswer,\n  }\n}\n\nexport function newSettingsFromPrevious( previous: Settings ): Settings {\n  return {\n    source: previous.source,\n    nbPlayer: previous.nbPlayer,\n    nbQuestion: previous.nbQuestion,\n    nbAnswer: previous.nbAnswer,\n  }\n}","\n// //////////////////////////////////////////////////\n// range\n\nexport function range( nb: number ): number[] {\n    return Array.from( Array( nb ).keys() )\n}\n\nexport function pickIndexes( nbSelected: number, nbTotal: number ): number[] {    \n\n    if ( nbTotal <= nbSelected ) {\n        return shuffle( range( nbTotal ) )\n    }\n\n    var selected = new Set<number>();\n    for( var i = 0; i < nbSelected; i++ ) {\n        var j = Math.random() * nbTotal | 0;\n        while(selected.has(j)){\n            j = Math.random() * nbTotal | 0;\n        }\n        selected.add( j );\n    }\n    return Array.from( selected )\n}\n\nexport function pick<T>( values: T[] ): T {\n    return values[ Math.random() * values.length | 0 ];\n}\n\nexport function shuffle<T>( values: T[] ) {\n    for ( let i = values.length - 1; i > 0; i-- ) {\n        let j = Math.random() * ( i + 1 ) | 0;\n        [ values[ i ], values[ j ] ] = [ values[ j ], values[ i ] ];\n    }\n    return values\n}\n\n// //////////////////////////////////////////////////\n// format\n\nexport function toZeroPadString( value: number, padSize: number ): string {\n    return `${value}`.padStart( padSize, '0' )\n}\n\nexport function toDateString( value: number ): string {\n    if ( value <= 0 ) {\n        return '-'\n    }\n    const date = new Date( value )\n    const year = date.getFullYear()\n    const month = toZeroPadString( date.getMonth() + 1, 2 )\n    const day = toZeroPadString( date.getDate(), 2 )\n    return `${year}-${month}-${day}`\n}\n\nexport function toTimeString( value: number ): string {\n    if ( value <= 0 ) {\n        return '-'\n    }\n    const date = new Date( value )\n    const hours = toZeroPadString( date.getHours(), 2 )\n    const minutes = toZeroPadString( date.getMinutes(), 2 )\n    const seconds = toZeroPadString( date.getSeconds(), 2 )\n    return `${hours}:${minutes}:${seconds}`\n}\n\nexport function toDateTimeString( value: number ): string {\n    if ( value <= 0 ) {\n        return '-'\n    }\n    return `${toDateString(value)} ${toTimeString(value)}`\n}\n\n// //////////////////////////////////////////////////\n// user event\n\nexport type Callback = () => void\nexport type EventCallback = ( event: any ) => void\n\nexport function onUserEvent( callback: Callback ): EventCallback {\n    return ( event: any ) => {\n        callback()\n        event.stopPropagation()\n        event.preventDefault()\n    }\n}\n\n// //////////////////////////////////////////////////\n// key event\n\nexport type KeyCallback = ( key: string ) => boolean\nexport type KeyEventCallback = ( event: any ) => void\n\nexport function onKeyEvent( keyCallback: KeyCallback ): EventCallback {\n    return ( event: any ) => {\n        if ( keyCallback( event.key ) ) {\n            console.log( `key-event [${event.key}] >>> handled! >>> stop propagation!` )    \n            event.stopPropagation()\n            event.preventDefault()\n        } else {\n            console.log( `key-event [${event.key}] >>> propagate...` )    \n        }\n    }\n}\n\n// //////////////////////////////////////////////////\n// value event\n\nexport type ValueCallback = ( value: string ) => void\nexport type ValueEventCallback = ( event: any ) => void\n\nexport function onValueEvent( callback: ValueCallback ): ValueEventCallback {\n    return ( event: any ) => {\n        callback( event.target.value as string )\n        event.stopPropagation()\n        event.preventDefault()\n    }\n}\n","\n// //////////////////////////////////////////////////\n// model\n\nimport { AnswerId } from \"./Answer\"\nimport { AnswerStats } from \"./AnswerStats\"\nimport { QuestionId } from \"./Question\"\n\nexport interface QuestionStats {\n  id: QuestionId\n  score: number\n  answers: AnswerStats[]\n  error: boolean\n}\n\nexport function getAnswerStats( stats: QuestionStats, answerId: AnswerId ): AnswerStats | undefined {  \n  return stats.answers.find( answer => answer.id === answerId )\n}\n\nexport function getOrSetAnswerStats( stats: QuestionStats, answerId: AnswerId ): AnswerStats {  \n  const current = getAnswerStats( stats, answerId )\n  if ( current !== undefined ) {\n    return current\n  }\n  const answerStats: AnswerStats = {\n    id: answerId,\n    success: false,\n    score: 0\n  }\n  stats.answers.push( answerStats )\n  return answerStats\n}\n\n\n","import { AnswerId } from './Answer'\nimport { AnswerStats } from './AnswerStats'\nimport { QuestionId } from './Question'\nimport { getAnswerStats, getOrSetAnswerStats, QuestionStats } from './QuestionStats'\n\n// //////////////////////////////////////////////////\n// model\n\nexport interface PlayerStats {\n  score: number\n  nbAnswer: number\n  nbSuccess: number\n  nbFailure: number\n  nbMiss: number,\n  nbError: number,\n  questions: QuestionStats[]\n}\n\nexport interface PlayerVizualiationScoreData {\n  x: string // question number\n  y: number // player score\n  tooltip: string\n}\n\n// //////////////////////////////////////////////////\n// create\n\nexport function newPlayerStats(): PlayerStats {\n  return {\n    score: 0,\n    nbAnswer: 0,\n    nbSuccess: 0,\n    nbFailure: 0,\n    nbMiss: 0,\n    nbError: 0,\n    questions: [],\n  }\n}\n\nexport function getQuestionStats( stats: PlayerStats, questionId: QuestionId ): QuestionStats | undefined {  \n  return stats.questions.find( question => question.id === questionId )\n}\n\nexport function getQuestionAnswerStats( stats: PlayerStats, questionId: QuestionId, answerId: AnswerId ): AnswerStats | undefined {  \n  const questionStats = getQuestionStats( stats, questionId )\n  return questionStats ? getAnswerStats( questionStats, answerId ) : undefined\n}\n\nexport function getOrSetQuestionStats( stats: PlayerStats, questionId: QuestionId ): QuestionStats {  \n  const current = getQuestionStats( stats, questionId )\n  if ( current !== undefined ) {\n    return current\n  }\n  const questionStats: QuestionStats = {\n    id: questionId,\n    score: 0,\n    answers: [],\n    error: false\n  }\n  stats.questions.push( questionStats )\n  return questionStats\n}\n\nexport function flagAnswerAsCorrect( stats: PlayerStats, questionId: QuestionId, answerId: AnswerId, nbPoint: number ) {\n  \n  // global\n  stats.nbAnswer += 1\n  stats.nbSuccess++\n  stats.score += nbPoint\n  \n  // per question\n  const questionStats = getOrSetQuestionStats( stats, questionId )\n  questionStats.score += nbPoint\n\n  // per asnwer\n  const answerStats = getOrSetAnswerStats( questionStats, answerId )\n  answerStats.success = true\n  answerStats.score = nbPoint\n}\n\nexport function flagAnswerAsIncorrect( stats: PlayerStats, questionId: QuestionId, answerId: AnswerId, nbPoint: number ) {\n  \n  // global\n  stats.nbAnswer += 1\n  stats.nbFailure++\n  stats.score += nbPoint // should be negative\n  \n  // per question\n  const questionStats = getOrSetQuestionStats( stats, questionId )\n  questionStats.score += nbPoint // should be negative\n\n  // per asnwer\n  const answerStats = getOrSetAnswerStats( questionStats, answerId )\n  answerStats.success = false\n  answerStats.score = nbPoint // should be negative\n}\n\nexport function flagQuestionAsMiss( stats: PlayerStats, questionId: QuestionId ) {\n  \n  // global\n  stats.nbMiss++\n  stats.score += 0\n  \n  // per question\n  const questionStats = getOrSetQuestionStats( stats, questionId )\n  questionStats.score = 0\n}\n\nexport function flagQuestionAsError( stats: PlayerStats, questionId: QuestionId ) {\n  \n  // global\n  stats.nbError++\n  stats.score += 0\n  \n  // per question\n  const questionStats = getOrSetQuestionStats( stats, questionId )\n  questionStats.score = 0\n  questionStats.error = true\n}\n\nexport function computeVizualiationScoreData( stats: PlayerStats ): PlayerVizualiationScoreData[] {\n  const data:PlayerVizualiationScoreData[] = []\n  \n  let questionNumber = 0\n  let intermediateScore = 0\n\n  data.push({\n    x: ` `,\n    y: intermediateScore,\n    tooltip : `${intermediateScore} (start)`\n  })\n\n  for ( const question of stats.questions ) {\n    questionNumber++\n    intermediateScore += question.score\n    \n    let tooltip = ''\n    if ( question.error ) {\n      tooltip = `${intermediateScore} (error)`\n    } else if ( question.answers.length == 0 ) {\n      tooltip = `${intermediateScore} (miss)`\n    } else if ( question.score >= 0 ) {\n      tooltip = `${intermediateScore} (+${question.score})`\n    } else {\n      tooltip = `${intermediateScore} (${question.score})`\n    }\n    \n    data.push({\n      x: `Q${questionNumber}`,\n      y: intermediateScore,\n      tooltip : tooltip\n    })\n  }\n  return data\n}\n","\n// //////////////////////////////////////////////////\n// model\n\nexport interface Artist {\n  id?: number\n  deezerId?: number\n  name: string\n  imgUrl?: string\n}\n\n// //////////////////////////////////////////////////\n// create\n\nexport function newArtist( name: string, imgUrl?: string ): Artist {\n  return {\n    name: name,\n    imgUrl: imgUrl,\n  }\n}","import { Album } from './Album'\nimport { Artist } from './Artist'\n\nimport musicBackground from '../static/music-black.png'\n\n// //////////////////////////////////////////////////\n// model\n\nexport interface Music {\n  id?: number\n  deezerId?: number\n  name: string\n  mp3Url: string \n  artist?: Artist\n  album?: Album  \n}\n\n// //////////////////////////////////////////////////\n// create\n\nexport function newMusic( name: string, mp3Url: string, artist?: Artist, album?: Album ): Music {\n  return {\n    name: name,\n    mp3Url: mp3Url,\n    artist: artist,\n    album: album,\n  }\n}\n\n// //////////////////////////////////////////////////\n// helper\n\nexport function getImgUrl( music: Music ): string | undefined {\n  if ( music && music.album && music.album.imgUrl ) {\n    return music.album.imgUrl\n  }\n  if ( music && music.artist && music.artist.imgUrl ) {\n    return music.artist.imgUrl\n  }\n  return undefined\n}\n\nexport function getAlbumImgUrl( music: Music ): string | undefined {\n  if ( music && music.album && music.album.imgUrl ) {\n    return music.album.imgUrl\n  }\n  return undefined\n}\n\nexport function getArtistImgUrl( music: Music ): string | undefined {\n  if ( music && music.artist && music.artist.imgUrl ) {\n    return music.artist.imgUrl\n  }\n  return undefined\n}","// //////////////////////////////////////////////////\n// import\n\nimport { newAlbum } from \"./Album\"\nimport { newArtist } from \"./Artist\"\nimport { addQuestion, Game } from \"./Game\"\nimport { newMusic } from \"./Music\"\nimport { addAnswer, Question } from \"./Question\"\nimport { Settings } from \"./Settings\"\nimport { pick, pickIndexes, range, shuffle } from \"./Util\"\nimport legacyJson from '../static/legacy.json';\nimport { Shuffle } from \"@mui/icons-material\"\n\n// //////////////////////////////////////////////////\n// dummy game\n\nconst fullMusic = newMusic(\n    \"Harder, Better, Faster, Stronger & Pêcheur\", \n    \"https://cdns-preview-d.dzcdn.net/stream/c-deda7fa9316d9e9e880d2c6207e92260-8.mp3\", \n    newArtist( \n        \"Daft Punk & Pêcheur\", \n        \"https://e-cdns-images.dzcdn.net/images/artist/f2bc007e9133c946ac3c3907ddc5d2ea/56x56-000000-80-0-0.jpg\"\n    ), \n    newAlbum( \n        \"Discovery & Pêcheur\", \n        \"https://e-cdns-images.dzcdn.net/images/cover/2e018122cb56986277102d2041a592c8/56x56-000000-80-0-0.jpg\"\n    )\n)\n\nconst noAlbumMusic = newMusic(\n    \"Crescendolls\", \n    \"https://cdns-preview-0.dzcdn.net/stream/c-02585dc790f2904c4e870cb3bcecfcf3-8.mp3\", \n    newArtist( \n        \"Daft Punk\", \n        \"https://e-cdns-images.dzcdn.net/images/artist/f2bc007e9133c946ac3c3907ddc5d2ea/56x56-000000-80-0-0.jpg\"\n    ), \n    undefined\n) \n\nconst noPictureMusic = newMusic(\n    \"Superheroes\", \n    \"https://cdns-preview-3.dzcdn.net/stream/c-3d8caae0a1c59f417f31bb747c43818b-7.mp3\", \n    newArtist( \n        \"Daft Punk\", \n        undefined\n    ), \n    undefined\n)\n\nconst shortMusic = newMusic(\n    \"Short\", \n    \"http://gregory.valigiani.free.fr/amnezic/Rem2-14-10.mp3\", \n    newArtist( \n        \"Short\", \n        undefined\n    ), \n    undefined\n) \n\nconst failedMusic = newMusic(\n    \"Failed\",\n    \"http://gregory.valigiani.free.fr/amnezic/Clash%20-%20Should%20I%20Stay%20Or%20Go.mp3\",\n    newArtist( \n        \"Failed\", \n        undefined\n    ), \n    undefined\n)\n\nconst dummyMusics = [ fullMusic, noAlbumMusic, noPictureMusic, shortMusic, failedMusic ]\n\nexport function buildDummyQuestions( game: Game ): Game {\n\n    const nbQuestion = game.settings.nbQuestion\n    const nbAnswer = game.settings.nbAnswer\n    range( nbQuestion ).forEach( i => {\n        const music = dummyMusics[ i % dummyMusics.length ]\n        const artist = music.artist ? music.artist.name : `artist ${i+1}`\n        const question: Question = addQuestion( game, artist, music )\n\n        for ( let j = 0 ; j < nbAnswer ; j++ ) {\n        if ( i % nbAnswer == j ) {\n            addAnswer( question, artist, music.name, true )\n        } else {\n            addAnswer( question, `artist ${j+1}`, `hint ${j+1}`, false )\n        }\n        }\n    } )\n\n    return game\n}\n\n// //////////////////////////////////////////////////\n// test game\n\nexport function buildTestQuestions( game: Game ): Game {\n\n    const genre = legacyJson.genres.find( genre => genre.genre === \"Bruitages\" );\n    if ( genre ) {\n        const musics = genre.musics || []\n\n        const nbQuestion = game.settings.nbQuestion\n        const nbAnswer = game.settings.nbAnswer\n        range( nbQuestion ).map( i => i+1 ).forEach( i => {\n\n            const indexes = pickIndexes( nbAnswer, musics.length )\n            const correctIndex = pick( indexes )\n            const correctMusic = musics[ correctIndex ]\n            const artist = newArtist( correctMusic.artist.name )\n            const music = newMusic( correctMusic.title, correctMusic.mp3Url, artist, undefined )\n            const question: Question = addQuestion( game, genre.genre, music )\n\n            for ( const index of indexes ) {\n                const music = musics[ index ]\n                addAnswer( question, music.artist.name, music.title, index === correctIndex )\n            }\n        } )\n    }\n\n    return game\n}\n\n// //////////////////////////////////////////////////\n// legacy game\n\nexport function buildLegacyQuestions( game: Game ): Game {\n    \n    const nbQuestion = game.settings.nbQuestion\n    const nbAnswer = game.settings.nbAnswer\n\n    const nbMusic = legacyJson.genres.map( genre => genre.musics.length ).reduce( ( previous, current ) => previous + current, 0 )\n    const questionIndexes = pickIndexes( nbQuestion, nbMusic )\n\n    for ( const questionIndex of questionIndexes ) {\n\n        console.log(\"questionIndex: %d\",questionIndex)\n\n        let startIndex = 0\n        for ( const genre of legacyJson.genres ) {\n            if ( genre.musics.length === 0 ) {\n                continue\n            }\n            const endIndex = startIndex + genre.musics.length - 1\n            console.log(\"   startIndex: %d - length: %d - endIndex: %d\",startIndex,genre.musics.length, endIndex)\n            if ( endIndex < questionIndex ) {\n                startIndex = endIndex + 1\n                continue\n            }\n\n            const musics = genre.musics || []\n            const correctIndex = questionIndex - startIndex\n            console.log(\"   correctIndex: %d - questionIndex: %d - startIndex: %d\",correctIndex,questionIndex, startIndex)\n            const correctMusic = musics[ correctIndex ]\n            console.log(correctMusic.artist)\n            const artist = newArtist( correctMusic.artist && correctMusic.artist.name ? correctMusic.artist.name : '???' )\n            const musicURL = process.env.REACT_APP_LEGACY_ROOT_URI + correctMusic.mp3Url\n            const music = newMusic( correctMusic.title || '???', musicURL, artist, undefined )\n            const question: Question = addQuestion( game, genre.genre, music )\n\n            const indexes = pickIndexes( nbAnswer + 1, musics.length ).filter( index => index != correctIndex ).slice( 0, nbAnswer - 1 )\n            indexes.push( correctIndex )\n            shuffle( indexes )\n\n            for ( const index of indexes ) {\n                const music = musics[ index ]\n                addAnswer( question, music.artist && music.artist.name ? music.artist.name : '???', music.title || '???', index === correctIndex )\n            }\n\n            break\n        }\n        \n    }\n\n    return game\n}","\n// //////////////////////////////////////////////////\n// model\n\nexport interface Album {\n  id?: number\n  deezerId?: number\n  name: string\n  imgUrl?: string\n}\n\n// //////////////////////////////////////////////////\n// create\n\nexport function newAlbum( name: string, imgUrl?: string ): Album {\n  return {\n    name: name,\n    imgUrl: imgUrl,\n  }\n}","import { customAlphabet } from 'nanoid'\n\nimport { FetchGame } from \"../client/FetchGame\"\n\nimport { newSettings, Settings, SettingsUpdater, newSettingsFromPrevious } from './Settings'\nimport { Player, PlayerId, PlayerUpdater } from './Player'\nimport { addAnswer, isCorrect, Question, QuestionId, QuestionUpdater } from './Question'\nimport { newArtist } from './Artist'\nimport { newAlbum } from './Album'\nimport { range, toTimeString, toZeroPadString } from './Util'\nimport { Music, newMusic } from './Music'\nimport { GameStats, newGameStats } from './GameStats'\nimport { Card, DefaultCards } from './Card'\nimport { flagAnswerAsCorrect, flagAnswerAsIncorrect, flagQuestionAsError, flagQuestionAsMiss, newPlayerStats } from './PlayerStats'\nimport { ANSWER_ID_SUFFIX, DEBUG, DEFAULT_NB_ANSWER_PER_QUESTION, DEFAULT_NB_PLAYER, DEFAULT_NB_QUESTION, MAX_NB_GAME, PLAYER_ID_SUFFIX, QUESTION_ID_SUFFIX } from './Constants'\nimport { buildDummyQuestions, buildLegacyQuestions, buildTestQuestions } from './Quizz'\nimport { AvatarId } from './Avatar'\nimport { Source } from './Source'\n\n// //////////////////////////////////////////////////\n// model\n\nexport const newGameId = customAlphabet( 'ABCDEFGHIJKLMNPQRSTUVWXYZ', 4 )\nexport const newGameCode = customAlphabet( '0123456789', 4 )\n\nexport enum GameStep {\n  SETTINGS = 'SETTINGS',\n  PLAYERS = 'PLAYERS',\n  QUIZZ = 'QUIZZ',\n  SCORES = 'SCORES',\n}\n\nexport type GameId = string\n\nexport interface Game {\n  readonly id: string\n  readonly code: string\n  readonly created: number\n  updated: number\n  step: GameStep\n  settings: Settings\n  players: Player[]\n  questions: Question[]\n  loaded: boolean\n  started: boolean\n  questionNumber?: number\n  ended: boolean\n  stats?: GameStats\n}\n\nexport type GameUpdater = ( game: Game ) => Game\nexport type OnGameUpdate = ( gameId: GameId, gameUpdater: GameUpdater ) => void\nexport type OnPlayerUpdate = ( gameId: GameId, playerId: PlayerId, gameUpdater: GameUpdater ) => void\n// export type OnQuestionUpdate = ( gameId: GameId, playerId: PlayerId, gameUpdater: GameUpdater ) => void\n\n// //////////////////////////////////////////////////\n// create\n\nexport function newGame( source: Source, nbPlayer: number = DEFAULT_NB_PLAYER, nbQuestion: number = DEFAULT_NB_QUESTION, nbAnswer: number = DEFAULT_NB_ANSWER_PER_QUESTION ): Game {\n  return {\n    id: newGameId(),  \n    code: newGameCode(),  \n    created: Date.now(),  \n    updated: Date.now(),\n    step: GameStep.SETTINGS,\n    settings: newSettings( source, nbPlayer, nbQuestion, nbAnswer ),\n    players: [],\n    questions: [],\n    loaded: false,\n    started: false,\n    ended: false,\n  }\n}\n\nexport function newGameFromPrevious( previous: Game ): Game {\n  return {\n    id: newGameId(),  \n    code: newGameCode(),  \n    created: Date.now(),  \n    updated: Date.now(),\n    step: GameStep.SETTINGS,\n    settings: newSettingsFromPrevious( previous.settings ),\n    players: previous.players.map( player => newPlayerFromPrevious( player ) ),\n    questions: [],\n    loaded: false,\n    started: false,\n    ended: false,\n  }\n}\n\n// //////////////////////////////////////////////////\n// type\n\nexport function isLegacyGame( game: Game ): boolean {\n  return game && game.settings && game.settings.source == Source.Legacy\n}\n\nexport function isStoreGame( game: Game ): boolean {\n  return game && game.settings && game.settings.source == Source.Store\n}\n\nexport function isDeezerGame( game: Game ): boolean {\n  return game && game.settings && game.settings.source == Source.Deezer\n}\n\n// //////////////////////////////////////////////////\n// add\n\nexport function addPlayer( game: Game, card: Card ): Player {\n  const number = game.players.length + 1\n  const current: Player = {\n    id: PLAYER_ID_SUFFIX + number, \n    number: number,\n    avatarId: number as AvatarId,\n    name: `Player ${toZeroPadString( number, 2 )}`,\n    status: 'active',\n    card: card,\n    stats: newPlayerStats(),\n  }\n  game.players.push( current )\n  console.log( current )\n  return current\n}\n\nexport function newPlayerFromPrevious( previous: Player ): Player {\n  const current: Player = {\n    id: previous.id, \n    number: previous.number,\n    avatarId: previous.avatarId,\n    name: previous.name,\n    status: previous.status,\n    card: previous.card,\n    stats: newPlayerStats(),\n  }\n  return current\n}\n\nexport function addQuestion( game: Game, title: string, music: Music ): Question {\n  const number = game.questions.length + 1\n  const current: Question = {\n    id: ( QUESTION_ID_SUFFIX + number ) * ANSWER_ID_SUFFIX,\n    number: number, \n    status: 'not-played',\n    title: title,\n    music: music,\n    answers: [],\n    playerAnswers: [],\n  }\n  if ( game.questions.length > 0 ) {\n    const previous: Question = game.questions[ game.questions.length - 1 ]\n    previous.nextNumber = current.number\n    current.previousNumber = previous.number\n  }\n  game.questions.push( current )\n  return current\n}\n\n// //////////////////////////////////////////////////\n// update\n\nexport function updateSettings( update: SettingsUpdater ): GameUpdater {\n  return ( game: Game ) => {\n    return {\n      ...game,\n      settings: update( game.settings ),\n    }\n  }\n}\n\nexport function updatePlayer( playerId: PlayerId, update: PlayerUpdater ): GameUpdater {\n  return ( game: Game ) => {\n    if ( !game.players ) {\n      return game\n    }\n    return {\n      ...game,\n      players: game.players.map( player => player.id == playerId ? update( player ) : player ),\n    }\n  }\n}\n\nexport function updateQuestion( questionId: QuestionId, update: QuestionUpdater ): GameUpdater {\n  return ( game: Game ) => {\n    if ( !game.questions ) {\n      return game\n    }\n    return {\n      ...game,\n      questions: game.questions.map( question => question.id == questionId ? update( question ) : question ),\n    }\n  }\n}\n\n// //////////////////////////////////////////////////\n// store\n\nconst GAMES = 'games'\n\nexport function clearGames() {\n  localStorage.removeItem( GAMES )\n}\n\nexport function sortGames( games: Game[] ): Game[] {\n  const sortedGames = [ ...games ].sort( ( left: Game, right: Game ): number => {\n    return right.updated - left.updated\n  } )\n  return sortedGames\n}\n\nexport function sliceGames( games: Game[] ): Game[] {\n  const slicedGames = games.slice( 0, MAX_NB_GAME )\n  return slicedGames\n}\n\nexport function sanitizeGames( games: Game[] ): Game[] {\n  return sliceGames( sortGames( games ) )\n}\n\nexport function storeGames( games: Game[] ): Game[] {\n  const sanitizedGames = games.slice( 0, MAX_NB_GAME )\n  localStorage.setItem( GAMES, JSON.stringify( sanitizedGames ) )\n  return sanitizedGames\n}\n\nexport function loadGames(): Game[] {\n  const games: Game[] = JSON.parse( localStorage.getItem( GAMES ) || '[]' ) || []  \n  return sortGames( games )\n}\n\n// //////////////////////////////////////////////////\n// select\n\nexport function selectGame( games: Game[], gameId: string | undefined ): Game | undefined {\n  if ( !gameId ) {\n    return undefined\n  }\n  const game = gameId ? loadGames().find( g => g.id == gameId ) : undefined\n  console.log(`[select] game #${gameId} : ${ game !== undefined ? 'OK' : 'KO' }`)\n  return game\n}\n\nexport function selectQuestion( game: Game | undefined, questionParam: string | undefined ): Question | undefined {\n  if ( !game || !questionParam ) {\n    return undefined\n  }\n  const questionNumber: number = parseInt( questionParam )\n  const question = game.questions && questionNumber ? game.questions.find( question => question.number == questionNumber ) : undefined\n  console.log(`[select] question #${questionNumber} : ${ question !== undefined ? 'OK' : 'KO' }`)\n  return question\n}\n\n// //////////////////////////////////////////////////\n// state\n\nexport function hasPlayers( game: Game ): boolean {\n  return ( game !== undefined && game.players !== undefined && game.players.length > 0 )\n}\n\nexport function hasQuestions( game: Game ): boolean {\n  return ( game !== undefined && game.questions !== undefined && game.questions.length > 0 )\n}\n\nexport function isSetUp( game: Game ): boolean {\n  return hasPlayers( game ) && hasQuestions( game )\n}\n\nexport function isSettingsPageDisabled( game: Game | undefined ): boolean {\n  return ( game === undefined ) || game.loaded || game.ended\n}\n\nexport function isPlayersPageDisabled( game: Game | undefined ): boolean {\n  return ( game === undefined ) || !game.loaded || game.ended \n}\n\nexport function isQuizzPageDisabled( game: Game | undefined ): boolean {\n  return ( game === undefined ) || !game.loaded || game.ended \n}\n\nexport function isScoresPageDisabled( game: Game | undefined ): boolean {\n  return ( game === undefined ) || !game.loaded || !game.started\n}\n\nexport function OnStep( gameStep: GameStep ): GameUpdater {\n  return ( game: Game ): Game => {\n      console.log( `[on-step] ${game.id} - ${gameStep}` )\n      \n      //\n      // move to new step\n      //\n    \n      game.step = gameStep\n    \n      return game\n  }\n}\n\nexport function onSetUp( game: Game ): Game {\n  console.log( `[on-set-up] ${game.id}` )\n\n  //\n  // build questions ( based on game type )\n  //\n\n  console.log(process.env)\n  console.log(`game type = ${process.env.REACT_APP_GAME_TYPE}`)\n  if ( process.env.REACT_APP_GAME_TYPE == 'dummy' ) {\n    game = buildDummyQuestions( game )\n  } else if ( process.env.REACT_APP_GAME_TYPE == 'test' ) {\n    game = buildTestQuestions( game )\n  } else if ( process.env.REACT_APP_GAME_TYPE == 'legacy' ) {\n    game = buildLegacyQuestions( game )\n  } else if ( process.env.REACT_APP_GAME_TYPE == 'api' ) {\n    FetchGame( game )\n  } else {\n    console.log( `[on-set-up] missing game type >>> FALLBACK to 'legacy'` )\n    game = buildLegacyQuestions( game )\n  }\n  game.loaded = true\n\n  //\n  // create default players\n  //\n\n  const nbPlayer = game.settings.nbPlayer\n  range( nbPlayer ).forEach( index => addPlayer( game, DefaultCards[ index % DefaultCards.length ] ) )  \n  \n  //\n  // finally move to players step\n  //\n\n  game.step = GameStep.PLAYERS\n\n  return game\n}\n\nexport function onStartGame( game: Game ): Game {\n  console.log( `[on-start-game] ${game.id}` )\n\n  if ( !game.questions || game.questions.length == 0 ) {\n    return game\n  }\n\n  //\n  // flag game as started\n  //\n\n  game.started = true\n\n  //\n  // select first question\n  //\n\n  game.questionNumber = game.questions[0].number\n\n  //\n  // prepare game stats\n  //\n\n  game.stats = newGameStats( game.settings.nbQuestion ) \n  \n  //\n  // finally move to quizz step\n  //\n\n  game.step = GameStep.QUIZZ\n\n  return game\n}\n\nexport function onAnswers( game: Game, question: Question ): GameUpdater {\n  return ( game: Game ): Game => {\n    console.log( `[on-answers] ${game.id} - ${question.number}` )\n\n    const nbPlayers = game.players.length\n    let nbPoint = nbPlayers\n\n    for ( const playerAnswer of question.playerAnswers ) {\n      const player = game.players.find( player => player.id === playerAnswer.playerId )\n      if ( player ) {\n        const correct = isCorrect( question, playerAnswer )\n        if ( correct ) {\n          flagAnswerAsCorrect( player.stats, question.id, playerAnswer.answerId, nbPoint )\n        } else {\n          flagAnswerAsIncorrect( player.stats, question.id, playerAnswer.answerId, -nbPoint )\n        }\n      }\n      if ( nbPoint > 1 ) {\n        nbPoint--\n      }\n    }\n\n    for ( let player of game.players ) {\n      let miss = true\n      for ( const playerAnswer of question.playerAnswers ) {\n        if ( player.id === playerAnswer.playerId ) {\n          miss = false\n          break\n        }\n      }\n      if ( miss ) {\n        flagQuestionAsMiss( player.stats, question.id )\n      }\n    }\n\n    return game\n  }\n}\n\nexport function onErrorAnswers( game: Game, question: Question ): GameUpdater {\n  return ( game: Game ): Game => {\n    console.log( `[on-question-error] ${game.id} - ${question.number}` )\n\n    for ( const player of game.players ) {\n      flagQuestionAsError( player.stats, question.id )\n    }\n\n    return game\n  }\n}\n\nexport function onQuestionNumber( questionNumber: number ): GameUpdater {\n  return ( game: Game ): Game => {\n    console.log( `[on-question] ${game.id} - ${questionNumber}` )\n\n    if ( !game.questions ) {\n      throw Error( \"missing questions!\" )\n    }\n    const question = game.questions.find( question => question.number === questionNumber )\n    if ( !question ) {\n      throw Error( \"unknwon question!\" )\n    }\n\n    //\n    // update stats\n    //\n\n    if ( game.stats ) {\n      game.stats.nbCompleted++\n      game.stats.progress = Math.ceil( game.stats.nbCompleted * 100 / game.stats.nbQuestion )\n    }\n\n    //\n    // move to next question\n    //\n\n    game.questionNumber = question.number\n\n    return game\n  }\n}\n\nexport function onEndGame( game: Game ): Game {\n  console.log( `[on-end-game] ${game.id}` )\n\n  //\n  // flag game as ended\n  //\n\n  game.ended = true\n  \n  //\n  // finally move to scores step\n  //\n\n  game.step = GameStep.SCORES\n\n  return game\n}\n\n","\n// //////////////////////////////////////////////////\n// model\n\nexport interface GameStats {\n  readonly nbQuestion: number\n  nbCompleted: number\n  progress: number\n}\n\n// //////////////////////////////////////////////////\n// create\n\nexport function newGameStats( nbQuestion: number ): GameStats {\n  return {\n    nbQuestion: nbQuestion,\n    nbCompleted: 0,  \n    progress: 0,\n  }\n}\n","import { Game, GameStep } from './Game'\n\n// //////////////////////////////////////////////////\n// navigate\n\nexport function toAdminThemesPage(): string {\n  return `/admin/theme`\n}\n\nexport function toAdminThemePage( themeId: number ): string {\n  return `/admin/theme/${themeId}`\n}\n\nexport function toHomePage(): string {\n  return `/`\n}\n\nexport function toSettingsPage( game: Game ): string {\n  return `/game/${game.id}/settings`\n}\n\nexport function toPlayersPage( game: Game ): string {\n  return `/game/${game.id}/players`\n}\n\nexport function toQuizzPage( game: Game ): string {\n  if ( !game.questionNumber ) {\n    return `/game/${game.id}/start`    \n  }\n  return `/game/${game.id}/question/${game.questionNumber}`\n}\n\nexport function toScoresPage( game: Game ): string {\n  return `/game/${game.id}/scores`\n}\n\nexport function toGamePage( game: Game | undefined ): string {\n  if ( game ) {\n    switch ( game.step ) {\n      case GameStep.SETTINGS:\n        return toSettingsPage( game )\n      case GameStep.PLAYERS:\n        return toPlayersPage( game )\n      case GameStep.QUIZZ:\n        return toQuizzPage( game )\n      case GameStep.SCORES:\n        return toScoresPage( game )\n    }  \n  }\n  return toHomePage()\n}","import React from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nimport AppBar from '@mui/material/AppBar'\nimport Box from '@mui/material/Box'\nimport Toolbar from '@mui/material/Toolbar'\nimport IconButton from '@mui/material/IconButton'\n\nimport SkipPreviousIcon from '@mui/icons-material/SkipPrevious'\nimport SkipNextIcon from '@mui/icons-material/SkipNext'\nimport MenuIcon from '@mui/icons-material/Menu'\n\nimport { Game, GameStep, OnGameUpdate, OnStep } from '../data/Game'\nimport { isSettingsPageDisabled, isPlayersPageDisabled, isQuizzPageDisabled, isScoresPageDisabled } from '../data/Game'\nimport { toHomePage } from '../data/Navigate'\nimport { onKeyEvent, onUserEvent } from '../data/Util'\nimport {  Group, Home, MilitaryTech, MusicNote, Settings } from '@mui/icons-material'\nimport { ListItemIcon, ListItemText, Menu, MenuItem } from '@mui/material'\nimport { HEADER_KEYBOARD_SHORTCUTS } from '../data/Constants'\n\ninterface Props {\n    title?: string\n    step?: GameStep\n    game?: Game\n    updateGame?: OnGameUpdate\n    canPrevious?: () => boolean\n    onPrevious?: () => void\n    canNext?: () => boolean\n    onNext?: () => void\n}\n\nconst Header = ( props: Props ) => {\n    const { title, step, game, updateGame, canPrevious, onPrevious, canNext, onNext } = props\n\n    const navigate = useNavigate()\n\n    // title helpers\n\n    const homeTitle = 'Home'\n    const settingsTitle = 'Settings'\n    const playersTitle = 'Players'\n    const quizzTitle = 'Quizz'\n    const scoresTitle = 'Scores'\n\n    // selected helpers\n\n    const isHomeSelected = step === undefined\n    const isSettingsSelected = step == GameStep.SETTINGS\n    const isPlayersSelected = step == GameStep.PLAYERS\n    const isQuizzSelected = step == GameStep.QUIZZ\n    const isScoresSelected = step == GameStep.SCORES\n\n    // disabled helpers\n\n    if ( game ) {\n        console.log(`game.${game.id}: disabled=${isSettingsPageDisabled( game )} : loaded=${game.loaded} : ended=${game.ended}`)\n    }\n\n    const isHomeDisabled = false\n    const isSettingsDisabled = isSettingsPageDisabled( game )\n    const isPlayersDisabled = isPlayersPageDisabled( game )\n    const isQuizzDisabled = isQuizzPageDisabled( game )\n    const isScoresDisabled = isScoresPageDisabled( game )\n\n    // disable previous & next buttons\n\n    const previousVisible = onPrevious !== undefined\n    const previousDisabled = canPrevious !== undefined && !canPrevious()\n    const nextVisible = onNext !== undefined\n    const nextDisabled = canNext !== undefined && !canNext()\n\n    // update helpers\n\n    const updateGameStep = ( gameStep: GameStep ) => {\n        if ( game && updateGame ) {\n            updateGame( game.id, OnStep( gameStep ) )\n        }\n    }\n\n    // user events\n\n    const onHomePage = !isHomeSelected ? onUserEvent( () => navigate( toHomePage() ) ) : undefined\n    const onSettingsPage = !isSettingsSelected ? onUserEvent( () => updateGameStep( GameStep.SETTINGS ) ) : undefined\n    const onPlayersPage = !isPlayersSelected ? onUserEvent( () => updateGameStep( GameStep.PLAYERS ) ) : undefined\n    const onQuizzPage = !isQuizzSelected ? onUserEvent( () => updateGameStep( GameStep.QUIZZ ) ) : undefined\n    const onScoresPage = !isScoresSelected ? onUserEvent( () => updateGameStep( GameStep.SCORES ) ) : undefined\n\n    // keyboard shortcuts\n\n    if ( HEADER_KEYBOARD_SHORTCUTS ) {\n\n        const handleKeyPress = React.useCallback( onKeyEvent( ( key: string ): boolean => {\n            switch ( key ) {\n                case 'ArrowLeft':\n                    if ( previousVisible && !previousDisabled ) {\n                        console.log( `header >>> key \"${key}\" >>> onPrevious()`);\n                        onPrevious();\n                        return true;\n                    }\n                    break;\n                case 'ArrowRight':\n                    if ( nextVisible && !nextDisabled ) {\n                        console.log( `header >>> key \"${key}\" >>> onNext()`);\n                        onNext();\n                        return true;\n                    }\n                    break;\n            } \n            return false;\n        } ), [ onPrevious, onNext ] );\n        \n        React.useEffect( () => {\n            document.addEventListener( 'keydown', handleKeyPress );\n            return () => {\n                document.removeEventListener( 'keydown', handleKeyPress );\n            };\n        }, [ handleKeyPress ] );\n    }\n\n    // menu \n\n    const [ menuElement, setMenuElement ] = React.useState( null );\n    const open = Boolean( menuElement );\n    const onMenuOpen = ( event: any ) => {\n        setMenuElement( event.currentTarget );\n    };\n    const onMenuClose = () => {\n        setMenuElement( null );\n    };\n\n    // title \n\n    const finalTitle = title ? title : \n                        isHomeSelected ? homeTitle : \n                        isSettingsSelected ? settingsTitle : \n                        isPlayersSelected ? playersTitle : \n                        isQuizzSelected ? quizzTitle : \n                        isScoresSelected ? scoresTitle : ''\n\n\n\n    return (\n        <Box className=\"header\" sx={{ flexGrow: 1 }} style={{ marginBottom: '20px' }}>\n            <AppBar position=\"static\" color=\"transparent\">\n                <Toolbar>\n                    <div style={{ width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n\n                        {/* menu */}\n\n                        <div>\n\n                            { game && (\n                                <>\n\n                                    {/* icon */}\n        \n                                    <IconButton\n                                        id=\"menu-button\"\n                                        aria-label=\"menu\"\n                                        aria-controls={ open ? 'basic-menu' : undefined }\n                                        aria-expanded={ open ? 'true' : undefined }\n                                        aria-haspopup=\"true\"\n                                        onClick={onMenuOpen}\n                                    >\n                                        <MenuIcon />\n                                    </IconButton>\n        \n                                    {/* menu items */}\n        \n                                    <Menu\n                                        id=\"basic-menu\"\n                                        anchorEl={menuElement}\n                                        open={open}\n                                        onClose={onMenuClose}\n                                        MenuListProps={{\n                                        'aria-labelledby': 'basic-button',\n                                        }}\n                                    >\n        \n                                        {/* home */}\n        \n                                        <MenuItem selected={isHomeSelected} disabled={isHomeDisabled} onClick={onHomePage}>\n                                            <ListItemIcon>\n                                                <Home fontSize=\"small\" />\n                                            </ListItemIcon>\n                                            <ListItemText>{homeTitle}</ListItemText>\n                                        </MenuItem>\n        \n                                        {/* settings */}\n        \n                                        <MenuItem selected={isSettingsSelected} disabled={isSettingsDisabled} onClick={onSettingsPage}>\n                                            <ListItemIcon>\n                                                <Settings fontSize=\"small\" />\n                                            </ListItemIcon>\n                                            <ListItemText>{settingsTitle}</ListItemText>\n                                        </MenuItem>\n        \n                                        {/* players */}\n        \n                                        <MenuItem selected={isPlayersSelected} disabled={isPlayersDisabled} onClick={onPlayersPage}>\n                                            <ListItemIcon>\n                                                <Group fontSize=\"small\" />\n                                            </ListItemIcon>\n                                            <ListItemText>{playersTitle}</ListItemText>\n                                        </MenuItem>\n        \n                                        {/* quizz */}\n        \n                                        <MenuItem selected={isQuizzSelected} disabled={isQuizzDisabled} onClick={onQuizzPage}>\n                                            <ListItemIcon>\n                                                <MusicNote fontSize=\"small\" />\n                                            </ListItemIcon>\n                                            <ListItemText>{quizzTitle}</ListItemText>\n                                        </MenuItem>\n        \n                                        {/* scores */}\n        \n                                        <MenuItem selected={isScoresSelected} disabled={isScoresDisabled} onClick={onScoresPage}>\n                                            <ListItemIcon>\n                                                <MilitaryTech fontSize=\"small\" />\n                                            </ListItemIcon>\n                                            <ListItemText>{scoresTitle}</ListItemText>\n                                        </MenuItem>\n        \n                                    </Menu>\n                                \n                                </>\n                            ) }\n\n                        </div>\n\n                        {/* title */}\n\n                        <div style={{ fontWeight: 'bold', textTransform: 'uppercase' }}>{finalTitle}</div>\n\n                        {/* Previous & Next */}\n                        \n                        <div>\n\n                            { previousVisible && (\n                                <IconButton \n                                    aria-label=\"Previous\" \n                                    color=\"info\"\n                                    disabled={previousDisabled}\n                                    onClick={onPrevious}\n                                >\n                                    <SkipPreviousIcon />\n                                </IconButton>\n                            ) }\n                            \n                            { nextVisible && (\n                                <IconButton \n                                    aria-label=\"Next\" \n                                    color=\"info\"\n                                    disabled={nextDisabled}\n                                    onClick={onNext}\n                                >\n                                    <SkipNextIcon />\n                                </IconButton>\n                            ) }\n\n                        </div>\n\n                    </div>\n\n                </Toolbar>\n            </AppBar>\n        </Box>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport Typography from '@mui/material/Typography';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\n\nimport { Game } from '../data/Game'\n\ninterface Props {\n}\n\nconst GameFooter = ( props: Props ) => {\n\n    return (\n        <>\n            {/* <Box className=\"footer\" sx={{ marginTop: '20px', flexGrow: 1 }}>\n                <AppBar position=\"static\" color=\"transparent\">\n                    <Toolbar style={{ width: '100%', textAlign: 'center' }}>\n                        <Typography variant=\"caption\" display=\"block\" color=\"GrayText\" gutterBottom>\n                            @mnezic\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n            </Box> */}\n        </>\n    )\n}\n\nexport default GameFooter","import React from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nimport { Game, GameStep } from '../data/Game'\nimport { toHomePage, toGamePage } from '../data/Navigate'\n\nimport Header from './GameHeader'\nimport Footer from './GameFooter'\n\ninterface Props {\n    title?: string\n    children: any\n    onNext?: () => void\n}\n\nconst Page = ( props: Props ) => {\n    const { title, children, onNext } = props\n    \n    return (\n        <div className={`page`}>\n            <Header title={title} onNext={onNext}/>\n            {children}\n            <Footer />\n        </div>\n    )\n}\n\nexport default Page","import React from 'react'\n\nimport { makeStyles } from '@mui/styles'\nimport IconButton from '@mui/material/IconButton'\nimport CloseIcon from '@mui/icons-material/Close'\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport MusicNoteIcon from '@mui/icons-material/MusicNote'\nimport CalendarTodayIcon from '@mui/icons-material/CalendarToday'\nimport PersonIcon from '@mui/icons-material/Person'\nimport SkipNextIcon from '@mui/icons-material/SkipNext'\n\nimport { Game } from '../data/Game'\nimport { onUserEvent, toDateTimeString } from '../data/Util'\nimport { Chip, Stack } from '@mui/material';\n\nconst useStyles = makeStyles( () => ( {\n    gameCard: {\n        display: 'flex', \n        flexDirection: 'column', \n        alignItems: 'center', \n        justifyContent: 'space-between',\n        padding: '10px 20px',\n        borderRadius: '10px',\n        border: '2px solid #ddd',        \n        \"&:hover\": {\n            border: '2px solid gold',        \n            backgroundColor: '#ffd70029'\n        }\n    },\n    gameLine: {\n        width: '100%', \n        display: 'flex', \n        alignItems: 'center', \n        justifyContent: 'space-between'\n    },\n    gameItem: {\n        display: 'flex', \n        alignItems: 'center', \n        justifyContent: 'center'\n    },\n} ) );\n\ninterface Props {\n    game?: Game\n    title?: string\n    startGame?: () => void\n    resumeGame?: ( game: Game ) => void\n    deleteGame?: ( game: Game ) => void\n}\n\nconst GameCard = ( props: Props ) => {\n    const { game, title, startGame, resumeGame, deleteGame } = props\n    const classes = useStyles()\n\n    if ( !game ) {\n\n        const onStart = startGame ? onUserEvent( () => startGame() ) : undefined\n\n        return (\n            <div title=\"Start New Game\" className={`${classes.gameCard} selectable`} onClick={onStart}>\n                <div className={classes.gameLine}> \n                    {title && <div className={classes.gameItem}><b>{title}</b></div>}\n                    {!title && <div className={classes.gameItem}><b>Start New Game</b></div>}\n                </div>\n            </div>\n        )\n    }\n\n    // user events\n\n    const onResume = resumeGame ? onUserEvent( () => resumeGame( game ) ) : undefined\n    const onDelete = deleteGame ? onUserEvent( () => deleteGame( game ) ) : undefined\n\n    const progress = game.ended ? 100 : game.stats ? game.stats.progress : 0\n    const state = game.ended ? 'ended' : game.stats ? `${Math.round(game.stats.progress)}%` : 'not started'\n\n    return (        \n        <div title=\"Resume Game\" className={`${classes.gameCard} selectable`} onClick={onResume}>\n            <div className={classes.gameLine}> \n                <div className={classes.gameItem}><b>Game {game.id}</b></div>\n\n                <div>\n                    <Stack direction=\"row\" spacing={1} style={{ opacity: '0.7' }}>\n                        { game.ended && <Chip label=\"Ended\" color=\"success\" /> }\n                        { !game.ended && game.stats && <Chip label={`${Math.round(game.stats.progress)}%`} color=\"primary\" /> }\n                        { !game.ended && !game.stats && <Chip label=\"Not started\" color=\"warning\" /> }\n                    </Stack>\n                </div>\n\n                <IconButton title=\"Delete Game\" onClick={onDelete}>\n                    <CloseIcon />\n                </IconButton>\n\n            </div>\n            <div style={{ marginLeft: '5%', width: '95%' }}>\n                <div className={classes.gameLine}> \n                    <div className={classes.gameItem}><PersonIcon style={{ marginRight: '10px' }} color=\"primary\"/> {game.settings.nbPlayer} players</div>\n                    <div className={classes.gameItem}><MusicNoteIcon style={{ marginRight: '10px' }} color=\"primary\"/> {game.settings.nbQuestion} questions</div>\n                    <div className={classes.gameItem}><CalendarTodayIcon style={{ marginRight: '10px' }} color=\"primary\"/> {toDateTimeString(game.updated)}</div>                \n                </div>\n                <Box sx={{ width: '100%', display: 'flex', alignItems: 'center', marginTop: '5px' }}>\n                    <Box sx={{ height: '10px', width: '100%', display: 'flex', alignItems: 'center' }}>\n                        <LinearProgress variant=\"determinate\" value={progress} valueBuffer={100}/>\n                    </Box>\n                </Box>\n            </div>\n        </div>\n    )\n}\n\nexport default GameCard","import React from 'react'\n\nimport IconButton from '@mui/material/IconButton';\nimport FolderIcon from '@mui/icons-material/Folder';\n\nimport { onUserEvent } from '../data/Util'\n\ninterface Props {\n    title?: string\n    onNext: () => void\n}\n\nconst AdminButton = ( props: Props ) => {\n    const { title, onNext } = props\n    const description = title && title != '' ? title : 'Next'   \n    \n    // user events\n\n    const onClick = onUserEvent( onNext )\n\n    return (\n        <IconButton color=\"secondary\" title={description} onClick={onClick}>\n            <FolderIcon />\n        </IconButton>\n    )\n}\n\nexport default AdminButton","import React from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nimport IconButton from '@mui/material/IconButton'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport Grid from '@mui/material/Grid'\nimport Typography from '@mui/material/Typography'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\n\nimport { Source } from '../data/Source'\nimport { Game, GameId, GameStep, newGame, OnGameUpdate } from '../data/Game'\nimport { toGamePage, toAdminThemesPage } from '../data/Navigate'\nimport { onUserEvent } from '../data/Util'\n\nimport Page from '../component/Page'\nimport GameCard from '../component/GameCard'\nimport NextButton from '../component/NextButton'\nimport AdminButton from '../component/AdminButton'\nimport { Accordion, AccordionDetails, AccordionSummary } from '@mui/material'\n\ninterface Props {\n    games: Game[]\n    addGame: ( game: Game ) => void\n    updateGame: OnGameUpdate\n    deleteGames: ( gameIds: GameId[] ) => void\n}\n\nconst HomePage = ( props: Props ) => {\n    const { games, addGame, updateGame, deleteGames } = props\n\n    const navigate = useNavigate()\n\n    // update helpers\n\n    const toThemes = () => {\n        console.log( `[to-themes]` )\n        navigate( toAdminThemesPage() )\n    }\n\n    const startLegacyGame = () => {\n        startGame(Source.Legacy)\n    }\n\n    const startStoreGame = () => {\n        startGame(Source.Store)\n    }\n\n    const startDeezerGame = () => {\n        startGame(Source.Deezer)\n    }\n\n    const startGame = (source: Source) => {\n        console.log( `[start-game] source: ${source}` )\n        const game = newGame(source)\n        addGame( game )\n        navigate( toGamePage( game ) )\n    }\n\n    const resumeGame = ( game: Game ) => {\n        console.log( `[resume-game] ${game.id}` )\n        updateGame( game.id, ( game: Game ) => {\n            game.updated = Date.now()\n            if ( game.ended ) {\n                game.step = GameStep.SCORES    \n            } else if ( game.started ) {                \n                game.step = GameStep.QUIZZ\n            }            \n            return game\n        } )\n        navigate( toGamePage( game ) )\n    }\n\n    const deleteGame = ( game: Game ) => {\n        deleteGames( [ game.id ] )\n    }\n\n    const deleteAllGames = () => {\n        var allGameIds: GameId[] = []\n        for ( const game of games ) {\n            allGameIds.push( game.id )\n        }\n        deleteGames( allGameIds )\n    }\n\n    //\n    // clean old games\n    //\n\n    React.useEffect( () => {\n        var oldGameIds: GameId[] = []\n        for ( const game of games ) {\n            if ( game.ended ) {\n                const delta = Date.now() - game.updated\n                if ( delta > /* 30 days */ 30 * 24 * 60 * 60 * 1000 ) {\n                    oldGameIds.push( game.id )\n                }\n            }\n        }\n        if ( oldGameIds.length > 0 ) {\n            deleteGames( oldGameIds )\n        }\n    }, [] )\n\n    //\n    // sort games\n    //\n\n    const sortedGames = [ ...games ].sort( ( left: Game, right: Game ): number => {\n        return right.updated - left.updated\n    } )\n    const hasPreviousGames = sortedGames.length > 0\n\n    const unfinishedGames = [ ...sortedGames ].filter( game => !game.ended )\n    const hasUnfinishedGames = unfinishedGames.length > 0\n\n    const finishedGames = [ ...sortedGames ].filter( game => game.ended )\n    const hasFinishedGames = finishedGames.length > 0\n\n    return (\n        <Page title=\"Amnezic\">\n\n            <Grid container spacing={2}>\n\n                {/* new games */}\n\n                <Grid key=\"new-store-game\" item xs={12} textAlign=\"left\">\n                    <GameCard\n                        title=\"Start new game\"\n                        startGame={startStoreGame}\n                    />\n                </Grid>\n\n                <Grid key=\"new-deezer-game\" item xs={12} textAlign=\"left\">\n                    <GameCard\n                        title=\"Start new game based on deezer playlist\"\n                        startGame={startDeezerGame}\n                    />\n                </Grid>\n\n                <Grid key=\"new-legacy-game\" item xs={12} textAlign=\"left\">\n                    <GameCard\n                        title=\"Start new game based on legacy musics\"\n                        startGame={startLegacyGame}\n                    />\n                </Grid>\n\n                {/* prevous games */}\n\n                {hasPreviousGames && <>\n\n                    <Grid key=\"previous-games\" item xs={10} textAlign=\"left\">\n                        <Typography variant=\"h6\" gutterBottom>Resume previous games</Typography>\n                    </Grid>\n\n                    <Grid item xs={2} textAlign=\"right\">\n\n                        {/* clear previous games */}\n\n                        <IconButton\n                            title=\"Delete all games\" \n                            color=\"default\" \n                            disabled={games.length == 0} \n                            onClick={deleteAllGames}\n                        >\n                            <DeleteIcon />\n                        </IconButton>\n\n                    </Grid>\n\n                </>}\n\n                {/* unfinished games first */}\n\n                {\n                    (\n                        <>\n                            {unfinishedGames.map( game => {\n                                return (\n                                    <Grid key={game.id} item xs={12} textAlign=\"left\">\n                                        <GameCard\n                                            game={game}\n                                            resumeGame={resumeGame}\n                                            deleteGame={deleteGame}\n                                        />\n                                    </Grid>\n                                )\n                            })}                        \n                        </>\n                    )\n                }\n\n                {/* finished games then */}\n\n                {\n                    (\n                        <>\n                            {finishedGames.map( game => {\n                                return (\n                                    <Grid key={game.id} item xs={12} textAlign=\"left\">\n                                        <GameCard\n                                            game={game}\n                                            resumeGame={resumeGame}\n                                            deleteGame={deleteGame}\n                                        />\n                                    </Grid>\n                                )\n                            })}                        \n                        </>\n                    )\n                }\n            \n            </Grid>\n\n            {/* TODO admin */}\n\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                <AdminButton title=\"Themes\" onNext={toThemes}/>\n            </div>\n\n        </Page>\n    )\n}\n\nexport default HomePage","import React from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nimport { Game, GameStep } from '../data/Game'\nimport { toHomePage, toGamePage } from '../data/Navigate'\n\nimport GameHeader from './GameHeader'\nimport GameFooter from './GameFooter'\nimport { DEBUG } from '../data/Constants'\n\ninterface Props {\n    title?: string\n    step: GameStep\n    game: Game\n    updateGame: ( gameId: string, update: ( game: Game ) => Game ) => void\n    canPrevious?: () => boolean\n    onPrevious?: () => void\n    canNext?: () => boolean\n    onNext?: () => void\n    children: any\n}\n\nconst GamePage = ( props: Props ) => {\n    const { title, step, game, updateGame, canPrevious, onPrevious, canNext, onNext, children } = props\n\n    const navigate = useNavigate()\n    \n    React.useEffect( () => { \n        if ( game.step !== step ) {\n            console.log(`[effect] INVALID game step! ( current step: ${step}, game step: ${game.step} )>>> NAVIGATE`)\n            navigate( toGamePage( game ), { replace: true } )    \n        }\n    }, [ game ] )\n    \n    return (\n        <>\n            <div className={`game-page step-${step.toLowerCase()}`}>\n                <GameHeader title={title} step={step} game={game} updateGame={updateGame} canPrevious={canPrevious} onPrevious={onPrevious} canNext={canNext} onNext={onNext}/>\n                {children}\n                <GameFooter />\n            </div>\n            {DEBUG && <pre style={{ border: '1px solid #999', background: '#eee', padding: '20px' }}>{JSON.stringify(game,undefined,4)}</pre>}\n        </>\n    )\n}\n\nexport default GamePage","// //////////////////////////////////////////////////\n// import\n\nimport { Playlist } from \"../data/Playlist\"\n\nimport { JsonMusic, ToMusic } from \"./JsonMusic\"\n\n// //////////////////////////////////////////////////\n// adapter\n\nexport function ToPlaylist( json: JsonPlaylist ): Playlist {\n    return {\n        deezerId: json.deezerId,\n        name: json.name,\n        public: json.public,\n        imgUrl: json.imgUrl,\n        nbMusics: json.nbMusics,\n        user: json.user,\n        musics: json.musics ? json.musics.map( jsonMusic => ToMusic( jsonMusic ) ) : undefined,\n    }\n}\n\n// //////////////////////////////////////////////////\n// json\n\nexport interface JsonPlaylist {\n    deezerId?: number\n    name?: string\n    public?: boolean\n    imgUrl?: string\n    nbMusics?: number\n    user?: string\n    musics?: JsonMusic[]\n}\n","// //////////////////////////////////////////////////\n// import\n\nimport { Playlist } from \"../data/Playlist\"\n\nimport { JsonPlaylist, ToPlaylist } from \"./JsonPlaylist\"\n\n// //////////////////////////////////////////////////\n// search playlist\n\nexport async function SearchPlaylist( search: string, limit: number ): Promise<Playlist[]> {\n\n    let url = `${process.env.REACT_APP_API_ROOT_URI}/deezer/playlist?search=${search}&limit=${limit}`\n    console.log(`[client] requestURL = ${url}`)\n\n    const response = await fetch(url, {\n        method: 'GET',\n    })\n    if (!response.ok) {\n        const message = `An error has occured while searching playlist: ${response.status} ${response.body}`;\n        throw new Error(message);\n    }\n\n    const jsonResponse = await response.json() as JsonSearchPlaylistResponse;\n    if (!jsonResponse.success) {\n        const message = `Unable to search playlist: ${response.status} ${response.body}`;\n        throw new Error(message);\n    }\n\n    return jsonResponse.playlists.map( jsonPlaylist => ToPlaylist( jsonPlaylist ) )\n}\n\nexport interface JsonSearchPlaylistResponse {\n    success: boolean\n    playlists: JsonPlaylist[]\n}","import { Music } from './Music'\n\n// //////////////////////////////////////////////////\n// model\n\nexport interface Playlist {\n  deezerId?: number\n  name?: string\n  public?: boolean\n  imgUrl?: string \n  nbMusics?: number\n  user?: string\n  musics?: Music[]\n}\n\n// //////////////////////////////////////////////////\n// helper\n\nexport function getImgUrl( playlist: Playlist ): string | undefined {\n  if ( playlist && playlist.imgUrl ) {\n    return playlist.imgUrl\n  }\n  return undefined\n}\n","import React from 'react'\n\nimport { IconButton, Typography } from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport ForwardIcon from '@mui/icons-material/Forward';\nimport SearchIcon from '@mui/icons-material/Search';\nimport SearchOffIcon from '@mui/icons-material/SearchOff';\n\nimport { Box, Grid, Modal, Button, TextField } from '@mui/material';\nimport { DataGrid, GridColDef } from '@mui/x-data-grid';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport { SearchPlaylist } from '../client/SearchPlaylist';\n\nimport { Playlist, getImgUrl } from '../data/Playlist';\nimport { onUserEvent, onValueEvent } from '../data/Util';\n\ninterface Props {\n    open: boolean\n    closeModal: () => void\n    selectPlaylist: (playlist: Playlist) => void\n}\n\nconst SearchPlaylistModal = ( props: Props ) => {\n    const { open, closeModal, selectPlaylist } = props\n\n    const [ search, SetSearch ] = React.useState<string>(\"\")\n    const [ submit, SetSubmit ] = React.useState<boolean>(false)\n    const [ loading, SetLoading ] = React.useState<boolean>(false)\n    const [ playlists, SetPlaylists ] = React.useState<Playlist[]>()\n\n    const handleChange = onValueEvent((value) => {\n        console.log(`search: ${value}`)\n        SetSearch(value);\n    })\n\n    const onSubmit = onUserEvent(() => {\n        console.log(`submit: true`)\n        SetSubmit(true);\n    })\n\n    const onClear = onUserEvent(() => {\n        console.log(`onClear`)\n        SetSearch(\"\")\n        SetPlaylists(undefined)\n    })\n\n    const onClose = onUserEvent(() => {\n        console.log(`onClose`)\n        SetSearch(\"\")\n        SetPlaylists(undefined)\n        closeModal()\n    })\n\n    function onPlaylist( playlist: Playlist ) {\n        return onUserEvent(() => {\n            SetSearch(\"\")\n            SetPlaylists(undefined)\n            selectPlaylist(playlist)\n        })\n    }\n\n    React.useEffect(() => {\n        console.log(`submit: ${submit} / search: ${search}`)\n        if ( submit && search ) {\n            SetLoading(true)\n            SearchPlaylist(search,100)\n            .then((playlists) => {\n                SetPlaylists(playlists)\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n            .finally(() => {\n                SetLoading(false)\n                SetSubmit(false)\n            })\n        }\n    }, [submit,search])\n\n    const columns: GridColDef[] = [\n        {\n          field: 'imgUrl',\n          headerName: ' ',\n          width: 56,\n          cellClassName: 'music-button-cell',\n          renderCell: (params) => {\n              return <img\n                        src={getImgUrl(params.row)}\n                        width=\"56\" \n                        height=\"56\"\n                      />\n          },\n        },\n        {\n          field: 'name',\n          headerName: 'Title',\n          flex: 1,\n        },\n        {\n          field: 'nbMusics',\n          headerName: 'Nb musics',\n          flex: 1,\n        },\n        {\n          field: 'user',\n          headerName: 'User',\n          flex: 1,\n        },\n        {\n            field: 'actions',\n            headerName: ' ',\n            width: 50,\n            sortable: false,\n            disableColumnMenu: true,\n            renderCell: (params) => {\n                return <IconButton\n                            aria-label=\"Select\"\n                            onClick={onPlaylist(params.row)}\n                        >\n                            <ForwardIcon />\n                        </IconButton>\n            },\n        },\n      ];\n\n    \n    const style = {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: '90%',\n        maxWidth: '700px',\n        bgcolor: 'background.paper',\n        borderRadius: '10px',\n        boxShadow: 24,\n        p: 4,\n    };\n\n    return (\n        <Modal\n            open={open}\n            onClose={closeModal}\n            aria-labelledby=\"modal-modal-title\"\n            aria-describedby=\"modal-modal-description\"\n        > \n            <Box sx={style}>\n                <Grid container spacing={2} style={{ alignItems: 'center' }}>\n                    \n                    <Grid item xs={10} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-start', marginTop: '0px', marginBottom: '0px' }}>\n                    \n                            <TextField\n                                defaultValue={search}\n                                value={search}\n                                onChange={handleChange}\n                                id=\"outlined-name\"\n                                label=\"Search playlist\"\n                                margin=\"normal\"\n                                variant=\"outlined\"\n                                style={{minWidth:'200px'}}\n                                type=\"text\"\n                                size=\"small\"\n                                disabled={loading}\n                                />\n                            <IconButton aria-label=\"Search\" onClick={onSubmit} disabled={loading || !search}>\n                                <SearchIcon />\n                            </IconButton>\n                            <IconButton aria-label=\"Clear\" onClick={onClear} disabled={loading || !search}>\n                                <SearchOffIcon />\n                            </IconButton>\n                    </Grid>\n\n                    <Grid item xs={2} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-end' }}>\n                    \n                        <IconButton aria-label=\"Close\" onClick={onClose} size=\"small\">\n                            <CloseIcon />\n                        </IconButton>\n\n                    </Grid>\n\n                </Grid>\n\n                \n\n                {/* playlists */}\n                \n                <Grid item xs={12} container spacing={1} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}> \n                    <Box sx={{ height: 400, width: '100%' }}>\n\n                    {loading && <CircularProgress style={{ margin: '50px' }}/>}   \n                    {(!loading && playlists) && \n                        <DataGrid\n                            density='compact'\n                            rows={playlists}\n                            rowHeight={76}\n                            columns={columns}\n                            initialState={{\n                                pagination: {\n                                    paginationModel: {\n                                        pageSize: 100,\n                                    },\n                                },\n                            }}\n                            pageSizeOptions={[100]}\n                            disableRowSelectionOnClick\n                            getRowId={(row) => { return row.deezerId}}\n                            />}\n                    </Box>\n                </Grid>\n            </Box>\n\n        </Modal>\n    )\n}\n\nexport default SearchPlaylistModal","\n// //////////////////////////////////////////////////\n// theme labels\n\nexport interface ThemeLabels {\n    category?: Category\n    language?: Language\n}\n\nexport enum Language {\n    French = 'fr',\n    English = 'en',\n}\n\nexport function languageToLabel( language: Language ): string {\n    switch ( language ) {\n        case Language.French: return 'Français'\n        case Language.English: return 'English'\n    }\n}\n\nexport enum Category {\n    Top = 'top',\n    Genre = 'genre',\n    Decade = 'decade',\n    Year = 'year',\n}\n\nexport function categoryToLabel( category: Category ): string {\n    switch ( category ) {\n        case Category.Top: return 'Top'\n        case Category.Genre: return 'Genre'\n        case Category.Decade: return 'Decade'\n        case Category.Year: return 'Year'\n    }\n}\n\n// //////////////////////////////////////////////////\n// update\n\nexport type ThemeLabelsUpdater = ( labels: ThemeLabels ) => ThemeLabels\n\nexport function updateLanguage( language?: Language ): ThemeLabelsUpdater {\n    return ( labels: ThemeLabels ): ThemeLabels => {\n        return { ...labels, language: language }\n    }\n}\n\nexport function updateCategory( category?: Category ): ThemeLabelsUpdater {\n    return ( labels: ThemeLabels ): ThemeLabels => {\n        return { ...labels, category: category }\n    }\n}","import React from 'react'\n\nimport { makeStyles } from '@mui/styles'\nimport IconButton from '@mui/material/IconButton'\nimport CloseIcon from '@mui/icons-material/Close'\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport MusicNoteIcon from '@mui/icons-material/MusicNote'\nimport CalendarTodayIcon from '@mui/icons-material/CalendarToday'\nimport PersonIcon from '@mui/icons-material/Person'\nimport SkipNextIcon from '@mui/icons-material/SkipNext'\nimport { Chip, Stack } from '@mui/material';\n\nimport { Playlist } from '../data/Playlist'\nimport { onUserEvent, toDateTimeString } from '../data/Util'\n\nimport SearchPlaylistModal from './SearchPlaylistModal'\n\nconst useStyles = makeStyles( () => ( {\n    playlistCard: {\n        display: 'flex', \n        flexDirection: 'column', \n        alignItems: 'center', \n        justifyContent: 'space-between',\n        padding: '10px 20px',\n        borderRadius: '10px',\n        border: '2px solid #ddd',        \n        \"&:hover\": {\n            border: '2px solid gold',        \n            backgroundColor: '#ffd70029'\n        }\n    },\n    playlistLine: {\n        width: '100%', \n        display: 'flex', \n        alignItems: 'center', \n        justifyContent: 'space-between'\n    },\n    playlistItem: {\n        display: 'flex', \n        alignItems: 'center', \n        justifyContent: 'left'\n    },\n} ) );\n\ninterface Props {\n    playlist?: Playlist\n    onPlaylist: ( playlist?: Playlist ) => void\n}\n\nconst PlaylistCard = ( props: Props ) => {\n    const { playlist, onPlaylist } = props\n    const classes = useStyles()\n\n    // user events\n\n    const [ searchPlaylistModal, setSearchPlaylistModal ] = React.useState( false )\n    const openSearchPlaylistModal = () => {\n        setSearchPlaylistModal(true)\n    }\n    const closeSearchPlaylistModal = () => {\n        setSearchPlaylistModal(false)\n    }\n    const selectPlaylist = (playlist: Playlist) => {\n        console.log(\"select playlist\", playlist)\n        closeSearchPlaylistModal()\n        onPlaylist( playlist )\n    }\n\n    const clearPlaylist = onUserEvent( () => {\n        onPlaylist( undefined ) \n    } )\n\n    return (  \n        <>      \n            <div title=\"Resume Game\" className={`${classes.playlistCard} selectable`} onClick={openSearchPlaylistModal}>\n                <div className={classes.playlistLine}> \n                    \n                    {!playlist && <div className={classes.playlistItem}>Please select playlist</div>}\n                    {playlist && <>\n                        <div className={classes.playlistItem}><b>{playlist.name}</b></div>\n                        <IconButton title=\"\" onClick={clearPlaylist}>\n                            <CloseIcon />\n                        </IconButton>\n                    </>}\n\n                </div>\n                {playlist && <div style={{ marginLeft: '5%', width: '95%' }}>\n                    <div className={classes.playlistLine}> \n                        {playlist.imgUrl && <div className={classes.playlistItem}><img src={playlist.imgUrl}/></div>}\n                        <div className={classes.playlistItem}><PersonIcon style={{ marginRight: '10px' }} color=\"primary\"/> by {playlist.user}</div>\n                        <div className={classes.playlistItem}><MusicNoteIcon style={{ marginRight: '10px' }} color=\"primary\"/> {playlist.nbMusics} musics</div>\n                    </div>\n                </div>}\n            </div>\n\n            <SearchPlaylistModal\n                open={searchPlaylistModal}\n                closeModal={closeSearchPlaylistModal}\n                selectPlaylist={selectPlaylist}\n                />\n        </>\n    )\n}\n\nexport default PlaylistCard","// //////////////////////////////////////////////////\n// import\n\nimport { JsonMusic, ToMusic, FromMusic } from \"./JsonMusic\"\nimport { ThemeQuestion } from \"../data/ThemeQuestion\"\n\n// //////////////////////////////////////////////////\n// adapter\n\nexport function ToThemeQuestion( json: JsonThemeQuestion ): ThemeQuestion {\n    return {\n        id: json.id,\n        text: json.text,\n        hint: json.hint,\n        music: json.music ? ToMusic( json.music ): undefined,\n    }\n}\n\nexport function FromThemeQuestion( question: ThemeQuestion ): JsonThemeQuestion {\n    return {\n        id: question.id,\n        text: question.text,\n        hint: question.hint,\n        music: question.music ? FromMusic( question.music ) : undefined,\n    }\n}\n\nexport interface JsonThemeQuestion {\n    id: number\n    text: string\n    hint: string\n    music?: JsonMusic\n}","// //////////////////////////////////////////////////\n// import\n\nimport { Theme } from \"../data/Theme\"\nimport { ThemeLabels, Language, Category } from \"../data/ThemeLabels\"\n\nimport { JsonThemeQuestion, FromThemeQuestion, ToThemeQuestion } from \"./JsonThemeQuestion\"\n\n// //////////////////////////////////////////////////\n// adapter\n\nexport function ToTheme( json: JsonTheme ): Theme {\n    return {\n        id: json.id,\n        title: json.title,\n        imgUrl: json.imgUrl,\n        labels: ToThemeLabels( json.labels ),\n        questions: ( json.questions || [] ).map( jsonQuestion => ToThemeQuestion( jsonQuestion ) )\n    }\n}\n\nexport function ToThemeLabels( json?: JsonThemeLabels ): ThemeLabels {\n    if (!json) {\n        return {}\n    }\n    return {\n        language: json.language ? json.language as Language : undefined,\n        category: json.category ? json.category as Category : undefined,\n    }\n}\n\nexport function FromTheme( theme: Theme ): JsonTheme {\n    return {\n        id: theme.id,\n        title: theme.title,\n        imgUrl: theme.imgUrl,\n        labels: FromThemeLabels( theme.labels ),\n        questions: ( theme.questions || [] ).map( question => FromThemeQuestion( question ) )\n    }\n}\n\nexport function FromThemeLabels( labels: ThemeLabels ): JsonThemeLabels | undefined {\n    if ( !labels.language && !labels.category ) {\n        return undefined\n    }\n    return {\n        language: labels.language,\n        category: labels.category,\n    }\n}\n\nexport interface JsonTheme {\n    id: number\n    title: string\n    imgUrl: string\n    labels?: JsonThemeLabels\n    questions?: JsonThemeQuestion[]\n}\n\nexport interface JsonThemeLabels {\n    language?: string\n    category?: string\n}","// //////////////////////////////////////////////////\n// import\n\nimport { ThemeInfo } from \"../data/ThemeInfo\"\n\nimport { JsonThemeInfo, ToThemeInfo } from \"./JsonThemeInfo\"\n\n// //////////////////////////////////////////////////\n// themes\n\nexport async function FetchThemes(): Promise<ThemeInfo[]> {\n\n    let requestURL = `${process.env.REACT_APP_API_ROOT_URI}/theme`\n    console.log(`[api] requestURL = ${requestURL}`)\n\n    const response = await fetch(requestURL, {method: 'GET'})\n    if (!response.ok) {\n        const message = `An error has occured while fetching themes: ${response.status} ${response.body}`;\n        throw new Error(message);\n    }\n\n    const jsonResponse = await response.json() as JsonThemesResponse;\n    if (!jsonResponse.success) {\n        const message = `Unable to fetch themes: ${response.status} ${response.body}`;\n        throw new Error(message);\n    }\n    return jsonResponse.themes.map( jsonThemeInfo => ToThemeInfo( jsonThemeInfo ) );\n}\n\n// //////////////////////////////////////////////////\n// json\n\nexport interface JsonThemesResponse {\n    success: boolean\n    themes: JsonThemeInfo[]\n}","// //////////////////////////////////////////////////\n// import\n\nimport { ThemeInfo } from \"../data/ThemeInfo\"\n\nimport { JsonThemeLabels, ToThemeLabels } from \"./JsonTheme\"\n\n// //////////////////////////////////////////////////\n// adapter\n\nexport function ToThemeInfo( json: JsonThemeInfo ): ThemeInfo {\n    return {\n        id: json.id,\n        title: json.title,\n        imgUrl: json.imgUrl,\n        nbQuestion: json.nbQuestion,\n        labels: ToThemeLabels( json.labels ),\n    }\n}\n\n// //////////////////////////////////////////////////\n// json\n\nexport interface JsonThemeInfo {\n    id: number\n    title: string\n    imgUrl: string\n    nbQuestion: number\n    labels?: JsonThemeLabels\n}","import React from 'react'\nimport { useParams } from 'react-router'\nimport { useNavigate } from 'react-router-dom'\n\nimport MusicNoteIcon from '@mui/icons-material/MusicNote'\nimport PersonIcon from '@mui/icons-material/Person'\nimport QuizIcon from '@mui/icons-material/Quiz'\nimport Button from '@mui/material/Button'\nimport Grid from '@mui/material/Grid'\nimport Checkbox from '@mui/material/Checkbox'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport Box from '@mui/material/Box'\n\nimport GamePage from '../component/GamePage'\nimport PlaylistCard from '../component/PlaylistCard'\n\nimport { Settings } from '../data/Settings'\nimport { Game, GameStep, OnGameUpdate, selectGame, updateSettings, onSetUp, isLegacyGame, isStoreGame, isDeezerGame } from '../data/Game'\nimport { Playlist } from '../data/Playlist'\nimport { ThemeInfo } from '../data/ThemeInfo'\nimport { Language, Category, categoryToLabel, languageToLabel } from '../data/ThemeLabels'\nimport { toHomePage } from '../data/Navigate'\nimport { onUserEvent } from '../data/Util'\nimport { INCREMENT_NB_ANSWER_PER_QUESTION, INCREMENT_NB_PLAYER, INCREMENT_NB_QUESTION, MAX_NB_ANSWER_PER_QUESTION, MAX_NB_PLAYER, MAX_NB_QUESTION, MIN_NB_ANSWER_PER_QUESTION, MIN_NB_PLAYER, MIN_NB_QUESTION } from '../data/Constants'\nimport { FetchThemes } from '../client/FetchThemes'\nimport { NoiseControlOff } from '@mui/icons-material'\n\ninterface Props {\n    games: Game[]\n    updateGame: OnGameUpdate\n}\n\nconst SettingsPage = ( props: Props ) => {\n    const { games, updateGame } = props\n    \n    const [ themes, SetThemes ] = React.useState<ThemeInfo[]>()\n    const [ loading, SetLoading ] = React.useState<boolean>(false)\n\n    const navigate = useNavigate()\n\n    const { gameId } = useParams()\n    const game = selectGame( games, gameId )\n    \n    React.useEffect( () => { \n        if ( !game ) {\n            console.log(`[effect] MISSING game! >>> NAVIGATE home`)\n            navigate( toHomePage() )    \n        }\n    }, [ game ] )\n\n    if ( !game ) {\n        return null\n    }\n\n    const isLegacy = isLegacyGame( game )\n    const isStore = isStoreGame( game )\n    const isDeezer = isDeezerGame( game )\n\n\n    // current state\n\n    const settings = game.settings\n\n    const nbPlayer = settings.nbPlayer\n    const nbPlayerIncrement = INCREMENT_NB_PLAYER\n    const lessPlayerDisabled = nbPlayer <= MIN_NB_PLAYER\n    const morePlayerDisabled = nbPlayer >= MAX_NB_PLAYER\n\n    const nbQuestion = settings.nbQuestion\n    const nbQuestionIncrement = INCREMENT_NB_QUESTION\n    const lessQuestionDisabled = nbQuestion <= MIN_NB_QUESTION\n    const moreQuestionDisabled = nbQuestion >= MAX_NB_QUESTION\n\n    const nbAnswer = settings.nbAnswer\n    const nbAnswerIncrement = INCREMENT_NB_ANSWER_PER_QUESTION\n    const lessAnswerDisabled = nbAnswer <= MIN_NB_ANSWER_PER_QUESTION\n    const moreAnswerDisabled = nbAnswer >= MAX_NB_ANSWER_PER_QUESTION\n\n    // update helpers\n\n    const updateNbPlayer = ( nbPlayer: number ) => {\n        updateGame( game.id, updateSettings( ( settings: Settings ) => {\n            settings.nbPlayer = nbPlayer\n            return settings \n        } ) )\n    }\n\n    const updateNbQuestion = ( nbQuestion: number ) => {\n        updateGame( game.id, updateSettings( ( settings: Settings ) => {\n            settings.nbQuestion = nbQuestion\n            return settings \n        } ) )\n    }\n\n    const updateNbAnswer = ( nbAnswer: number ) => {\n        updateGame( game.id, updateSettings( ( settings: Settings ) => {\n            settings.nbAnswer = nbAnswer\n            return settings \n        } ) )\n    }\n\n    type ThemeIdsUpdater = ( themeIds: Set<number> ) => Set<number>\n\n    const updateThemeIds = ( updater: ThemeIdsUpdater ) => {\n        updateGame( game.id, updateSettings( ( settings: Settings ) => {\n            let themeIds = new Set<number>()\n            const allIds = selectIds(matchAll)\n            if ( settings.themeIds === undefined ) {\n                for ( const id of allIds ) {\n                    themeIds.add( id )                \n                }\n            } else {\n                for ( const id of settings.themeIds ) {\n                    themeIds.add( id )\n                }\n            }\n            themeIds = updater(themeIds)\n            if ( themeIds.size === allIds.length ) {\n                return { ...settings, themeIds: undefined }\n            }\n            return { ...settings, themeIds: Array.from(themeIds.values()) }\n        } ) )\n    }\n\n    const addThemeIds = (ids:number[]) => {\n        updateThemeIds(( themeIds: Set<number> ):Set<number> => {\n            for ( const id of ids ) {\n                themeIds.add( id )\n            }\n            return themeIds\n        })\n    }\n\n    const removeThemeIds = (ids:number[]) => {\n        updateThemeIds(( themeIds: Set<number> ):Set<number> => {\n            for ( const id of ids ) {\n                themeIds.delete( id )\n            }\n            return themeIds\n        })\n    }\n\n    const onPlaylist = ( playlist?: Playlist ) => {\n        updateGame( game.id, updateSettings( ( settings: Settings ) => {\n            settings.playlist = playlist\n            return settings \n        } ) )\n    }\n\n    const canNext = (): boolean => {\n        // validate settings\n        if ( !game ) {\n            return false\n        }\n        if ( !game.settings ) {\n            return false\n        }\n        if ( isDeezer ) {\n            if ( !game.settings.playlist ) {\n                return false\n            }\n            if ( !game.settings.playlist.deezerId ) {\n                return false\n            }\n        }\n        if ( isStore ) {\n            if ( game.settings.themeIds !== undefined && game.settings.themeIds.length === 0 ) {\n                return false\n            }\n        }\n        return true\n    }\n\n    const onNext = () => {\n        updateGame( game.id, onSetUp )\n    }\n\n    // themes\n\n    React.useEffect( () => { \n        if ( isStore ) {\n            SetLoading(true)\n            FetchThemes()\n                .then( themes => SetThemes( themes ) )\n                .catch( err => console.log( err ) )\n                .finally( () => SetLoading(false) )\n        }\n    }, [ isStore ] )\n\n    const categories = new Set<Category>();\n    const languages = new Set<Language>();\n\n    for ( const theme of themes || [] ) {\n        const category = theme.labels.category\n        if ( category !== undefined ) {\n            categories.add( category )\n        }\n        const language = theme.labels.language\n        if ( language !== undefined ) {\n            languages.add( language )\n        }\n    }\n\n    type ThemeFilter = ( theme: ThemeInfo ) => boolean\n\n    const matchAll: ThemeFilter = ( theme: ThemeInfo ): boolean => {\n        return true\n    }\n\n    const matchCategory = ( category?: Category ): ThemeFilter => {\n        return ( theme: ThemeInfo ) => {\n            if ( category === undefined ) {\n                return theme.labels.category === undefined\n            }\n            return theme.labels.category === category\n        }\n    }\n\n    const matchLanguage = ( language: Language ): ThemeFilter => {\n        return ( theme: ThemeInfo ) => {\n            return theme.labels.language !== undefined && theme.labels.language === language\n        }\n    }\n\n    type ThemePredicate = ( theme: ThemeInfo ) => boolean\n\n    const isSelected: ThemePredicate = ( theme: ThemeInfo ):boolean => {\n        return game.settings.themeIds === undefined || game.settings.themeIds.includes( theme.id )\n    }\n\n    const allOf = (filter: ThemeFilter, predicate:ThemePredicate):boolean => {\n        for ( const theme of themes || [] ) {\n            if ( !filter( theme ) ) {\n                continue\n            }\n            if ( !predicate( theme ) ) {\n                return false\n            }\n        }\n        return true\n    }\n    \n    const bothOf = (filter: ThemeFilter, predicate:ThemePredicate):boolean => {\n        let value: boolean | undefined\n        for ( const theme of themes || [] ) {\n            if ( !filter( theme ) ) {\n                continue\n            }\n            if ( value === undefined ) {\n                value = predicate( theme )\n                continue\n            }\n            if ( value !== predicate( theme ) ) {\n                return true\n            }\n        }\n        return false\n    }\n    \n    // const noneOf = (filter: ThemeFilter, predicate:ThemePredicate):boolean => {\n    //     for ( const theme of themes || [] ) {\n    //         if ( !filter( theme ) ) {\n    //             continue\n    //         }\n    //         if ( predicate( theme ) ) {\n    //             return false\n    //         }\n    //     }\n    //     return true\n    // }\n\n    const selectIds = (filter:ThemeFilter): number[] => {\n        const ids: number[] = []\n        for ( const theme of themes || [] ) {\n            if ( filter( theme ) ) {\n                ids.push( theme.id )\n            }\n        }\n        return ids\n    }\n\n    const toggleAll = () => {\n        toggleFilter(matchAll)\n    }\n\n    const toggleCategory = ( category: Category ) => {\n        toggleFilter(matchCategory( category ))\n    }\n\n    const toggleLanguage = ( language: Language ) => {\n        toggleFilter(matchLanguage( language ))\n    }\n    \n    const toggleFilter = ( filter: ThemeFilter ) => {\n        const ids = selectIds( filter )\n        if ( allOf( filter, isSelected ) ) {\n            removeThemeIds( ids )\n        } else {\n            addThemeIds( ids )\n        }\n    }\n\n    const toggleTheme = ( theme: ThemeInfo ) => {\n        if ( isSelected( theme ) ) {\n            removeThemeIds( [ theme.id ] )\n        } else {\n            addThemeIds( [ theme.id ] )\n        }\n    }\n\n    // user events\n\n    const lessPlayer = lessPlayerDisabled ? undefined : onUserEvent( () => updateNbPlayer( game.settings.nbPlayer - nbPlayerIncrement ) )\n    const morePlayer = morePlayerDisabled ? undefined : onUserEvent( () => updateNbPlayer( game.settings.nbPlayer + nbPlayerIncrement ) )\n\n    const lessQuestion = lessQuestionDisabled ? undefined : onUserEvent( () => updateNbQuestion( game.settings.nbQuestion - nbQuestionIncrement ) )\n    const moreQuestion = moreQuestionDisabled ? undefined : onUserEvent( () => updateNbQuestion( game.settings.nbQuestion + nbQuestionIncrement ) )\n\n    const lessAnswer = lessAnswerDisabled ? undefined : onUserEvent( () => updateNbAnswer( game.settings.nbAnswer - nbAnswerIncrement ) )\n    const moreAnswer = moreAnswerDisabled ? undefined : onUserEvent( () => updateNbAnswer( game.settings.nbAnswer + nbAnswerIncrement ) )\n\n    const playlist = game.settings.playlist\n\n    return (\n        <GamePage step={GameStep.SETTINGS} game={game} updateGame={updateGame} canNext={canNext} onNext={onNext}>\n            \n            <Grid container spacing={2}>\n\n                {/* nb players */}\n\n                <Grid \n                    item xs={4} \n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'right' }}\n                > \n                    <Button \n                        style={{ marginRight: '40px' }} \n                        size=\"small\" \n                        variant=\"contained\" \n                        disabled={lessPlayerDisabled} \n                        onClick={lessPlayer}\n                    >\n                        - {nbPlayerIncrement}\n                    </Button>\n                </Grid>\n\n                <Grid \n                    item xs={4} \n                    textAlign=\"center\" \n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}\n                > \n                    <PersonIcon style={{ marginRight: '10px' }} color=\"primary\"/> \n                    {nbPlayer} {nbPlayer > 1 ? 'players' : 'player'}\n                </Grid>\n\n                <Grid \n                    item xs={4} \n                    textAlign=\"center\" \n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'left' }}\n                > \n                    <Button \n                        style={{ marginLeft: '40px' }} \n                        size=\"small\" \n                        variant=\"contained\" \n                        disabled={morePlayerDisabled} \n                        onClick={morePlayer}\n                    >\n                        + {nbPlayerIncrement}\n                    </Button>\n                </Grid>\n\n                {/* nb questions */}\n\n                <Grid \n                    item xs={4} \n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'right' }}\n                >\n                    <Button \n                        style={{ marginRight: '40px' }} \n                        size=\"small\" \n                        variant=\"contained\" \n                        disabled={lessQuestionDisabled} \n                        onClick={lessQuestion}\n                    >\n                        - {nbQuestionIncrement}\n                    </Button>\n                </Grid>\n                \n                <Grid \n                    item xs={4} \n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}\n                > \n                    <MusicNoteIcon \n                        style={{ marginRight: '10px' }} \n                        color=\"primary\"\n                    /> \n                    {nbQuestion} questions\n                </Grid>\n                \n                <Grid \n                    item xs={4} \n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'left' }}\n                > \n                    <Button \n                        style={{ marginLeft: '40px' }} \n                        size=\"small\" \n                        variant=\"contained\" \n                        disabled={moreQuestionDisabled} \n                        onClick={moreQuestion}\n                    >\n                        + {nbQuestionIncrement}\n                    </Button>\n                </Grid>\n\n                {/* nb answer per question */}\n\n                <Grid \n                    item xs={4} \n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'right' }}\n                >\n                    <Button \n                        style={{ marginRight: '40px' }} \n                        size=\"small\" \n                        variant=\"contained\" \n                        disabled={lessAnswerDisabled} \n                        onClick={lessAnswer}\n                    >\n                        - {nbAnswerIncrement}\n                    </Button>\n                </Grid>\n\n                <Grid \n                    item xs={4} \n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}\n                > \n                    <QuizIcon \n                        style={{ marginRight: '10px' }} \n                        color=\"primary\"\n                    /> \n                    {nbAnswer} answers / question\n                </Grid>\n\n                <Grid \n                    item xs={4} \n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'left' }}\n                > \n                    <Button \n                        style={{ marginLeft: '40px' }} \n                        size=\"small\" \n                        variant=\"contained\" \n                        disabled={moreAnswerDisabled} \n                        onClick={moreAnswer}\n                    >\n                        + {nbAnswerIncrement}\n                    </Button>\n                </Grid>\n\n            </Grid>\n\n            {/* store themes */}\n\n            {isStore && themes &&\n                <Grid container spacing={0}>\n                    <Grid item xs={4} />\n                    <Grid item xs={8} style={{ display: 'flex', alignItems: 'center', justifyContent: 'left' }}> \n                        \n                        <FormControlLabel\n                            label=\"All themes\"\n                            control={\n                                <Checkbox\n                                    checked={allOf(matchAll, isSelected)}\n                                    indeterminate={bothOf(matchAll, isSelected)}\n                                    onChange={toggleAll}\n                                />\n                            }\n                        />\n\n                    </Grid>\n\n                    {\n                        Array.from( categories.values() ).map( category => {\n                            return (\n                                <>\n                                    <Grid item xs={5} />\n                                    <Grid item xs={7} style={{ display: 'flex', alignItems: 'center', justifyContent: 'left' }}> \n\n                                        <FormControlLabel\n                                            key={category}\n                                            label={categoryToLabel(category)}\n                                            control={\n                                                <Checkbox\n                                                    checked={allOf(matchCategory(category), isSelected)}\n                                                    indeterminate={bothOf(matchCategory(category), isSelected)}\n                                                    onChange={() => toggleCategory(category)}\n                                                />\n                                            }\n                                        />\n                                    \n                                    </Grid>\n\n                                    {\n                                        themes.filter(matchCategory(category)).map( theme => {\n                                            return (\n                                                <>\n                                                    <Grid item xs={6} />\n                                                    <Grid item xs={6} style={{ display: 'flex', alignItems: 'center', justifyContent: 'left' }}> \n\n                                                        <FormControlLabel\n                                                            key={theme.id}\n                                                            label={theme.title}\n                                                            control={\n                                                                <Checkbox\n                                                                    checked={isSelected(theme)}\n                                                                    onChange={() => toggleTheme(theme)}\n                                                                />\n                                                            }\n                                                        />\n                                                    </Grid>\n                                                </>\n                                            )\n                                        })\n                                    }\n                                </>\n                            )\n                        })\n                    }\n\n                </Grid> \n            }\n\n\n            {/* deezer playlist */}\n\n            {isDeezer && \n            <Grid container spacing={2}>\n                <Grid \n                    item xs={12} \n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', marginTop: '20px' }}\n                >\n                    <PlaylistCard playlist={playlist} onPlaylist={onPlaylist}/>\n                </Grid>\n            </Grid>}\n\n        </GamePage>\n    )\n}\n\nexport default SettingsPage","import React from 'react'\nimport { AvatarId } from '../data/Avatar'\n\nimport { PlayerId } from '../data/Player'\n\ninterface Props {\n    id: AvatarId\n    size: AvatarSize\n    disabled?: boolean\n    selected?: boolean\n    onClick?: () => void\n}\n\nexport enum AvatarSize {\n    XS = 'XS',\n    S = 'S',\n    M = 'M',\n    L = 'L',\n    XL = 'XL',\n}\n\nconst PlayerAvatar = ( props: Props ) => {\n    const { id, size, disabled, selected, onClick } = props\n\n    let avatarClassNames = `avatar`\n    avatarClassNames = `${avatarClassNames} avatar-${id}`\n    avatarClassNames = `${avatarClassNames} avatar-${size}`    \n    if ( disabled ) {\n        avatarClassNames = `${avatarClassNames} disabled`\n    }\n    if ( selected ) {\n        avatarClassNames = `${avatarClassNames} selected`\n    }\n    if ( onClick ) {\n        avatarClassNames = `${avatarClassNames} selectable`\n    }\n\n    return (\n        <div className={avatarClassNames} onClick={onClick}></div>\n    )\n}\n\nexport default PlayerAvatar\n","import React from 'react'\nimport { CardColor } from '../../data/Card'\n\ninterface Props {\n    color: CardColor \n    onClick?: () => void \n}\n\nconst ClubIcon = ( props: Props ) => {\n    const { color, onClick } = props\n\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" className={`icon color-${color.toLowerCase()}`} onClick={onClick}>\n            <path d=\"M2 12C2 16 6 17 9 14 8 18 8 18 5 20H15C12 18 12 18 11 14 15 17 18 15 18 12 18 7 14 7 12 9 14 7 15 2 10 2 5 2 6 7 8 9 6 7 2 7 2 12z\"/>\n        </svg>\n    )\n}\n\nexport default ClubIcon\n","import React from 'react'\nimport { CardColor } from '../../data/Card'\n\ninterface Props {\n    color: CardColor  \n    onClick?: () => void \n}\n\nconst DiamondIcon = ( props: Props ) => {\n    const { color, onClick } = props\n\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" className={`icon color-${color.toLowerCase()}`} onClick={onClick}>\n            <path d=\"M10 20C13 15 15 13 19 10 15 7 13 5 10 0 7 5 5 7 1 10 5 13 7 15 10 20z\"/>\n        </svg>\n    )\n}\n\nexport default DiamondIcon\n","import React from 'react'\nimport { CardColor } from '../../data/Card'\n\ninterface Props {\n    color: CardColor  \n    onClick?: () => void \n}\n\nconst CircleIcon = ( props: Props ) => {\n    const { color, onClick } = props\n\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" className={`icon color-${color.toLowerCase()}`} onClick={onClick}>\n            <path d=\"M10 19C15 19 19 15 19 10 19 5 15 1 10 1 5 1 1 5 .991 9.99 1 15 5 19 10 19z\"/>\n        </svg>\n    )\n}\n\nexport default CircleIcon\n","import React from 'react'\nimport { CardColor } from '../../data/Card'\n\ninterface Props {\n    color: CardColor \n    onClick?: () => void \n}\n\nconst HeartIcon = ( props: Props ) => {\n    const { color, onClick } = props\n\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" className={`icon color-${color.toLowerCase()}`} onClick={onClick}>\n            <path d=\"M10 20C13 15 19 12 19 8 19 2 12 0 10 6 8 0 1 2 1 8 1 12 7 15 10 20z\"/>\n        </svg>\n    )\n}\n\nexport default HeartIcon\n","import React from 'react'\nimport { CardColor } from '../../data/Card'\n\ninterface Props {\n    color: CardColor \n    onClick?: () => void \n}\n\nconst SpadeIcon = ( props: Props ) => {\n    const { color, onClick } = props\n\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" className={`icon color-${color.toLowerCase()}`} onClick={onClick}>\n            <path d=\"M2 11C2 15 6 17 9 14 8 18 8 18 5 20H15C12 18 12 18 11 14 14 17 18 15 18 11 18 7 12 7 10.023.039 8 7 2 7 2 11z\"/>\n        </svg>\n    )\n}\n\nexport default SpadeIcon\n","import React from 'react'\nimport { CardColor } from '../../data/Card'\n\ninterface Props {\n    color: CardColor \n    onClick?: () => void \n}\n\nconst SquareIcon = ( props: Props ) => {\n    const { color, onClick } = props\n\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" className={`icon color-${color.toLowerCase()}`} onClick={onClick}>\n            <path d=\"M10 19 19 19 19 1 1 1 1 19z\"/>\n        </svg>\n    )\n}\n\nexport default SquareIcon\n","import React from 'react'\nimport { CardColor } from '../../data/Card'\n\ninterface Props {\n    color: CardColor \n    onClick?: () => void \n}\n\nconst StarIcon = ( props: Props ) => {\n    const { color, onClick } = props\n\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" className={`icon color-${color.toLowerCase()}`} onClick={onClick}>\n            <path d=\"M9.99.991 12.751 7.04 17.992 7.003 13.953 11.399 15.588 18.03 10.027 14.705 4.316 18.011 5.97 11.493 1.931 7.003 7.472 7.022 10.008.991z\"/>\n        </svg>\n    )\n}\n\nexport default StarIcon\n","import React from 'react'\nimport { CardColor } from '../../data/Card'\n\ninterface Props {\n    color: CardColor \n    onClick?: () => void \n}\n\nconst TriangleIcon = ( props: Props ) => {\n    const { color, onClick } = props\n\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" className={`icon color-${color.toLowerCase()}`} onClick={onClick}>\n            <path d=\"M1 19 19 19 10 1 1 19z\"/>\n        </svg>\n    )\n}\n\nexport default TriangleIcon\n","import React from 'react'\nimport { CardColor } from '../../data/Card'\n\ninterface Props {\n    color: CardColor \n    onClick?: () => void \n}\n\nconst CrossIcon = ( props: Props ) => {\n    const { color, onClick } = props\n\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" className={`icon color-${color.toLowerCase()}`} onClick={onClick}>\n            <path d=\"M1 16 4 19 10 13 16 19 19 16 13 10 19 4 16 1 10 7 4 1 1 4 7 10z\"/>\n        </svg>\n    )\n}\n\nexport default CrossIcon\n","import React from 'react'\nimport Typography from '@mui/material/Typography';\n\nimport { Card, CardColor, CardSymbol } from '../data/Card'\nimport ClubIcon from './icon/ClubIcon';\nimport DiamondIcon from './icon/DiamondIcon';\nimport CircleIcon from './icon/CircleIcon';\nimport HeartIcon from './icon/HeartIcon';\nimport SpadeIcon from './icon/SpadeIcon';\nimport SquareIcon from './icon/SquareIcon';\nimport StarIcon from './icon/StarIcon';\nimport TriangleIcon from './icon/TriangleIcon';\nimport CrossIcon from './icon/CrossIcon';\n\ninterface Props {\n    symbol: CardSymbol\n    color: CardColor\n    onClick?: () => void\n}\n\nconst PlayingCardIcon = ( props: Props ) => {\n\n    const { symbol, color, onClick } = props\n\n    switch ( symbol ) {\n        case CardSymbol.CLUB:\n            return <ClubIcon color={color} onClick={onClick} />\n        case CardSymbol.CROSS:\n            return <CrossIcon color={color} onClick={onClick} />\n        case CardSymbol.DIAMOND:\n            return <DiamondIcon color={color} onClick={onClick} />\n        case CardSymbol.CIRCLE:\n            return <CircleIcon color={color} onClick={onClick} />\n        case CardSymbol.HEART:\n            return <HeartIcon color={color} onClick={onClick} />\n        case CardSymbol.SPADE:\n            return <SpadeIcon color={color} onClick={onClick} />\n        case CardSymbol.SQUARE:\n            return <SquareIcon color={color} onClick={onClick} />\n        case CardSymbol.STAR:\n            return <StarIcon color={color} onClick={onClick} />\n        case CardSymbol.TRIANGLE:\n            return <TriangleIcon color={color} onClick={onClick} />\n        default:\n            return null\n    }\n}\n\nexport default PlayingCardIcon","import React from 'react'\n\nimport IconButton from '@mui/material/IconButton';\nimport AddIcon from '@mui/icons-material/Add';\nimport CheckIcon from '@mui/icons-material/Check';\nimport CloseIcon from '@mui/icons-material/Close';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\n\nimport { Card, CardSize } from '../data/Card'\nimport PlayingCardIcon from './PlayingCardIcon';\n\ninterface Props {\n    card?: Card\n    cardSize?: CardSize\n    selected?: boolean\n    disabled?: boolean\n    onClick?: () => void    \n}\n\nconst PlayingCard = ( props: Props ) => {\n    const { card, cardSize, selected, disabled, onClick } = props\n\n    if ( card == undefined ) {\n        return (\n            <div className={`card size-${cardSize} card--empty`} onClick={onClick}>\n                <div className=\"card--header\">\n                    <div className=\"card--symbol\"> </div>                \n                </div>\n                <div className=\"card--content\">\n                    <div className=\"card--value\"> </div>\n                    <div className=\"card--symbol\"> </div>\n                </div>\n                <div className=\"card--footer\">\n                    <div className=\"card--symbol\"> </div>\n                </div>\n            </div>\n        )\n    }\n\n    let cardClassNames = `card`\n    if ( card.size ) {\n        cardClassNames = `${cardClassNames} size-${card.size}`\n    }\n    if ( disabled ) {\n        cardClassNames = `${cardClassNames} disabled`\n    }\n    if ( selected ) {\n        cardClassNames = `${cardClassNames} selected`\n    }\n    if ( onClick ) {\n        cardClassNames = `${cardClassNames} selectable`\n    }\n\n    return (\n        <div className={cardClassNames} onClick={onClick}>\n            <div className=\"card--header\">\n                <div className=\"card--symbol\">\n                    <PlayingCardIcon symbol={card.symbol} color={card.color}/>\n                </div>                \n            </div>\n            <div className=\"card--content\">\n                <div className=\"card--value\">\n                    {card.number ? `${card.number % 10}` : card.value}\n                </div>\n                <div className=\"card--symbol\">\n                    <PlayingCardIcon symbol={card.symbol} color={card.color}/>\n                </div>\n            </div>\n            <div className=\"card--footer\">\n                <div className=\"card--symbol\">\n                    <PlayingCardIcon symbol={card.symbol} color={card.color}/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default PlayingCard","import React from 'react'\n\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport { Card as DataCard, CardColor, CardSize, CardSymbol, DefaultCards } from '../data/Card'\nimport PlayingCardIcon from './PlayingCardIcon';\nimport { Box, Grid, Modal, Typography } from '@mui/material';\nimport PlayingCard from './PlayingCard';\n\ninterface Props {\n    open: boolean\n    closeModal: () => void\n    card: DataCard\n    onSymbolChange: (symbol: CardSymbol) => void\n    onColorChange: (color: CardColor) => void\n    onCardChange: (card: DataCard) => void\n}\n\nconst PlayingCardModal = ( props: Props ) => {\n    const { open, closeModal, card, onSymbolChange, onColorChange, onCardChange } = props\n    \n    const style = {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: 500,\n        bgcolor: 'background.paper',\n        borderRadius: '10px',\n        boxShadow: 24,\n        p: 4,\n    };\n\n    return (\n        <Modal\n            open={open}\n            onClose={closeModal}\n            aria-labelledby=\"modal-modal-title\"\n            aria-describedby=\"modal-modal-description\"\n        > \n            <Box sx={style}>\n                <Grid container spacing={2} style={{ alignItems: 'flex-end' }}>\n                    \n                    <Grid item xs={12} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-end' }}>\n                    \n                        <IconButton aria-label=\"Close\" onClick={closeModal}>\n                            <CloseIcon />\n                        </IconButton>\n\n                    </Grid>\n\n                </Grid>\n\n                <Grid container spacing={2} style={{ alignItems: 'flex-end' }}>\n\n                    <Grid item xs={4} container spacing={2} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n\n                        <Grid item xs={12} textAlign=\"center\">\n                            <Typography>\n                                <b>Colors</b>\n                            </Typography> \n                        </Grid>\n\n                        {\n                            Object.keys(CardColor).filter( key => key as CardColor != CardColor.GRAY ).map( key => { \n                                const newColor = key as CardColor\n                                return (\n                                    <Grid item key={newColor} xs={4}>\n                                        <div \n                                            style={{ width: '75%', display: 'flex', alignItems: 'center', justifyContent: 'center' }} \n                                            className={card.color == newColor ? 'selected' : 'selectable'} \n                                            onClick={() => onColorChange(newColor)}\n                                        >\n                                            <PlayingCardIcon \n                                                symbol={CardSymbol.CIRCLE}\n                                                color={newColor}\n                                            />\n                                        </div> \n                                    </Grid>\n                                )\n                            } )\n                        }\n\n                    </Grid>\n\n                    <Grid item xs={4} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', marginTop: '5px', marginBottom: '10px' }}>\n                    \n                        <PlayingCard card={{\n                                ...card,\n                                size: CardSize.XL,\n                            }} \n                        />\n\n                    </Grid>\n\n                    {/* symbols */}\n                    \n                    <Grid item xs={4} container spacing={2} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}> \n\n                        <Grid item xs={12} textAlign=\"center\">\n                            <Typography>\n                                <b>Symbols</b>\n                            </Typography> \n                        </Grid>\n\n                        {\n                            Object.keys(CardSymbol).map( key => { \n                                const newSymbol = key as CardSymbol\n                                return (\n                                    <Grid key={newSymbol} item xs={4}>\n                                        <div \n                                            style={{ width: '75%', display: 'flex', alignItems: 'center', justifyContent: 'center' }}\n                                            className={card.symbol == newSymbol ? 'selected' : 'selectable'} \n                                            onClick={() => onSymbolChange(newSymbol)}\n                                        >\n                                            <PlayingCardIcon \n                                                symbol={newSymbol}\n                                                color={CardColor.GRAY}\n                                            />\n                                        </div>                                                \n                                    </Grid>\n                                )\n                            } )\n                        }\n\n                    </Grid>\n\n                    {/* symbols */}\n\n                    <Grid item xs={12} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                        <Typography>\n                            <b>Pre-defined</b>\n                        </Typography>                                \n                    </Grid>\n\n                    <Grid item xs={12} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}> \n\n                        {\n                            DefaultCards.map( defaultCard => {\n                                return (\n                                    <PlayingCard card={{\n                                            ...defaultCard,\n                                            number: card.number,\n                                            value: card.value,\n                                            size: CardSize.XS,\n                                        }}\n                                        onClick={() => onCardChange(defaultCard)} \n                                    />\n                                )\n                            } )\n                        }\n\n                    </Grid>\n\n                </Grid>\n            </Box>\n\n        </Modal>\n    )\n}\n\nexport default PlayingCardModal","import { MAX_NB_AVATAR } from \"./Constants\"\nimport { range } from \"./Util\"\n\nexport type AvatarId = number\n\nexport const ALL_AVATAR_IDS = range( MAX_NB_AVATAR ).map( i => i + 1 )","import React from 'react'\n\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport { Box, Grid, Modal, Typography } from '@mui/material';\nimport { ALL_AVATAR_IDS, AvatarId } from '../data/Avatar';\nimport PlayerAvatar, { AvatarSize } from './PlayerAvatar';\n\ninterface Props {\n    open: boolean\n    closeModal: () => void\n    avatarId: AvatarId\n    onAvatarChange: (avatarId: AvatarId) => void\n}\n\nconst AvatarModal = ( props: Props ) => {\n    const { open, closeModal, avatarId, onAvatarChange } = props\n    \n    const style = {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: 500,\n        bgcolor: 'background.paper',\n        borderRadius: '10px',\n        boxShadow: 24,\n        p: 4,\n    };\n\n    return (\n        <Modal\n            open={open}\n            onClose={closeModal}\n            aria-labelledby=\"modal-modal-title\"\n            aria-describedby=\"modal-modal-description\"\n        > \n            <Box sx={style}>\n                <Grid container spacing={2} style={{ alignItems: 'center' }}>\n                    \n                    <Grid item xs={12} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-end' }}>\n                    \n                        <IconButton aria-label=\"Close\" onClick={closeModal}>\n                            <CloseIcon />\n                        </IconButton>\n\n                    </Grid>\n\n                    <Grid item xs={4} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', marginTop: '5px', marginBottom: '10px' }}>\n                    \n                        <PlayerAvatar id={avatarId} size={AvatarSize.XL} />\n\n                    </Grid>\n\n                    {/* symbols */}\n                    \n                    <Grid item xs={8} container spacing={1} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}> \n\n                        <Grid item xs={12} textAlign=\"center\">\n                            <Typography>\n                                <b>Avatars</b>\n                            </Typography> \n                        </Grid>\n\n                        {\n                            ALL_AVATAR_IDS.map( newAvatarId => { \n                                return (\n                                    <Grid key={newAvatarId} item xs={3}>\n                                        <PlayerAvatar \n                                            id={newAvatarId} \n                                            size={AvatarSize.M}\n                                            selected={avatarId == newAvatarId} \n                                            onClick={() => onAvatarChange(newAvatarId)}\n                                        />\n                                    </Grid>\n                                )\n                            } )\n                        }\n\n                    </Grid>\n\n                </Grid>\n            </Box>\n\n        </Modal>\n    )\n}\n\nexport default AvatarModal","import React from 'react'\n\nimport Box from '@mui/material/Box'\nimport Card from '@mui/material/Card'\nimport CardContent from '@mui/material/CardContent'\nimport Grid from '@mui/material/Grid'\nimport TextField from '@mui/material/TextField'\nimport Modal from '@mui/material/Modal'\nimport IconButton from '@mui/material/IconButton'\nimport CloseIcon from '@mui/icons-material/Close'\n\nimport { Game, OnGameUpdate, updatePlayer } from '../data/Game'\nimport { Card as DataCard, CardSymbol, CardColor, CardSize, DefaultCards } from '../data/Card'\nimport { Player } from '../data/Player'\n\nimport PlayingCard from './PlayingCard'\nimport PlayingCardIcon from './PlayingCardIcon'\nimport PlayerAvatar, { AvatarSize } from './PlayerAvatar';\nimport { Typography } from '@mui/material'\nimport PlayingCardModal from './PlayingCardModal'\nimport AvatarModal from './AvatarModal'\nimport { AvatarId } from '../data/Avatar'\n\ninterface Props {\n    player: Player \n    avatarSize?: AvatarSize   \n    cardSize?: CardSize\n    game?: Game\n    updateGame?: OnGameUpdate\n}\n\nconst PlayerCard = ( props: Props ) => {\n    const { player, avatarSize, cardSize, game, updateGame } = props\n\n    const [ name, setName ] = React.useState( player.name )\n    const editMode = game !== undefined && updateGame !== undefined\n    \n    const [ playingCardModal, setPlayingCardModal ] = React.useState( false )\n    const openPlayingCardModal = () => setPlayingCardModal(true)\n    const closePlayingCardModal = () => setPlayingCardModal(false)\n    \n    const [ avatarModal, setAvatarModal ] = React.useState( false )\n    const openAvatarModal = () => setAvatarModal(true)\n    const closeAvatarModal = () => setAvatarModal(false)\n\n    if ( !player.number ) {\n        return null\n    }\n\n    //\n    // update helpers\n    //\n\n    const updatePlayerName = ( name: string ) => {\n        if ( editMode ) {\n            updateGame( game.id, updatePlayer( player.id, ( player: Player ): Player => {\n                player.name = name\n                return player\n            } ) )\n        }\n    }\n\n    const updatePlayerAvatar = ( avatarId: AvatarId ) => {\n        if ( editMode ) {\n            updateGame( game.id, updatePlayer( player.id, ( player: Player ): Player => {\n                player.avatarId = avatarId\n                return player\n            } ) )\n        }\n    }\n    \n    const updatePlayerCard = ( card: DataCard ) => {\n        if ( editMode ) {\n            updateGame( game.id, updatePlayer( player.id, ( player: Player ): Player => {\n                player.card = card\n                return player\n            } ) )\n        }\n    }\n\n    //\n    // user events\n    //\n\n    const onNameChange = ( e: any ) => {\n        setName( e.target.value )\n    }\n\n    const onNameBlur = () => {\n        updatePlayerName( name )\n    }\n\n    const onSymbolChange = (symbol: CardSymbol) => {\n        updatePlayerCard( {\n            ...player.card,\n            symbol: symbol\n        } )\n    }\n\n    const onColorChange = (color: CardColor) => {\n        updatePlayerCard( {\n            ...player.card,\n            color: color\n        } )\n    }\n\n    const onCardChange = (card: DataCard) => {\n        updatePlayerCard( {\n            ...player.card,\n            color: card.color,\n            symbol: card.symbol\n        } )\n    }\n\n    const onAvatarChange = (avatarId: AvatarId) => {\n        updatePlayerAvatar( avatarId )\n    }\n\n    return (\n        <Card variant=\"outlined\">\n            <CardContent>\n\n            <Grid container spacing={2}>\n\n                <Grid item xs={12} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}> \n                    <Box sx={{ display: 'flex', alignItems: 'flex-end' }}>\n                        <PlayerAvatar \n                            id={player.avatarId} \n                            size={avatarSize || AvatarSize.L}\n                            onClick={editMode ? openAvatarModal : undefined}\n                        />\n                        { editMode && <TextField id=\"standard-basic\" style={{ marginLeft: '10px' }} label=\"Name\" variant=\"standard\" value={name} onChange={onNameChange} onBlur={onNameBlur} /> }\n                        { !editMode && (\n                            <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-start', marginLeft: '10px', marginRight: '10px' }}>\n                                <Typography><b>Name:</b> {name}</Typography> \n                                <Typography><b>Score:</b> {player.stats.score}</Typography> \n                            </div>                            \n                        ) }\n                    </Box> \n                    <PlayingCard card={{\n                            ...player.card,\n                            number: player.number,\n                            size: cardSize || CardSize.S,\n                        }} \n                        onClick={editMode ? openPlayingCardModal : undefined} \n                    />                   \n                </Grid>\n\n                { editMode && (\n                    <PlayingCardModal\n                        open={playingCardModal}\n                        closeModal={closePlayingCardModal}\n                        card={{\n                            ...player.card,\n                            value: `${player.number % 10}`,\n                        }}\n                        onSymbolChange={onSymbolChange}\n                        onColorChange={onColorChange}\n                        onCardChange={onCardChange}\n                    />\n                ) }\n\n                { editMode && (\n                    <AvatarModal\n                        open={avatarModal}\n                        closeModal={closeAvatarModal}\n                        avatarId={player.avatarId}\n                        onAvatarChange={onAvatarChange}\n                    />\n                ) }\n\n            </Grid>\n\n            </CardContent>\n        </Card>\n    )\n}\n\nexport default PlayerCard","import React from 'react'\nimport { useParams } from 'react-router'\nimport { useNavigate } from 'react-router-dom'\n\nimport Grid from '@mui/material/Grid'\n\nimport GamePage from '../component/GamePage'\nimport PlayerCard from '../component/PlayerCard'\n\nimport { Game, GameStep, OnGameUpdate, selectGame, OnStep } from '../data/Game'\nimport { toHomePage } from '../data/Navigate'\n\ninterface Props {\n    games: Game[]\n    updateGame: OnGameUpdate\n}\n\nconst PlayersPage = ( props: Props ) => {\n    const { games, updateGame } = props\n\n    const navigate = useNavigate()\n\n    const { gameId } = useParams()\n    const game = selectGame( games, gameId )\n    \n    React.useEffect( () => { \n        if ( !game ) {\n            console.log(`[effect] MISSING game! >>> NAVIGATE home`)\n            navigate( toHomePage() )    \n        }\n    }, [ game ] )\n    \n    if ( !game || !game.players ) {\n        return null\n    }\n    \n    // update helpers\n\n    const onNext = () => {    \n        updateGame( game.id, OnStep( GameStep.QUIZZ ) )\n    }\n\n    return (\n        <GamePage step={GameStep.PLAYERS} game={game} updateGame={updateGame} onNext={onNext}>\n\n            <Grid container spacing={2}>\n\n                {\n                    (\n                        <>\n                            {game.players.map( player => {\n                                return (\n                                    <Grid key={player.id} item xs={6} textAlign=\"left\">\n                                        <PlayerCard\n                                            game={game}\n                                            player={player}\n                                            updateGame={updateGame}\n                                        />\n                                    </Grid>\n                                )\n                            })}                        \n                        </>\n                    )\n                }\n\n            </Grid>\n\n        </GamePage>\n    )\n}\n\nexport default PlayersPage","import React from 'react'\n\nimport IconButton from '@mui/material/IconButton';\nimport SkipNextIcon from '@mui/icons-material/SkipNext';\n\nimport { onUserEvent } from '../data/Util'\n\ninterface Props {\n    title?: string\n    onNext: () => void\n}\n\nconst NextButton = ( props: Props ) => {\n    const { title, onNext } = props\n    const description = title && title != '' ? title : 'Next'   \n    \n    // user events\n\n    const onClick = onUserEvent( onNext )\n\n    return (\n        <IconButton color=\"secondary\" title={description} onClick={onClick}>\n            <SkipNextIcon />\n        </IconButton>\n    )\n}\n\nexport default NextButton","import React from 'react'\nimport { useParams } from 'react-router'\nimport { useNavigate } from 'react-router-dom'\n\nimport GamePage from '../component/GamePage'\n\nimport { Game, GameStep, OnGameUpdate, onStartGame, selectGame } from '../data/Game'\nimport { toHomePage, toGamePage } from '../data/Navigate'\nimport NextButton from '../component/NextButton'\n\ninterface Props {\n    games: Game[]\n    updateGame: OnGameUpdate\n}\n\nconst StartPage = ( props: Props ) => {\n    const { games, updateGame } = props\n\n    const navigate = useNavigate() \n    \n    const { gameId } = useParams()\n    const game = selectGame( games, gameId )\n    \n    React.useEffect( () => { \n        if ( !game ) {\n            console.log(`[effect] MISSING game! >>> NAVIGATE home`)\n            navigate( toHomePage() )    \n        } else if ( game.questionNumber ) {\n            console.log(`[effect] NAVIGATE to question #${game.questionNumber}`)\n            navigate( toGamePage( game ) )    \n        }\n    }, [ game ] ) \n    \n    if ( !game ) {\n        return null\n    }   \n\n    const onNext = () => {\n        updateGame( game.id, onStartGame )\n    }\n\n    return (\n        <GamePage step={GameStep.QUIZZ} game={game} updateGame={updateGame} onNext={onNext}>\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', padding: '200px' }}>\n                <NextButton title=\"Start Game\" onNext={onNext}/>\n            </div>\n        </GamePage>                \n    )\n}\n\nexport default StartPage","import React from 'react'\n\nimport Box from '@mui/material/Box'\nimport Card from '@mui/material/Card'\nimport CardContent from '@mui/material/CardContent'\n\nimport { CardMedia, Typography } from '@mui/material'\nimport { Music } from '../data/Music'\nimport musicBackground from '../static/music.png'\n\ninterface Props {\n    music: Music\n}\n\nconst MusicCard = ( props: Props ) => {\n    const { music } = props\n\n    if ( !music ) {\n        return null\n    }\n\n    const musicImage = music.artist && music.artist.imgUrl ? music.artist.imgUrl : music.album && music.album.imgUrl ? music.album.imgUrl : musicBackground\n    const artistName = music.artist && music.artist.name ? music.artist.name : '-'\n    const albumName = music.album && music.album.name ? music.album.name : '-'\n\n    return (\n        <Card variant=\"outlined\">\n            <CardContent>\n\n                <Typography variant=\"h5\" color=\"text.primary\" component=\"div\" style={{ margin: '5px 10px' }}>\n                    {music.name}\n                </Typography>\n\n                <Box sx={{ display: 'flex', alignItems: 'center', pl: 1, pb: 1 }}>\n\n                    <CardMedia\n                        component=\"img\"\n                        sx={{ width: 56, height: 56, margin: '5px 10px' }}\n                        image={musicImage}\n                    />\n\n                    <div style={{ display: 'flex', flexDirection: 'column', marginRight: '10px' }}>\n                        \n                        <Typography variant=\"subtitle1\" color=\"text.secondary\" component=\"div\">\n                            Artist\n                        </Typography>\n                        \n                        <Typography variant=\"subtitle1\" color=\"text.secondary\" component=\"div\">\n                            Album\n                        </Typography>\n\n                    </div>\n\n                    <div style={{ display: 'flex', flexDirection: 'column', marginRight: '10px' }}>\n                        \n                        <Typography variant=\"subtitle1\" color=\"text.primary\" component=\"div\">\n                            {artistName}\n                        </Typography>\n\n                        <Typography variant=\"subtitle1\" color=\"text.primary\" component=\"div\">\n                            {albumName}\n                        </Typography>\n\n                    </div>\n\n                </Box>\n\n            </CardContent>\n        </Card>\n    )\n}\n\nexport default MusicCard","import React from 'react'\n\nimport IconButton from '@mui/material/IconButton'\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow'\nimport PauseIcon from '@mui/icons-material/Pause'\n\nimport { Game, OnGameUpdate } from '../data/Game'\nimport { Question, OnQuestionUpdate, QuestionId } from '../data/Question'\nimport { onKeyEvent, onUserEvent } from '../data/Util'\nimport { Box, CircularProgress, Tooltip, Typography } from '@mui/material'\nimport { withStyles } from '@mui/styles'\nimport MusicCard from './MusicCard'\nimport { Music } from '../data/Music'\nimport musicBackground from '../static/music.png'\nimport { MUSIC_PLAYER_KEYBOARD_SHORTCUTS } from '../data/Constants'\n\n\ninterface Props {\n    questionId: QuestionId\n    music: Music\n    failed: boolean\n    loading: boolean\n    info?: any\n    started: boolean\n    playing: boolean\n    progress: number\n    played: boolean\n    onMusicLoaded: ( nbSeconds:number ) => void\n    onMusicPlaying: () => void\n    onMusicPaused: () => void\n    onMusicEnded: () => void\n}\n\nconst MusicPlayer = ( props: Props ) => {\n    const { questionId, music, loading, info, started, playing, progress, played, onMusicLoaded, onMusicPlaying, onMusicPaused, onMusicEnded } = props\n\n    if ( !questionId && !music ) {\n        return null\n    }\n        \n    const audioRef = React.useRef<HTMLAudioElement>( new Audio( music.mp3Url ) )\n\n    // const [ loading, setLoading ] = React.useState( true )\n    // const [ isPlaying, setIsPlaying ] = React.useState( false )\n    // const [ duration, setDuration ] = React.useState( 0 )\n    // const [ currentTime, setCurrentTime ] = React.useState( 0 )\n\n    // let currentPercentage = 0\n    // if ( played ) {\n    //     currentPercentage = 100\n    // } else if ( duration ) {\n    //     currentPercentage = Math.ceil( ( currentTime / duration ) * 100 )\n    // }\n\n    //\n    // music helpers\n    //\n\n    const reset = () => {\n        console.log( 'reset' )\n        // setMusicIsReady( false )\n        // setIsPlaying( false )\n        // setDuration( 0 )\n        // setCurrentTime( 0 )\n    }\n\n    const musicReady = () => {\n        console.log( `musicReady >>> setLoading( false ) + onMusicLoaded( ${audioRef.current.duration} )` )\n        // setMusicIsReady( true )\n        // setLoading( false )\n        onMusicLoaded( audioRef.current.duration )\n    }   \n\n    const playMusic = () => {  \n        if ( started && !playing && !played ) {\n            console.log( `playMusic >>> !playing >>> onMusicPlaying()` )\n            onMusicPlaying()\n        }\n    }\n\n    const pauseMusic = () => {     \n        if ( started && playing && !played ) {\n            console.log( `pauseMusic >>> playing >>> onMusicPaused()` )\n            onMusicPaused()\n        }\n    }\n    \n    const toggleMusic = () => {           \n        if ( started && !played ) {\n            if ( playing ) {\n                console.log( `toggleMusic >>> playing >>> onMusicPaused()` )\n                onMusicPaused()\n            } else {\n                console.log( `toggleMusic >>> not playing >>> onMusicPlaying()` )\n                onMusicPlaying()\n            }\n        } else {\n            console.log( `toggleMusic >>> not started or already played >>> No-Op` )\n        }\n    }\n\n    React.useEffect( () => {\n        if ( audioRef.current ) {\n            if ( playing ) {\n                console.log( `playing >>> audio.play()` )\n                audioRef.current.play()\n            } else {\n                console.log( `!playing >>> audio.pause()` )\n                audioRef.current.pause()\n            }\n        }\n    }, [ playing ] ); \n\n    const lessVolume = () => {\n        console.log( `lessVolume` ) \n        if ( audioRef.current ) {\n            audioRef.current.volume = Math.max( 0.1, audioRef.current.volume - 0.1 )\n        } \n    }\n\n    const moreVolume = () => {\n        console.log( `moreVolume` )  \n        if ( audioRef.current ) {\n            audioRef.current.volume = Math.min( 1.0, audioRef.current.volume + 0.1 )\n        }\n    }\n\n    const musicEnded = () => {\n        console.log( 'musicEnded >>> onMusicEnded()' )\n        onMusicEnded()\n    }\n\n    //\n    // audio events\n    //\n\n    React.useEffect( () => {\n        \n        if ( audioRef.current ) {\n            console.log(\"pause current music...\")\n            audioRef.current.pause();\n        }\n    \n        if ( !played ) {\n\n            if ( audioRef.current.src != music.mp3Url ) {\n                console.log(\"new music...\")\n                audioRef.current = new Audio( music.mp3Url )\n                audioRef.current.loop = false\n                audioRef.current.volume = 1.0\n                reset()\n            }\n        \n            const onAudioLoad = () => {\n                console.log( `onAudioLoad >>> setCurrentTime( ${audioRef.current.currentTime} ) + setDuration( ${audioRef.current.duration} )` )\n                // setCurrentTime( audioRef.current.currentTime )\n                // setDuration( audioRef.current.duration )\n            }\n            const onAudioReady = () => {            \n                console.log( 'onAudioReady >>> musicReady' )\n                musicReady()\n            }\n            // const onAudioUpdate = () => {  \n            //     // console.log( `onAudioUpdate >>> setCurrentTime( ${audio.currentTime} )` )\n            //     // setCurrentTime( audioRef.current.currentTime )\n            // }\n            const onAudioEnd = () => {\n                console.log( 'onAudioEnd >>> musicEnded()' )\n                musicEnded()\n            }\n        \n            // listeners\n\n            console.log(\"add listener...\")\n            audioRef.current.addEventListener( 'loadeddata', onAudioLoad )    \n            audioRef.current.addEventListener( 'canplaythrough', onAudioReady )\n            // audioRef.current.addEventListener( 'timeupdate', onAudioUpdate )\n            audioRef.current.addEventListener( 'ended', onAudioEnd )\n\n            // effect cleanup\n            return () => {\n                console.log(\"remove listener...\")\n                audioRef.current.removeEventListener( 'loadeddata', onAudioLoad )    \n                audioRef.current.removeEventListener( 'canplaythrough', onAudioReady )\n                // audioRef.current.removeEventListener( 'timeupdate', onAudioUpdate )\n                audioRef.current.removeEventListener( 'ended', onAudioEnd )\n                reset()\n            }\n        }\n\n        return reset\n\n    }, [ played, questionId ] ); \n\n    const loadingMusic = !played && !started && loading\n    // const musicReady = !played && !started && !loading\n    // const countingDown = !played && musicIsReady && ( seconds > 0 )\n    const playingMusic = !played && started && playing\n    const pausingMusic = !played && started && !playing\n\n    const onPause = playingMusic ? onUserEvent( () => pauseMusic() ) : undefined\n    const onPlay = pausingMusic ? onUserEvent( () => playMusic() ) : undefined\n\n    //\n    // keyboard shortcuts\n    // \n\n    if ( MUSIC_PLAYER_KEYBOARD_SHORTCUTS ) {\n\n        const handleKeyPress = React.useCallback( onKeyEvent( ( key: string ): boolean => {\n            switch ( key ) {\n                case ' ':\n                    console.log( `music-player >>> key \"${key}\" >>> toggleMusic()`);\n                    toggleMusic();\n                    return true;\n                case 'ArrowUp':\n                    console.log( `music-player >>> key \"${key}\" >>> moreVolume()`);\n                    moreVolume();\n                    return true;\n                case 'ArrowDown':\n                    console.log( `music-player >>> key \"${key}\" >>> lessVolume()`);\n                    lessVolume();\n                    return true;\n            } \n            return false;\n        } ), [ toggleMusic, moreVolume, lessVolume ] );\n\n        React.useEffect( () => {\n            document.addEventListener( 'keydown', handleKeyPress );\n            return () => {\n                document.removeEventListener( 'keydown', handleKeyPress );\n            };\n        }, [ handleKeyPress ] ); \n\n    }  \n\n    //\n    // tooltip\n    //\n\n    const LightTooltip = withStyles( theme => ( {\n        tooltip: {\n            backgroundColor: 'transparent',\n            color: \"rgba(0, 0, 0, 0.87)\",\n            fontSize: 11\n        },\n        arrow: {\n            color: \"white\"\n        }\n    } ) ) ( Tooltip );\n\n    // console.log( `[render] music player: ready=${musicIsReady}, seconds=${seconds}/${delay}, played=${played}` )\n    \n    const icon = started && pausingMusic ? (\n        <Typography variant=\"caption\" component=\"div\" color=\"text.secondary\">\n            <IconButton aria-label=\"play\" onClick={onPlay}>\n                <PlayArrowIcon sx={{ height: 38, width: 38 }}/>\n            </IconButton> \n        </Typography>\n    ) : undefined\n    \n    const onClick = started && playingMusic ? onPause : undefined\n\n    return (\n        <LightTooltip title={played ? <MusicCard music={music} /> : false} >\n            <div \n                style={{ \n                    width: '56px', \n                    height: '56px', \n                    cursor: played ? 'help' : 'auto', \n                    marginRight: '10px', \n                    border: played ? '1px solid #777' : 'none',\n                    borderRadius: '28px', \n                    backgroundColor: played ? 'transparent' : '#eee',\n                    background: played ? music.album ? `url(${music.album.imgUrl})` : `url(${musicBackground})` : 'none', \n                    backgroundSize: '56px 56px' \n                }}\n            >                \n\n                <Box \n                    sx={{ \n                        width: '56px', \n                        height: '56px',\n                        position: 'relative', \n                        display: 'inline-flex', \n                        alignItems: 'center', \n                        justifyContent: 'center',\n                        cursor: onClick ? 'pointer' : 'auto',                        \n                    }} \n                    onClick={onClick}\n                >\n                    \n                    {/* progress */}\n\n                    { !played && loading && <CircularProgress variant=\"indeterminate\"/> }                    \n                    { !played && !loading && started && <CircularProgress size={56} variant=\"determinate\" value={progress} onClick={onClick}/> }\n                    \n                    {/* button or info */}\n\n                    <Box\n                        sx={{\n                            top: 0,\n                            left: 0,\n                            bottom: 0,\n                            right: 0,\n                            position: 'absolute',\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                        }}\n                        onClick={onClick}\n                    >\n                        { icon ? icon : info }\n                    </Box>                    \n\n                </Box>\n\n            </div>\n        </LightTooltip>\n    )\n}\n\nexport default MusicPlayer","import React from 'react'\n\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Box from '@mui/material/Box'\nimport Card from '@mui/material/Card'\nimport Paper from '@mui/material/Paper'\nimport CardMedia from '@mui/material/CardMedia'\nimport IconButton from '@mui/material/IconButton'\nimport Typography from '@mui/material/Typography'\nimport SkipPreviousIcon from '@mui/icons-material/SkipPrevious'\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow'\nimport PauseIcon from '@mui/icons-material/Pause'\nimport SkipNextIcon from '@mui/icons-material/SkipNext'\nimport Slide from '@mui/material/Slide';\n\nimport { Game, onAnswers, onErrorAnswers, OnGameUpdate, onQuestionNumber } from '../data/Game'\nimport { Player, PlayerId } from '../data/Player'\nimport { Question, OnQuestionUpdate, onQuestionPlayed, onQuestionCompleted, addPlayerAnswer, removePlayerAnswer, hasPlayerAnswer, onQuestionError } from '../data/Question'\nimport { range, onUserEvent } from '../data/Util'\nimport { Alert, Avatar, Badge, Fade, Grow, Tooltip } from '@mui/material'\nimport PlayingCard from './PlayingCard'\nimport { CardSize } from '../data/Card'\nimport { Answer, AnswerId } from '../data/Answer'\nimport PlayerAvatar, { AvatarSize } from './PlayerAvatar'\nimport { getQuestionAnswerStats, getQuestionStats } from '../data/PlayerStats'\nimport PlayerCard from './PlayerCard'\nimport { withStyles } from '@mui/styles'\nimport MusicPlayer from './MusicPlayer'\nimport { DEBUG, MAX_NB_SECONDS_LOADING, MAX_NB_SECONDS_PLAYING, ONE_SECOND } from '../data/Constants'\n\ninterface Props {\n    game: Game\n    question: Question\n    updateGame: OnGameUpdate\n    updateQuestion: OnQuestionUpdate    \n    onNext: () => void\n}\n\nconst QuestionCard = ( props: Props ) => {\n    const { game, question, updateGame, updateQuestion, onNext } = props\n\n    const [ questionId, setQuestionId ] = React.useState( question.id )\n    const [ musicLoading, setMusicLoading ] = React.useState( true )\n    const [ nbSecondsTotal, setNbSecondsTotal ] = React.useState( 0 )\n    const [ nbShownAnswers, setNbShownAnswers ] = React.useState( 0 )\n    const [ musicReady, setMusicReady ] = React.useState( false )\n    const [ countDown, setCountDown ] = React.useState( 3 )\n    const [ musicStarted, setMusicStarted ] = React.useState( false )\n    const [ musicPlaying, setMusicPlaying ] = React.useState( false )\n    const [ nbSecondsPlayed, setNbSecondsPlayed ] = React.useState( 0 )\n    const [ musicEnded, setMusicEnded ] = React.useState( false )\n\n    if ( !game || !question ) {\n        return null\n    }\n\n    React.useEffect( () => {\n        if ( questionId != question.id ) {\n            console.log( `new question >>> setQuestionId( ${question.id} ) + reset()` ) \n            setQuestionId( question.id )\n            reset()\n        }\n    }, [ questionId, question.id ] );\n        \n    const musicError = question.status == 'error'\n    const musicPlayed = musicEnded || question.status == 'played' || question.status == 'completed'\n\n    //\n    // update helpers\n    //\n\n    const hasAnswer = ( playerId: PlayerId, answerId: AnswerId ): boolean => {\n        return hasPlayerAnswer( question, playerId, answerId )\n    }\n\n    const addAnswer = ( playerId: PlayerId, answerId: AnswerId ) => {\n        updateQuestion( game.id, question.id, ( question: Question ) => addPlayerAnswer( question, playerId, answerId ) )    \n    }\n\n    const removeAnswer = ( playerId: PlayerId, answerId: AnswerId ) => {\n        updateQuestion( game.id, question.id, ( question: Question ) => removePlayerAnswer( question, playerId, answerId ) )        \n    }\n\n    const flagQuestionAsFailed = () => {\n        updateQuestion( game.id, question.id, ( question: Question ) => onQuestionError( question ) )  \n        updateGame( game.id, onErrorAnswers( game, question ) )     \n    }\n\n    //\n    // sort players by score\n    //\n     \n    const sortedPlayers = [ ...game.players ].sort( ( left: Player, right: Player ): number => {\n        return right.stats.score - left.stats.score\n    } )\n\n    //\n    // badge\n    //\n\n    const badgeValue = ( value: number | undefined ): string | undefined => {\n        if ( value ) {\n            if ( value === 0 ) {\n                return `-`\n            } else if ( value > 0 ) {\n                return `+${value}`\n            } else {\n                return `${value}`\n            }\n        }\n        return undefined\n    }\n\n    const badgeColor = ( value: number | undefined ): 'info' | 'success' | 'warning' | undefined => {\n        if ( value ) {\n            if ( value === 0 ) {\n                return `info`\n            } else if ( value > 0 ) {\n                return `success`\n            } else {\n                return `warning`\n            }\n        }\n        return undefined\n    }\n\n    const LightTooltip = withStyles( theme => ( {\n        tooltip: {\n            backgroundColor: 'transparent', // theme.palette.common.white,\n            color: \"rgba(0, 0, 0, 0.87)\",\n            // boxShadow: theme.shadows[1],\n            fontSize: 11\n        },\n        arrow: {\n            color: \"white\"\n        }\n    } ) ) ( Tooltip );\n\n    //\n    // events\n    //\n\n    const reset = () => {\n        setMusicLoading( true )\n        setNbSecondsTotal( 0 )\n        setNbShownAnswers( 0 )\n        setMusicReady( false )\n        setCountDown( 3 )\n        setMusicStarted( false )\n        setMusicPlaying( false )\n        setNbSecondsPlayed( 0 )\n        setMusicEnded( false )\n    }\n\n    const resetOnError = () => {\n        setMusicLoading( false )\n        setNbShownAnswers( 0 )\n    }\n\n    const resetOnPlayed = () => {\n        setNbShownAnswers( question.answers.length )\n    }\n\n    const onMusicLoaded = ( nbSeconds: number ) => {\n        console.log( `onMusicLoaded >>> setMusicLoading( false ) + setNbSeconds( Math.min( ${nbSeconds}, ${MAX_NB_SECONDS_PLAYING} ) )` ) \n        setMusicLoading( false )\n        setNbSecondsTotal( Math.min( Math.ceil( nbSeconds ), MAX_NB_SECONDS_PLAYING ) )\n        setMusicStarted( false )\n        setMusicPlaying( false )\n        setNbSecondsPlayed( 0 )\n        setMusicEnded( false )\n    }\n\n    const onMusicFailed = () => {\n        console.log( `onMusicFailed >>> flagQuestionAsFailed() + setMusicLoading( false )` )\n        setMusicLoading( false )\n        flagQuestionAsFailed()\n    }\n\n    const onMusicPlaying = () => {\n        if ( musicStarted && !musicPlayed ) {\n            console.log( 'onMusicPlaying >>> setMusicPlaying( true )' ) \n            setMusicPlaying( true )\n        } else {\n            console.log( `onMusicPlaying >>> WRONG state! ( musicStarted: ${musicStarted}, musicPlayed: ${musicPlayed} )` ) \n        }\n    }\n\n    const onMusicPaused = () => {\n        if ( musicStarted && !musicPlayed ) {\n            console.log( 'onMusicPaused >>> setMusicPlaying( false )' ) \n            setMusicPlaying( false )\n        } else {\n            console.log( `onMusicPaused >>> WRONG state! ( musicStarted: ${musicStarted}, musicPlayed: ${musicPlayed} )` ) \n        }\n    }\n\n    const onMusicEnded = () => {\n        console.log( 'onMusicEnded >>> onNext() + reset()' )\n        onNext()        \n        reset() \n    }\n\n    const showNextAnswer = () => {        \n        if ( nbShownAnswers == question.answers.length ) {\n            console.log( 'showNextAnswer >>> setMusicReady( true )' ) \n            setMusicReady( true )\n        } else {            \n            // console.log( `showNextAnswer >>> ${nbShownAnswers} + 1` ) \n            setNbShownAnswers( nbShownAnswers + 1 )\n        }\n    }\n\n    const showCountDown = () => {\n        if ( countDown > 1 ) {\n            // console.log( `showCountDown >>> ${countDown} - 1` ) \n            setCountDown( countDown - 1 )\n        } else {\n            console.log( 'showCountDown >>> setMusicStarted( true ) + setMusicPlaying( true )' ) \n            setCountDown( 0 )\n            setMusicStarted( true )\n            setMusicPlaying( true )\n        }\n    }\n\n    const showNbSecondsPlayed = () => {\n        if ( nbSecondsPlayed < nbSecondsTotal ) {\n            // console.log( `showNbSecondsPlayed >>> ${nbSecondsPlayed} + 1` ) \n            setNbSecondsPlayed( nbSecondsPlayed + 1 )\n        } else {\n            console.log( 'showCountDown >>> pauseMusic()' ) \n            setMusicPlaying( false )\n            setMusicEnded( true )\n            onMusicEnded()\n        }\n    }\n\n    React.useEffect( () => {\n        let timerId: any = undefined;\n        if ( musicError ) {\n            resetOnError()\n            clearInterval( timerId );\n            timerId = undefined;\n        } else if ( musicPlayed ) {\n            resetOnPlayed()\n            clearInterval( timerId );\n            timerId = undefined;\n        } else if ( musicLoading ) {\n            // console.log( 'timer >>> musicLoading >>> showMusicLoading' ) \n            timerId = setInterval( onMusicFailed, ONE_SECOND * MAX_NB_SECONDS_LOADING );\n        } else if ( !musicReady ) {\n            // console.log( 'timer >>> !musicReady >>> showNextAnswer' ) \n            timerId = setInterval( showNextAnswer, ONE_SECOND );\n        } else if ( !musicStarted ) {\n            // console.log( 'timer >>> !musicStarted >>> showCountDown' ) \n            timerId = setInterval( showCountDown, ONE_SECOND );\n        } else if ( musicPlaying ) {\n            // console.log( 'timer >>> musicPlaying >>> showNbSecondsPlayed' ) \n            timerId = setInterval( showNbSecondsPlayed, ONE_SECOND );\n        } else {\n            resetOnPlayed()\n            console.log( 'timer >>> ??? >>> STOP' ) \n            clearInterval( timerId );\n            timerId = undefined;\n        }                \n        return () => {\n            timerId && clearInterval( timerId );\n        }\n    }, [ musicLoading, musicError, countDown, nbShownAnswers, musicReady, musicStarted, musicPlaying, nbSecondsPlayed, musicPlayed ] );\n\n    const progress = musicPlayed ? 100 : !musicStarted ? 0 : Math.ceil( Math.min( nbSecondsPlayed, nbSecondsTotal ) * 100 / nbSecondsTotal )\n    const musicPaused = !musicPlayed && musicStarted && !musicPlaying\n    const showHints = progress > 50\n    const countingDown = musicReady && !musicStarted\n\n    let musicPlayerInfo = undefined\n    if ( musicError ) {\n        musicPlayerInfo = (\n            <Typography sx={{ fontSize: 40, fontWeight: 'bold', color: 'red' }}>\n                X\n            </Typography>\n        )\n    } else if ( musicLoading || !musicReady || musicPlayed ) {\n        musicPlayerInfo = undefined\n    } else if ( !musicStarted ) {\n        musicPlayerInfo = (\n            <Typography sx={{ fontSize: 40, fontWeight: 'bold', color: 'gray' }}>\n                {countDown}\n            </Typography>\n        )\n    } else {\n        musicPlayerInfo = (\n            <Typography sx={{ fontSize: 20, fontWeight: 'bold', color: 'black' }}>\n                {nbSecondsTotal-nbSecondsPlayed}s\n            </Typography>\n        )\n    }\n\n    return (\n        <>  \n\n            {/* warning: music failed */}\n\n            {musicError && (\n                <Alert \n                    severity=\"warning\" \n                    style={{ \n                        position: 'absolute',\n                        width: '500px',\n                        top: '25%',\n                        left: 'calc( 50% - 250px )',\n                        boxShadow: '3px 3px 3px rgb(0,0,0,0.1)',\n                        borderRadius: '10px',\n                    }}\n                >\n                    Could not load music! Please proceed to next question.\n                </Alert>\n            )}\n\n            {/* answers */}\n\n            {\n                question.answers.map( ( answer, index ) => {\n\n                    const shown = index < nbShownAnswers\n                    const hidden = musicError || !shown\n                    const answerNumber = answer.id % 100 \n                    const color = musicPlayed ? answer.correct ? '#00c508' : 'grey' : 'grey'\n                    const backgroundColor = musicPlayed ? answer.correct ? '#00ff131f' : 'white' : 'white'\n                    \n                    return (\n                        <Paper key={answer.id} className=\"answer\" elevation={3} style={{ margin: '2px', opacity: hidden ? '0' : '1', filter: musicPaused ? 'blur(6px)' : 'none', backgroundColor: backgroundColor }}>\n                            <div \n                                style={{\n                                    position: 'relative', \n                                    display: 'inline-flex',\n                                    alignItems: 'center', \n                                    justifyContent: 'space-between',\n                                    width: '100%'\n                                }}\n                            >                                    \n                                <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'left' }}>\n                                    <Avatar sx={{ bgcolor: color }} style={{ margin: '10px', padding: '5px', fontSize: '2rem', fontWeight: 'bold' }}>{answer.number}</Avatar>\n                                    <div style={{ display: 'flex', flexDirection:'column', alignItems: 'flex-start', justifyContent: 'left' }}> \n                                        <Typography variant='h5' style={{ lineHeight: '1', fontSize: '2rem', fontWeight: 'bold' }}>{answer.answer}</Typography>\n                                        <Typography variant='subtitle2' style={{ marginLeft: '20px', color: 'gray', lineHeight: '1', fontSize: '1.5rem', opacity: showHints ? '1' : '0' }}>{answer.hint}</Typography>\n                                    </div>\n                                </div>\n                                <div\n                                    style={{\n                                        top: 0,\n                                        left: 0,\n                                        bottom: 0,\n                                        right: 5,\n                                        position: 'absolute',\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        justifyContent: 'flex-end',\n                                    }}\n                                >\n                                    { ( question.status == 'played' ) && (\n                                        game.players.map( ( player: Player ) => {\n                                            const disabled = hasAnswer( player.id, answer.id )\n                                            const onClick = question.status == 'played' && !disabled ? () => addAnswer( player.id, answer.id ) : undefined\n                                            return (\n                                                <div key={`answer-${answer.id}-${player.id}`} style={{ marginLeft: '5px' }}>\n                                                    <PlayingCard\n                                                        key={`${player.id}-${answer.id}`} \n                                                        card={{\n                                                            ...player.card,\n                                                            number: answer.number,\n                                                            size: CardSize.XS,\n                                                        }}\n                                                        disabled={disabled} \n                                                        onClick={onClick} \n                                                    />\n                                                </div>\n                                            )\n                                        } )\n                                    ) }\n                                </div>\n                            </div>                                \n                        </Paper>\n                    )\n                })\n            } \n\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n\n                <div style={{ width: '100%', display: 'flex', alignItems: 'center', justifyItems: 'flex-start', marginTop: '15px' }}>\n\n                    {/* music player */}\n\n                    <MusicPlayer \n                        questionId={question.id} \n                        music={question.music}\n                        failed={musicError}\n                        loading={musicLoading}\n                        info={musicPlayerInfo}\n                        started={musicStarted}\n                        playing={musicPlaying} \n                        progress={progress}\n                        played={musicPlayed} \n                        onMusicLoaded={onMusicLoaded}\n                        onMusicPlaying={onMusicPlaying}\n                        onMusicPaused={onMusicPaused}\n                        onMusicEnded={onMusicEnded}\n                    />\n    \n                    {/* selected players answers */}\n\n                    <div style={{ display: 'flex', alignItems: 'center', justifyItems: 'flex-start', justifyContent: 'space-between', marginLeft: '50px' }}>\n                    { \n                        question.playerAnswers.map( playerAnswer => {\n                            const player = game.players.find( player => player.id === playerAnswer.playerId )\n                            if ( !player ) {\n                                return null\n                            }\n                            const answer = question.answers.find( answer => answer.id === playerAnswer.answerId )\n                            if ( !answer ) {\n                                return null\n                            }\n                            const correct = question.status == 'completed' ? answer.correct : undefined\n                            const answerStats = getQuestionAnswerStats( player.stats, question.id, playerAnswer.answerId )\n                            const score = question.status == 'completed' && answerStats ? answerStats.score : undefined\n                            const onClick = question.status == 'played' ? () => removeAnswer( player.id, answer.id ) : undefined                            \n                            return ( \n                                <div key={`selected-${answer.id}-${player.id}`} style={{ transition: 'transform 1000ms cubic-bezier(0, 0, 0.2, 1) 1000ms' }}>                               \n                                    <Badge className='card--badge' badgeContent={badgeValue(score)} color={badgeColor(score)}>                                    \n                                        <PlayingCard\n                                            key={`${player.id}-${answer.id}`} \n                                            card={{\n                                                ...player.card,\n                                                number: answer.number,\n                                                size: CardSize.XS,\n                                            }} \n                                            onClick={onClick} \n                                        />\n                                    </Badge>\n                                </div>\n                            )\n                        } )\n                    }\n                    {\n                        range( Math.max( 1, game.settings.nbPlayer - question.playerAnswers.length ) ).map( i => {\n                            return (\n                                <div key={`selected-${i}`} className='card--badge'>     \n                                    <PlayingCard cardSize={CardSize.XS}/>\n                                </div>        \n                            )\n                        } )\n                    }\n                    </div>\n\n                </div>\n\n            </div>\n\n            {/* players */}\n\n            <div className='playerChips'>\n            {\n                sortedPlayers.map( player => {\n                    const tooltipId = `player-tooltip-${player.id}`\n                    const questionStats = getQuestionStats( player.stats, question.id )\n                    const score = question.status == 'completed' && questionStats ? questionStats.score : undefined\n                    const disableTooltip = !musicPlayed\n                    return (\n                        <LightTooltip \n                            key={tooltipId} \n                            title={<PlayerCard player={player} avatarSize={AvatarSize.M} cardSize={CardSize.XS}/>} \n                            disableFocusListener={disableTooltip}\n                            disableHoverListener={disableTooltip}\n                        >\n                            <Badge className='playerChip--badge' badgeContent={badgeValue(score)} color={badgeColor(score)}>  \n                                <div className='playerChip' style={{ cursor: musicPlayed ? 'help' : 'auto', }}>\n                                    <span className='playerChip--avatar'><PlayerAvatar key={player.id} id={player.avatarId} size={AvatarSize.S}/></span>\n                                    <span className='playerChip--score'>{player.stats.score}</span>\n                                </div>\n                            </Badge>                            \n                        </LightTooltip>\n                    )\n                } )\n            }\n            </div>\n\n            {/* debug */}\n\n            {DEBUG && <pre style={{ border: '1px solid #999', background: '#fff6f2', display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n                <span>{musicError?'error':'--'}</span>\n                <span>{musicLoading?'loading':'--'}</span>\n                <span>answers: {nbShownAnswers}/{question.answers.length}</span>\n                <span>{musicReady?'ready':'--'}</span>\n                <span>{countDown}s</span>\n                <span>{musicStarted?'started':'--'}</span>\n                <span>music: {nbSecondsPlayed}s / {nbSecondsTotal}s</span>\n                <span>{progress}%</span>\n                <span>{musicPlaying?'playing':'paused'}</span>\n                <span>{showHints?'hints':'--'}</span>\n                <span>{musicEnded?'ended':'--'}</span>\n                <span>{musicPlayed?'played':'--'}</span>\n            </pre>}\n\n            {DEBUG && <pre style={{ border: '1px solid #999', background: '#f2fff6', padding: '20px' }}>{JSON.stringify(question,undefined,4)}</pre>}\n\n        </>\n    )\n}\n\nexport default QuestionCard","import React from 'react'\nimport { useParams } from 'react-router'\nimport { useNavigate } from 'react-router-dom'\n\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Box from '@mui/material/Box'\nimport Card from '@mui/material/Card'\nimport CardContent from '@mui/material/CardContent'\nimport CardMedia from '@mui/material/CardMedia'\nimport IconButton from '@mui/material/IconButton'\nimport Typography from '@mui/material/Typography'\nimport SkipPreviousIcon from '@mui/icons-material/SkipPrevious'\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow'\nimport SkipNextIcon from '@mui/icons-material/SkipNext'\nimport NextButton from '../component/NextButton'\n\nimport Timeline from '@mui/lab/Timeline';\nimport TimelineItem from '@mui/lab/TimelineItem';\nimport TimelineSeparator from '@mui/lab/TimelineSeparator';\nimport TimelineConnector from '@mui/lab/TimelineConnector';\nimport TimelineContent from '@mui/lab/TimelineContent';\nimport TimelineDot from '@mui/lab/TimelineDot';\n\nimport GamePage from '../component/GamePage'\nimport QuestionCard from '../component/QuestionCard'\n\nimport { Game, GameStep, OnGameUpdate, selectGame, selectQuestion, onQuestionNumber, onEndGame, onAnswers } from '../data/Game'\nimport { QuestionId, OnQuestionUpdate, onQuestionPlayed, onQuestionCompleted } from '../data/Question'\nimport { toHomePage, toGamePage } from '../data/Navigate'\nimport { onUserEvent } from '../data/Util'\nimport { DEBUG } from '../data/Constants'\n\ninterface Props {\n    games: Game[]\n    updateGame: OnGameUpdate\n    updateQuestion: OnQuestionUpdate\n}\n\nconst QuestionPage = ( props: Props ) => {\n    const { games, updateGame, updateQuestion } = props\n\n    const navigate = useNavigate()\n\n    const { gameId, questionNumber } = useParams()\n    \n    const game = selectGame( games, gameId )\n    const question = selectQuestion( game, questionNumber )\n    \n    React.useEffect( () => { \n        if ( !game ) {\n            console.log(`[effect] MISSING game! >>> NAVIGATE to home`)\n            navigate( toHomePage() )    \n        } else if ( !question ) {\n            console.log(`[effect] UNKNOWN question! >>> NAVIGATE to home`)\n            navigate( toHomePage() )     \n        } else if ( game.questionNumber != question.number ) {\n            console.log(`[effect] NEW question! >>> NAVIGATE to question ${game.questionNumber}`)\n            navigate( toGamePage( game ) )    \n        }  \n    }, [ game ] )\n    \n    if ( !game ) {\n        return null\n    }\n\n    \n    if ( !question ) {\n        return null\n    }\n\n    // update helpers\n\n    const musicPlayed = () => {\n        updateQuestion( game.id, question.id, onQuestionPlayed )\n    }\n\n    const musicAnswered = () => {\n        updateGame( game.id, onAnswers( game, question ) )\n        updateQuestion( game.id, question.id, onQuestionCompleted )\n    }\n\n    const updateQuestionNumber = ( questionNumber: number ) => {\n        updateGame( game.id, onQuestionNumber( questionNumber ) )\n    }\n\n    const endGame = () => {\n        updateGame( game.id, onEndGame )\n    }\n\n    // user events\n    \n    const onPrevious = DEBUG && question.previousNumber ? () => {\n        if ( question.previousNumber ) {\n            console.log( `onNext >>> updateQuestionNumber( ${question.previousNumber} )` )\n            updateQuestionNumber( question.previousNumber )\n        }\n    } : undefined\n\n    const onNext = () => {\n        switch ( question.status ) {\n            case 'not-played':\n                console.log( 'onNext >>> musicPlayed()' )\n                musicPlayed()\n                break\n            case 'played':\n                console.log( 'onNext >>> musicAnswered()' )\n                musicAnswered()\n                break\n            case 'error':\n            case 'completed':\n                if ( question.nextNumber ) {\n                    console.log( `onNext >>> updateQuestionNumber( ${question.nextNumber} )` )\n                    updateQuestionNumber( question.nextNumber )\n                } else {\n                    console.log( `onNext >>> endGame()` )\n                    endGame()\n                }\n                break\n        }\n    }\n\n    // title\n\n    const title =  DEBUG ? `Q${question.number} - ${question.title} - ${question.status}` : `Q${question.number} - ${question.title}`\n\n    return (\n        <GamePage title={title} step={GameStep.QUIZZ} game={game} updateGame={updateGame} onPrevious={onPrevious} onNext={onNext}>\n            <QuestionCard game={game} question={question} updateGame={updateGame} updateQuestion={updateQuestion} onNext={onNext}/>\n        </GamePage>\n    )\n}\n\nexport default QuestionPage","import React from 'react'\n\nimport Box from '@mui/material/Box'\nimport Card from '@mui/material/Card'\nimport CardContent from '@mui/material/CardContent'\nimport Grid from '@mui/material/Grid'\nimport TextField from '@mui/material/TextField'\nimport Modal from '@mui/material/Modal'\nimport IconButton from '@mui/material/IconButton'\nimport CloseIcon from '@mui/icons-material/Close'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\nimport MilitaryTechIcon from '@mui/icons-material/MilitaryTech'\n\nimport { Game, OnGameUpdate, updatePlayer } from '../data/Game'\nimport { Card as DataCard, CardSymbol, CardColor, CardSize, DefaultCards } from '../data/Card'\nimport { Player } from '../data/Player'\n\nimport PlayingCard from './PlayingCard'\nimport PlayingCardIcon from './PlayingCardIcon'\nimport PlayerAvatar, { AvatarSize } from './PlayerAvatar';\nimport { Accordion, AccordionDetails, AccordionSummary, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography } from '@mui/material'\nimport { ColorizeRounded } from '@mui/icons-material'\n\ninterface Props {\n    game: Game\n    player: Player\n    position: number\n    color: string\n    medalColor?: string    \n}\n\nconst PlayerScoreCard = ( props: Props ) => {\n    const { game, player, position, color, medalColor } = props\n\n    if ( !player.number ) {\n        return null\n    }\n\n    const prettyPoints = ( value: number ): string => {\n        value = value < 10 ? Math.ceil( 10 * value ) / 10 : Math.ceil( value )\n        if ( value > 0 ) {\n            return `+ ${value} pts`\n        } else if ( value < 0 ) {\n            return `- ${-value} pts`\n        } else {\n            return `-`\n        }\n    }\n\n    const prettyPercent = ( value: number ): string => {\n        value = value < 10 ? Math.ceil( 10 * value ) / 10 : Math.ceil( value )\n        if ( value > 0 ) {\n            return `${value} %`\n        } else if ( value < 0 ) {\n            return `-${-value} %`\n        } else {\n            return `-`\n        }\n    }\n\n    const nbTotal = player.stats.nbAnswer + player.stats.nbMiss\n    const successPercent = nbTotal > 0 ? player.stats.nbSuccess * 100 / nbTotal : 0\n    const failurePercent = nbTotal > 0 ? player.stats.nbFailure * 100 / nbTotal : 0\n    const missPercent = nbTotal > 0 ? player.stats.nbMiss * 100 / nbTotal : 0\n\n    let sumBySuccessAnswer = 0\n    let sumByFailureAnswer = 0\n    let nbSuccessAnswer = 0\n    let nbFailureAnswer = 0\n    for ( const question of player.stats.questions ) {\n        for ( const answer of question.answers ) {\n            if ( answer.success ) {\n                nbSuccessAnswer++\n                sumBySuccessAnswer += answer.score\n            } else {\n                nbFailureAnswer++\n                sumByFailureAnswer += answer.score\n            }\n        } \n    }    \n    const avgSuccessDelta = nbSuccessAnswer > 0 ? sumBySuccessAnswer / nbSuccessAnswer : 0    \n    const avgFailureDelta = nbFailureAnswer > 0 ? sumByFailureAnswer / nbFailureAnswer : 0\n    const avgDelta = ( nbSuccessAnswer + nbFailureAnswer ) > 0 ? ( sumBySuccessAnswer + sumByFailureAnswer ) / ( nbSuccessAnswer + nbFailureAnswer ) : 0    \n\n    return (\n\n        <Accordion>\n            <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n            >\n                \n                <Grid container spacing={2} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}> \n                    <Grid item xs={12}>\n                        <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n                            <div style={{ display: 'inline-flex', alignItems: 'center' }}>\n                                <div style={{ \n                                    width: '32px',\n                                    borderRadius: '20px',\n                                    border: `4px solid ${medalColor || '#42a5f5'}`,\n                                    color: medalColor || '#42a5f5',\n                                    // boxShadow: 'rgb(0 0 0 / 20%) 3px 3px 3px',\n                                    fontSize: '15px',\n                                    fontWeight: 'bold',\n                                    aspectRatio: '1',\n                                    display: 'flex',\n                                    alignItems: 'center',\n                                    justifyContent: 'center',\n                                    marginRight: '30px',\n                                }}>\n                                    {position}                                   \n                                </div>\n                                <PlayerAvatar id={player.avatarId} size={AvatarSize.M}/>\n                                <Typography style={{ marginLeft: '10px' }} >{player.name}</Typography>\n                                <MilitaryTechIcon style={{ marginLeft: '20px', fontSize: '2.5em', color: medalColor, opacity: medalColor ? '1' : '0' }}/>\n                            </div>\n                            <div style={{ \n                                width: '40px',\n                                borderRadius: '20px',\n                                marginRight: '10px',\n                                backgroundColor: color,\n                                boxShadow: 'rgb(0 0 0 / 20%) 3px 3px 3px',\n                                fontSize: '15px',\n                                fontWeight: 'bold',\n                                aspectRatio: '1',\n                                display: 'flex',\n                                alignItems: 'center',\n                                justifyContent: 'center'\n                            }}>\n                                {player.stats.score}\n                            </div>\n                        </Box> \n                    </Grid>\n                </Grid>\n\n            </AccordionSummary>\n\n            <AccordionDetails>\n    \n                <TableContainer component={Paper}>\n                    <Table aria-label=\"simple table\" size=\"small\">\n                        <TableHead>\n                            <TableRow sx={{ backgroundColor: '#e3d5ca' }}>\n                                <TableCell>score: {player.stats.score}</TableCell>\n                                <TableCell align=\"right\">gain</TableCell>\n                                <TableCell align=\"right\">nb</TableCell>\n                                <TableCell align=\"right\">%</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">answers:</TableCell>\n                                <TableCell align=\"right\">{prettyPoints(avgDelta)}</TableCell>\n                                <TableCell align=\"right\">{player.stats.nbSuccess+player.stats.nbFailure}</TableCell>\n                                <TableCell align=\"right\">{prettyPercent(successPercent+failurePercent)}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\"> - succeed</TableCell>\n                                <TableCell align=\"right\">{prettyPoints(avgSuccessDelta)}</TableCell>\n                                <TableCell align=\"right\">{player.stats.nbSuccess}</TableCell>\n                                <TableCell align=\"right\">{prettyPercent(successPercent)}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\"> - failed</TableCell>\n                                <TableCell align=\"right\">{prettyPoints(avgFailureDelta)}</TableCell>\n                                <TableCell align=\"right\">{player.stats.nbFailure}</TableCell>\n                                <TableCell align=\"right\">{prettyPercent(failurePercent)}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">missed</TableCell>\n                                <TableCell align=\"right\">{prettyPoints(0)}</TableCell>\n                                <TableCell align=\"right\">{player.stats.nbMiss}</TableCell>\n                                <TableCell align=\"right\">{prettyPercent(missPercent)}</TableCell>\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n\n            </AccordionDetails>\n        </Accordion>\n    )\n}\n\nexport default PlayerScoreCard","\n// //////////////////////////////////////////////////\n// steps\n\nexport enum AdminStep {\n    THEMES = 'THEMES',\n    THEME = 'THEME',\n}","import React from 'react'\nimport { useParams } from 'react-router'\nimport { useNavigate } from 'react-router-dom'\nimport ReplayButton from '../component/ReplayButton'\n\nimport GamePage from '../component/GamePage'\n\nimport { Game, GameStep, OnGameUpdate, OnStep, selectGame, newGameFromPrevious } from '../data/Game'\nimport { toHomePage, toGamePage } from '../data/Navigate'\nimport { Grid } from '@mui/material'\nimport PlayerScoreCard from '../component/PlayerScoreCard'\nimport { Player } from '../data/Player'\nimport { VictoryChart, VictoryLine, VictoryScatter, VictoryTooltip, VictoryGroup, VictoryVoronoiContainer, VictoryLegend } from 'victory'\nimport { computeVizualiationScoreData } from '../data/PlayerStats'\nimport PlayerAvatar, { AvatarSize } from '../component/PlayerAvatar'\n\ninterface Props {\n    games: Game[]\n    updateGame: OnGameUpdate\n    addGame: ( game: Game ) => void\n}\n\nconst ScoresPage = ( props: Props ) => {\n    const { games, updateGame, addGame } = props\n\n    const navigate = useNavigate()\n\n    const { gameId } = useParams()\n    const game = selectGame( games, gameId )\n    \n    React.useEffect( () => { \n        if ( !game ) {\n            console.log(`[effect] MISSING game! >>> NAVIGATE home`)\n            navigate( toHomePage() )    \n        }\n    }, [ game ] )\n    \n    if ( !game ) {\n        return null\n    }\n\n    const restartNewGame = () => {\n        const newGame = newGameFromPrevious( game )\n        addGame( newGame )\n        navigate( toGamePage( newGame ) )\n    }\n\n    const onNext = () => {   \n        if ( game.ended ) {\n            navigate( toHomePage() )\n        } else {\n            updateGame( game.id, OnStep( GameStep.QUIZZ ) )\n        }        \n    }\n\n    //\n    // sort players by score\n    //\n     \n    const sortedPlayers = [ ...game.players ].sort( ( left: Player, right: Player ): number => {\n        return right.stats.score - left.stats.score\n    } )\n\n    let previousPosition: number | undefined = undefined\n    let previousScore: number | undefined = undefined\n\n    const colorScale: string[] = [ \n        \"#f29e4c\",\n        \"#f1c453\",\n        \"#efea5a\",\n        \"#b9e769\", \n        \"#83e377\", \n        \"#16db93\", \n        \"#0db39e\", \n        \"#048ba8\", \n        \"#2c699a\", \n        \"#54478c\" \n    ]\n    const medalColorScale: string[] = [ \n        \"gold\",\n        \"grey\",\n        \"brown\" \n    ]\n\n    return (\n        <GamePage step={GameStep.SCORES} game={game} updateGame={updateGame} onNext={onNext}>\n\n            <Grid container spacing={2}>\n\n                {/* players */}\n\n                {\n                    (\n                        <>\n                            {sortedPlayers.map( ( player, index ) => {\n                                \n                                let position = 1                                \n                                if ( previousPosition !== undefined && previousScore !== undefined ) {\n                                    if ( previousScore > player.stats.score ) {\n                                        position = previousPosition + 1\n                                    } else {\n                                        position = previousPosition\n                                    }\n                                }\n                                previousScore = player.stats.score\n                                previousPosition = position\n\n                                return (\n                                    <Grid key={player.id} item xs={12} textAlign=\"left\">\n                                        <PlayerScoreCard\n                                            game={game}\n                                            player={player}\n                                            position={position}\n                                            color={colorScale[index % colorScale.length]}\n                                            medalColor={position-1 < medalColorScale.length ? medalColorScale[position-1] : undefined}\n                                        />\n                                    </Grid>\n                                )\n                            })}                        \n                        </>\n                    )\n                }\n\n                {/* graph */}\n\n                <VictoryChart height={390}> \n\n                    {sortedPlayers.map( ( player, index ) => {\n                        const data = computeVizualiationScoreData( player.stats )\n                        const color = colorScale[index % colorScale.length]\n                        return (\n\n                            <VictoryGroup\n                                key={`player-graph-${player.id}`}\n                                color={color}\n                                labels={({ datum }) => `#${index+1} - ${player.name}: ${datum.tooltip}`}\n                                labelComponent={\n                                    <VictoryTooltip\n                                        style={{ fontSize: 10 }}\n                                    />\n                                }\n                                data={data}\n                            >\n                                <VictoryLine/>\n                                <VictoryScatter\n                                    size={3}\n                                    style={{ data: { fill: color } }}\n                                />\n                            </VictoryGroup>\n                        )\n                    })}\n\n                </VictoryChart>\n\n            </Grid> \n            \n        </GamePage>\n    )\n}\n\nexport default ScoresPage","import React from 'react'\n\nimport Grid from '@mui/material/Grid';\n\nimport Page from '../component/Page'\n\nimport PlayerAvatar, { AvatarSize } from '../component/PlayerAvatar';\n\ninterface Props {}\n\nconst AvatarsPage = ( props: Props ) => {\n\n    return (\n        <Page title=\"Avatars\">\n\n            <Grid container spacing={2}>\n\n                { [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20].map(number => {\n\n                    return (\n                        <Grid key={number} item xs={12} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-around', backgroundColor: '#ddd' }}>\n                            {\n                                Object.keys( AvatarSize ).map(size => {\n                                    return (\n                                        <PlayerAvatar key={`${number}-${size}`} id={number} size={size as AvatarSize} />\n                                    )\n                                })\n                            }\n                        </Grid>\n                    )\n                } ) }\n\n            </Grid>\n\n        </Page>\n    )\n}\n\nexport default AvatarsPage","import React from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nimport AppBar from '@mui/material/AppBar'\nimport Box from '@mui/material/Box'\nimport Toolbar from '@mui/material/Toolbar'\nimport IconButton from '@mui/material/IconButton'\n\nimport SkipPreviousIcon from '@mui/icons-material/SkipPrevious'\nimport SkipNextIcon from '@mui/icons-material/SkipNext'\nimport KeyboardArrowLeftIcon from '@mui/icons-material/KeyboardArrowLeft'\n\nimport { AdminStep } from '../data/Admin'\n\ninterface Props {\n    title?: string\n    step?: AdminStep\n    onBack?: () => void\n    onPrevious?: () => void\n    onNext?: () => void\n}\n\nconst Header = ( props: Props ) => {\n    const { title, step, onBack, onPrevious, onNext } = props\n\n    const navigate = useNavigate()\n\n    // title helpers\n\n    const themesTitle = 'Themes'\n    const themeTitle = 'Theme'\n\n    // selected helpers\n\n    const isNoneSelected = step === undefined\n    const isThemesSelected = step == AdminStep.THEMES\n    const isThemeSelected = step == AdminStep.THEME\n\n    // title \n\n    const finalTitle = title ? title : \n                        isThemesSelected ? themesTitle : \n                        isThemeSelected ? themeTitle : ''\n\n    return (\n        <Box className=\"header\" sx={{ flexGrow: 1 }} style={{ marginBottom: '20px' }}>\n            <AppBar position=\"static\" color=\"transparent\">\n                <Toolbar>\n\n                    {/* back */}\n\n                    {onBack && (\n                            <IconButton \n                                aria-label=\"Back\" \n                                onClick={onBack}\n                            >\n                                <KeyboardArrowLeftIcon />\n                            </IconButton>\n                        )}\n\n                    <div style={{ width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n\n                        \n\n                        {/* title */}\n\n                        <div style={{ fontWeight: 'bold', textTransform: 'uppercase' }}>{finalTitle}</div>\n\n                        {/* Previous & Next */}\n                        \n                        <div>\n\n                            { onPrevious && (\n                                <IconButton \n                                    aria-label=\"Previous\" \n                                    color=\"info\"\n                                    onClick={onPrevious}\n                                >\n                                    <SkipPreviousIcon />\n                                </IconButton>\n                            ) }\n                            \n                            { onNext && (\n                                <IconButton \n                                    aria-label=\"Next\" \n                                    color=\"info\"\n                                    onClick={onNext}\n                                >\n                                    <SkipNextIcon />\n                                </IconButton>\n                            ) }\n\n                        </div>\n\n                    </div>\n\n                </Toolbar>\n            </AppBar>\n        </Box>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport Typography from '@mui/material/Typography';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\n\nimport { Game } from '../data/Game'\n\ninterface Props {\n}\n\nconst AdminFooter = ( props: Props ) => {\n\n    return (\n        <>\n            {/* <Box className=\"footer\" sx={{ marginTop: '20px', flexGrow: 1 }}>\n                <AppBar position=\"static\" color=\"transparent\">\n                    <Toolbar style={{ width: '100%', textAlign: 'center' }}>\n                        <Typography variant=\"caption\" display=\"block\" color=\"GrayText\" gutterBottom>\n                            @mnezic\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n            </Box> */}\n        </>\n    )\n}\n\nexport default AdminFooter","import React from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nimport { AdminStep } from '../data/Admin'\nimport { toHomePage, toGamePage } from '../data/Navigate'\n\nimport AdminHeader from './AdminHeader'\nimport AdminFooter from './AdminFooter'\nimport { DEBUG } from '../data/Constants'\n\ninterface Props {\n    title?: string\n    step: AdminStep\n    onBack?: () => void\n    children: any\n}\n\nconst AdminPage = ( props: Props ) => {\n    const { title, step, onBack, children } = props\n\n    const navigate = useNavigate()\n    \n    return (\n        <>\n            <div className={`admin-page step-${step.toLowerCase()}`}>\n                <AdminHeader title={title} step={step} onBack={onBack}/>\n                {children}\n                <AdminFooter />\n            </div>\n        </>\n    )\n}\n\nexport default AdminPage","import React from 'react'\n\nimport { IconButton, Typography } from '@mui/material';\nimport CheckIcon from '@mui/icons-material/Check';\nimport CloseIcon from '@mui/icons-material/Close';\nimport AddIcon from '@mui/icons-material/Add';\nimport SearchIcon from '@mui/icons-material/Search';\n\nimport { Box, Grid, Modal, Button, TextField } from '@mui/material';\nimport { DataGrid, GridColDef } from '@mui/x-data-grid';\n\nimport { onUserEvent, onValueEvent } from '../data/Util';\n\ninterface Props {\n    open: boolean\n    closeModal: () => void\n    createTheme: (title: string, imgUrl?: string) => void\n}\n\nconst CreateThemeModal = ( props: Props ) => {\n    const { open, closeModal, createTheme } = props\n\n    const [ title, SetTitle ] = React.useState<string>()\n\n    const handleTitleChange = onValueEvent((value) => {\n        console.log(`SetTitle: ${value}`)\n        SetTitle(value);\n    })\n\n    const onSubmit = onUserEvent(() => {\n        console.log(`createTheme: ${title}`)\n        if ( title ) {\n            createTheme(title);\n            closeModal();\n        }\n    })\n\n    const style = {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: 700,\n        bgcolor: 'background.paper',\n        borderRadius: '10px',\n        boxShadow: 24,\n        p: 4,\n    };\n\n    return (\n        <Modal\n            open={open}\n            onClose={closeModal}\n            aria-labelledby=\"modal-modal-title\"\n            aria-describedby=\"modal-modal-description\"\n        > \n            <Box sx={style}>\n                <Grid container spacing={0} style={{ alignItems: 'center' }}>\n                    \n                    <Grid item xs={12} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-end' }}>\n                        <IconButton aria-label=\"Close\" onClick={closeModal}>\n                            <CloseIcon />\n                        </IconButton>\n                    </Grid>\n\n                    <Grid item xs={12} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', marginTop: '5px', marginBottom: '10px' }}>\n                        <TextField\n                            onChange={handleTitleChange}\n                            id=\"theme-title\"\n                            label=\"Title\"\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            style={{minWidth:'200px'}}\n                            type=\"text\"\n                            />\n                    </Grid>\n\n                    <Grid item xs={12} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', marginTop: '5px', marginBottom: '10px' }}>\n                        <Button aria-label=\"Create\" onClick={onSubmit}>\n                            <AddIcon />\n                        </Button>\n                    </Grid>\n\n                </Grid>\n\n            </Box>\n\n        </Modal>\n    )\n}\n\nexport default CreateThemeModal","// //////////////////////////////////////////////////\n// import\n\nimport { Theme } from \"../data/Theme\"\n\nimport { JsonTheme, ToTheme } from \"./JsonTheme\"\n\n// //////////////////////////////////////////////////\n// create theme\n\nexport async function CreateTheme( title: string ): Promise<Theme> {\n\n    let url = `${process.env.REACT_APP_API_ROOT_URI}/theme/new`\n    console.log(`[client] requestURL = ${url}`)\n\n    let body: JsonCreateThemeBody = {\n        theme: {\n            title: title,\n        }\n    }\n\n    const response = await fetch(url, {\n        method: 'PUT',\n        headers: {\n            'content-type': 'application/json;charset=UTF-8',\n        },\n        body: JSON.stringify(body),\n    })\n    if (!response.ok) {\n        const message = `An error has occured while creating theme: ${response.status} ${response.body}`;\n        throw new Error(message);\n    }\n\n    const jsonResponse = await response.json() as JsonCreateThemeResponse;\n    if (!jsonResponse.success) {\n        const message = `Unable to create theme: ${response.status} ${response.body}`;\n        throw new Error(message);\n    }\n\n    return ToTheme( jsonResponse.theme )\n}\n\nexport interface JsonCreateThemeBody {\n    theme: JsonCreateTheme\n}\n\nexport interface JsonCreateTheme {\n    title: string\n}\n\nexport interface JsonCreateThemeResponse {\n    success: boolean\n    theme: JsonTheme\n}","// //////////////////////////////////////////////////\n// import\n\nimport { Theme } from \"../data/Theme\"\n\nimport { JsonTheme, ToTheme } from \"./JsonTheme\"\n\n// //////////////////////////////////////////////////\n// remove theme\n\nexport async function RemoveTheme( themeId: number ): Promise<boolean> {\n\n    let url = `${process.env.REACT_APP_API_ROOT_URI}/theme/${themeId}`\n    console.log(`[client] requestURL = ${url}`)\n\n    const response = await fetch(url, {\n        method: 'DELETE',\n    })\n    if (!response.ok) {\n        const message = `An error has occured while deleting theme: ${response.status} ${response.body}`;\n        throw new Error(message);\n    }\n\n    const jsonResponse = await response.json() as JsonRemoveThemeResponse;\n    if (!jsonResponse.success) {\n        const message = `Unable to delete theme: ${response.status} ${response.body}`;\n        throw new Error(message);\n    }\n\n    return jsonResponse.success\n}\n\nexport interface JsonRemoveThemeResponse {\n    success: boolean\n}","import React from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nimport { IconButton, Alert, AlertTitle, Box } from '@mui/material'\nimport AddIcon from '@mui/icons-material/Add'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport EditIcon from '@mui/icons-material/Edit'\nimport { DataGrid, GridColDef } from '@mui/x-data-grid'\n\nimport AdminPage from '../component/AdminPage'\nimport CreateThemeModal from '../component/CreateThemeModal'\n\nimport { FetchThemes } from '../client/FetchThemes'\nimport { CreateTheme } from '../client/CreateTheme'\nimport { RemoveTheme } from '../client/RemoveTheme'\n\nimport { AdminStep } from '../data/Admin'\nimport { ThemeInfo } from '../data/ThemeInfo'\nimport { categoryToLabel, languageToLabel } from '../data/ThemeLabels'\nimport { toHomePage, toAdminThemePage } from '../data/Navigate'\nimport { onUserEvent } from '../data/Util'\n\ninterface Props {\n}\n\nconst AdminThemesPage = ( props: Props ) => {\n\n    const navigate = useNavigate()\n\n    const [themes, setThemes] = React.useState<ThemeInfo[]>()\n    const [error, setError] = React.useState<Error>();\n\n    const [ createThemeModal, setCreateThemeModal ] = React.useState( false )\n    const openCreateThemeModal = () => {\n        setCreateThemeModal(true)\n    }\n    const closeCreateThemeModal = () => {\n        setCreateThemeModal(false)\n    }\n    const createTheme = ( title: string ) => {\n        if ( title ) {\n            CreateTheme(title).then((theme) => { fetchThemes() }).catch(onError)\n        } else {\n            console.log(\"missing theme title!\")\n        }\n    }\n    \n    const editTheme = (theme: ThemeInfo) => {\n        return onUserEvent(() => {\n            console.log(\"click >>> edit theme\", theme.id )\n            if ( theme.id ) {\n                toTheme(theme.id)\n            } else {\n                console.log(\"missing theme id!\", theme)\n            }\n        })\n    }\n\n    const deleteTheme = (theme: ThemeInfo) => {\n        console.log(\"click >>> delete theme\", theme.id )\n        if ( theme.id ) {\n            if (window.confirm('Are you sure you wish to delete this item?')) {\n                RemoveTheme(theme.id).then((ok) => { fetchThemes() }).catch(console.log)\n            }\n        } else {\n            console.log(\"missing theme id!\", theme)\n        }\n    }\n    \n    const fetchThemes = () => {\n        FetchThemes()\n            .then((themes) => setThemes(themes))\n            .catch(onError);\n    }\n\n    const onError = (err: Error) => {\n        console.error(err)\n        setError(err)\n    }\n\n    React.useEffect(() => {\n        fetchThemes()\n    }, [])\n\n    console.log(error)\n    if ( error !== undefined ) {\n        return <Alert severity=\"error\">\n                    <AlertTitle>Error</AlertTitle>\n                    <strong>{error.message}</strong>\n                </Alert>\n    }\n    console.log(themes)\n    if ( themes === undefined ) {\n        return null\n    }\n\n    const toHome = () => {\n        console.log( `[to-home]` )\n        navigate( toHomePage() )\n    }\n\n    const toTheme = ( themeId: number ) => {\n        console.log( `[to-theme] ${themeId}` )\n        navigate( toAdminThemePage( themeId ) )\n    }\n\n    const columns: GridColDef[] = [\n        // {\n        //   field: 'imgUrl',\n        //   headerName: ' ',\n        //   cellClassName: 'music-button-cell',\n        //   width: 56,\n        //   editable: false,\n        //   disableColumnMenu: true,\n        //   sortable: false,\n        //   renderCell: (params) => {\n        //     if ( params.value == null ) {\n        //         return null\n        //     }\n        //     return <img src={params.value} style={{ width: '100%', height: '100%', objectFit: 'contain' }} />\n        //   },\n        // },\n        {\n          field: 'title',\n          headerName: 'Title',\n          flex: 3,\n          editable: false,\n        },\n        {\n            field: 'category',\n            headerName: 'Category',\n            flex: 1,\n            editable: false,\n            valueGetter: (params) => {\n                const theme = params.row as ThemeInfo\n                if ( !theme.labels || !theme.labels.category ) {\n                    return '-'\n                }\n                return `${categoryToLabel(theme.labels.category)}`\n            },\n        },\n        {\n            field: 'language',\n            headerName: 'Language',\n            flex: 1,\n            editable: false,\n            valueGetter: (params) => {\n                const theme = params.row as ThemeInfo\n                if ( !theme.labels || !theme.labels.language ) {\n                    return '-'\n                }\n                return `${languageToLabel(theme.labels.language)}`\n            },\n        },\n        {\n          field: 'nbQuestion',\n          headerName: ' ',\n          type: 'number',\n          width: 50,\n          editable: false,\n          disableColumnMenu: true,\n          valueFormatter: (params) => {\n            if ( params.value == null ) {\n                return '-'\n            }\n            return `${params.value}`\n          },\n        },\n        {\n          field: 'actions',\n          headerName: 'Actions',\n          width: 100,\n          editable: false,\n          disableColumnMenu: true,\n          sortable: false,\n          renderHeader(params) {\n              return <IconButton \n              color=\"primary\"\n              aria-label=\"Add\"\n              onClick={openCreateThemeModal}\n              >\n              <AddIcon />\n          </IconButton>\n          },\n          renderCell: (params) => {\n              return <>\n              <IconButton\n                  aria-label=\"Edit\"\n                  onClick={editTheme(params.row)}\n              >\n                  <EditIcon />\n              </IconButton>\n              <IconButton\n              aria-label=\"Delete\"\n              onClick={() => { deleteTheme(params.row) }}\n          >\n              <DeleteIcon />\n          </IconButton>\n          </>\n              \n              \n              \n              \n              \n        },\n        },\n      ];\n\n    return (\n        <AdminPage step={AdminStep.THEMES} onBack={toHome}>\n            <Box sx={{ height: 400, width: '100%' }}>\n\n            <CreateThemeModal\n                open={createThemeModal}\n                closeModal={closeCreateThemeModal}\n                createTheme={createTheme}\n            />\n\n                <DataGrid\n                    rows={themes}\n                    columns={columns}\n                    rowHeight={56}\n                    initialState={{\n                        pagination: {\n                            paginationModel: {\n                                pageSize: 10,\n                            },\n                        },\n                    }}\n                    pageSizeOptions={[10,25,50,100]}\n                    disableRowSelectionOnClick\n                    density=\"compact\"\n                    />\n            </Box>\n        </AdminPage>\n    )\n}\n\nexport default AdminThemesPage","// //////////////////////////////////////////////////\n// import\n\nimport { Theme } from \"../data/Theme\"\n\nimport { JsonTheme, ToTheme } from \"./JsonTheme\"\n\n// //////////////////////////////////////////////////\n// fetch theme\n\nexport async function FetchTheme( themeId: number ): Promise<Theme> {\n\n    let requestURL = `${process.env.REACT_APP_API_ROOT_URI}/theme/${themeId}`\n    console.log(`[api] requestURL = ${requestURL}`)\n\n    const response = await fetch(requestURL, {method: 'GET'})\n    if (!response.ok) {\n        const message = `An error has occured while fetching theme: ${response.status} ${response.body}`;\n        throw new Error(message);\n    }\n\n    const jsonResponse = await response.json() as JsonGetThemeResponse;\n    if (!jsonResponse.success) {\n        const message = `Unable to fetch theme: ${response.status} ${response.body}`;\n        throw new Error(message);\n    }\n\n    return ToTheme( jsonResponse.theme )\n}\n\nexport interface JsonGetThemeResponse {\n    success: boolean\n    theme: JsonTheme\n}","// //////////////////////////////////////////////////\n// import\n\nimport { Theme } from \"../data/Theme\"\n\nimport { JsonTheme, ToTheme } from \"./JsonTheme\"\n\n// //////////////////////////////////////////////////\n// add music to them\n\nexport async function AddMusicToTheme( themeId: number, deezerId: number ): Promise<Theme> {\n\n    let url = `${process.env.REACT_APP_API_ROOT_URI}/theme-question/${themeId}/new?deezer_id=${deezerId}`\n    console.log(`[client] requestURL = ${url}`)\n\n    const response = await fetch(url, {\n        method: 'PUT',\n    })\n    if (!response.ok) {\n        const message = `An error has occured while adding music to theme: ${response.status} ${response.body}`;\n        throw new Error(message);\n    }\n\n    const jsonResponse = await response.json() as JsonAddMusicToThemeResponse;\n    if (!jsonResponse.success) {\n        const message = `Unable to add music to theme: ${response.status} ${response.body}`;\n        throw new Error(message);\n    }\n\n    return ToTheme( jsonResponse.theme )\n}\n\nexport interface JsonAddMusicToThemeResponse {\n    success: boolean\n    theme: JsonTheme\n}","// //////////////////////////////////////////////////\n// import\n\nimport { Theme } from \"../data/Theme\"\n\nimport { JsonTheme, ToTheme } from \"./JsonTheme\"\n\n// //////////////////////////////////////////////////\n// remove theme question\n\nexport async function RemoveThemeQuestion( themeId: number, questionId: number ): Promise<Theme> {\n\n    let url = `${process.env.REACT_APP_API_ROOT_URI}/theme-question/${themeId}/${questionId}`\n    console.log(`[client] requestURL = ${url}`)\n\n    const response = await fetch(url, {\n        method: 'DELETE',\n    })\n    if (!response.ok) {\n        const message = `An error has occured while removing theme question: ${response.status} ${response.body}`;\n        throw new Error(message);\n    }\n\n    const jsonResponse = await response.json() as JsonRemoveThemeQuestionResponse;\n    if (!jsonResponse.success) {\n        const message = `Unable to remove theme question: ${response.status} ${response.body}`;\n        throw new Error(message);\n    }\n\n    return ToTheme( jsonResponse.theme )\n}\n\nexport interface JsonRemoveThemeQuestionResponse {\n    success: boolean\n    theme: JsonTheme\n}","// //////////////////////////////////////////////////\n// import\n\nimport { Theme } from \"../data/Theme\"\nimport { ThemeQuestion } from \"../data/ThemeQuestion\"\n\nimport { JsonTheme, ToTheme } from \"./JsonTheme\"\nimport { JsonThemeQuestion, FromThemeQuestion } from \"./JsonThemeQuestion\"\n\n// //////////////////////////////////////////////////\n// update theme question\n\nexport async function UpdateThemeQuestion( themeId: number, question: ThemeQuestion ): Promise<Theme> {\n\n    let url = `${process.env.REACT_APP_API_ROOT_URI}/theme-question/${themeId}/${question.id}`\n    console.log(`[client] requestURL = ${url}`)\n\n    let body: JsonUpdateThemeQuestionBody = {\n        question: FromThemeQuestion( question ),\n    }\n\n    const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n            'content-type': 'application/json;charset=UTF-8',\n        },\n        body: JSON.stringify(body),\n    })\n    if (!response.ok) {\n        const message = `An error has occured while updating theme question: ${response.status} ${response.body}`;\n        throw new Error(message);\n    }\n\n    const jsonResponse = await response.json() as JsonUpdateThemeQuestionResponse;\n    if (!jsonResponse.success) {\n        const message = `Unable to update theme question: ${response.status} ${response.body}`;\n        throw new Error(message);\n    }\n\n    return ToTheme( jsonResponse.theme )\n}\n\nexport interface JsonUpdateThemeQuestionBody {\n    question: JsonThemeQuestion\n}\n\nexport interface JsonUpdateThemeQuestionResponse {\n    success: boolean\n    theme: JsonTheme\n}","// //////////////////////////////////////////////////\n// import\n\nimport { Theme } from \"../data/Theme\"\nimport { ThemeQuestion } from \"../data/ThemeQuestion\"\n\nimport { JsonTheme, FromTheme, ToTheme } from \"./JsonTheme\"\nimport { JsonThemeQuestion, FromThemeQuestion } from \"./JsonThemeQuestion\"\n\n// //////////////////////////////////////////////////\n// update theme\n\nexport async function UpdateTheme( theme: Theme ): Promise<Theme> {\n\n    let url = `${process.env.REACT_APP_API_ROOT_URI}/theme/${theme.id}`\n    console.log(`[client] requestURL = ${url}`)\n\n    let body: JsonUpdateThemeBody = {\n        theme: FromTheme( theme ),\n    }\n\n    const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n            'content-type': 'application/json;charset=UTF-8',\n        },\n        body: JSON.stringify(body),\n    })\n    if (!response.ok) {\n        const message = `An error has occured while updating theme: ${response.status} ${response.body}`;\n        throw new Error(message);\n    }\n\n    const jsonResponse = await response.json() as JsonUpdateThemeResponse;\n    if (!jsonResponse.success) {\n        const message = `Unable to update theme: ${response.status} ${response.body}`;\n        throw new Error(message);\n    }\n\n    return ToTheme( jsonResponse.theme )\n}\n\nexport interface JsonUpdateThemeBody {\n    theme: JsonTheme\n}\n\nexport interface JsonUpdateThemeResponse {\n    success: boolean\n    theme: JsonTheme\n}","import React from 'react'\n\n// //////////////////////////////////////////////////\n// audio player\n\nimport { MutableRefObject } from \"react\";\n\nexport interface AudioPlayerInterface {\n    unload(): void;\n    load( src: string ): void;\n    play(): void;\n    loadAndPlay( src: string ): void;\n    pause(): void;\n    toggle(): void;\n\n    // events\n    onAudioLoading?: () => void\n    onAudioLoaded?: () => void\n    onAudioReady?: () => void\n    onAudioPlaying?: () => void\n    onAudioPausing?: () => void\n    onAudioEnd?: () => void\n    onAudioReset?: () => void\n    onAudioUnload?: () => void\n}\n\nexport class AudioPlayer implements AudioPlayerInterface {\n    audioRef: MutableRefObject<HTMLAudioElement> = React.useRef<HTMLAudioElement>( new Audio() )\n    loading = false\n    loaded = false\n    autoPlay = false\n    playing = false    \n    \n    onAudioLoading?: () => void = undefined\n    onAudioLoaded?: () => void = undefined\n    onAudioReady?: () => void = undefined\n    onAudioPlaying?: () => void = undefined\n    onAudioPausing?: () => void = undefined\n    onAudioEnd?: () => void = undefined\n    onAudioReset?: () => void = undefined\n    onAudioUnload?: () => void = undefined\n\n\n    // //////////////////////////////////////////////////\n    // constructor\n\n    constructor() {}\n    \n    // //////////////////////////////////////////////////\n    // unload\n    \n    unload(): void {\n        console.log(`[unload] src=${this.audioRef.current.src}`)\n        if ( this.audioRef.current.src ) {\n            if ( this.playing ) {\n                this.reset()\n            }\n            this._onAudioUnload()\n            if ( this.audioRef.current.src ) {\n                this.audioRef.current.removeEventListener( 'loadeddata', this._onAudioLoaded.bind(this) )    \n                this.audioRef.current.removeEventListener( 'canplaythrough', this._onAudioReady.bind(this) )\n                this.audioRef.current.removeEventListener( 'ended', this._onAudioEnd.bind(this) )\n                this.audioRef.current = new Audio()\n            }\n            this.loading = false\n            this.loaded = false\n            this.playing = false\n            this.onAudioLoading = undefined\n            this.onAudioLoaded = undefined\n            this.onAudioReady = undefined\n            this.onAudioPlaying = undefined\n            this.onAudioPausing = undefined\n            this.onAudioEnd = undefined\n            this.onAudioReset = undefined\n        }\n    }\n    \n    // //////////////////////////////////////////////////\n    // load\n\n    load( src: string ): void {\n        console.log(`[load] src=${src}`)\n        if ( this.audioRef.current.src != src ) {\n\n            this.audioRef.current = new Audio( src )\n            this.audioRef.current.loop = false\n            this.audioRef.current.volume = 1.0\n\n            this.audioRef.current.addEventListener( 'loadeddata', this._onAudioLoaded.bind(this) )    \n            this.audioRef.current.addEventListener( 'canplaythrough', this._onAudioReady.bind(this) )\n            this.audioRef.current.addEventListener( 'ended', this._onAudioEnd.bind(this) )\n\n            this._onAudioLoading()\n        }\n    }\n\n    loadAndPlay( src: string ): void {\n        console.log(`[load-and-play] src=${src}`)\n        this.autoPlay = true\n        console.log(`[load-and-play] this.autoPlay=${this.autoPlay}`)\n        this.load( src )\n    }\n\n    reset(): void {\n        console.log( '[reset]' )\n        this.playing = false\n        this.audioRef.current.pause()\n        this.audioRef.current.currentTime = 0\n        this._onAudioReset()\n    }\n\n    play(): void {\n        console.log( '[play]' )\n        this.playing = true\n        this.audioRef.current.play()\n        this._onAudioPlaying()\n    }\n\n    pause(): void {\n        console.log( '[pause]' )\n        this.playing = false\n        this.audioRef.current.pause()\n        this._onAudioPausing()\n    }\n\n    toggle(): void {\n        console.log( '[toggle]' )\n        if ( this.playing ) {\n            this.pause()\n        } else {\n            this.play()\n        }\n    }\n    \n    // //////////////////////////////////////////////////\n    // internal events\n\n    _onAudioLoading() {\n        console.log( '_onAudioLoading' )\n        if ( this.onAudioLoading ) {\n            this.onAudioLoading()\n        }\n    }\n\n    _onAudioLoaded() {\n        console.log( '_onAudioLoaded' )\n        if ( this.onAudioLoaded ) {\n            this.onAudioLoaded()\n        }\n    }\n\n    _onAudioReady() {\n        console.log( '_onAudioReady' )\n        if ( this.onAudioReady ) {\n            this.onAudioReady()\n        }\n        console.log( `this.autoPlay: ${this.autoPlay }` )\n        if ( this.autoPlay ) {\n            this.autoPlay = false\n            this.play()\n        }\n    }\n\n    _onAudioPlaying() {\n        console.log( '_onAudioPlaying' )\n        if ( this.onAudioPlaying ) {\n            this.onAudioPlaying()\n        }\n    }\n\n    _onAudioPausing() {\n        console.log( '_onAudioPausing' )\n        if ( this.onAudioPausing ) {\n            this.onAudioPausing()\n        }\n    }\n\n    _onAudioEnd() {\n        console.log( '_onAudioEnd' )\n        if ( this.onAudioEnd ) {\n            this.onAudioEnd()\n        }\n        this.reset()\n    }\n\n    _onAudioReset() {\n        console.log( '_onAudioReset' )\n        if ( this.onAudioReset ) {\n            this.onAudioReset()\n        }\n    }\n\n    _onAudioUnload() {\n        console.log( '_onAudioUnload' )\n        if ( this.onAudioUnload ) {\n            this.onAudioUnload()\n        }\n    }\n\n  }","import React from 'react'\n\nimport IconButton from '@mui/material/IconButton'\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow'\nimport PauseIcon from '@mui/icons-material/Pause'\nimport DownloadingIcon from '@mui/icons-material/Downloading'\n\nimport { Game, OnGameUpdate } from '../data/Game'\nimport { Question, OnQuestionUpdate, QuestionId } from '../data/Question'\nimport { onKeyEvent, onUserEvent } from '../data/Util'\nimport { Box, CircularProgress, Tooltip, Typography } from '@mui/material'\nimport { withStyles } from '@mui/styles'\nimport MusicCard from './MusicCard'\nimport { Music, getImgUrl } from '../data/Music'\nimport { MUSIC_PLAYER_KEYBOARD_SHORTCUTS } from '../data/Constants'\n\nimport { AudioPlayerInterface } from '../data/AudioPlayer'\n\ninterface Props {\n    audioPlayer: AudioPlayerInterface\n    music: Music\n    size?: number\n}\n\nconst MusicButton = ( props: Props ) => {\n    const { audioPlayer, music, size } = props\n\n    if ( !music ) {\n        return null\n    }\n        \n    //\n    // load music\n    //\n\n    const width = size ? size : 56;\n    const height = size ? size : 56;\n\n    const iconWidth = width*0.75;\n    const iconHeight = height*0.75;\n\n    const playIcon = <PlayArrowIcon sx={{ height: iconHeight, width: iconWidth, color: '#fff' }}/>\n    const pauseIcon = <PauseIcon sx={{ height: iconHeight, width: iconWidth, color: '#fff' }}/>\n    const downloadingIcon = <DownloadingIcon sx={{ height: iconHeight, width: iconWidth, color: '#fff' }}/>\n\n    const [ loaded, setLoaded ] = React.useState(false)\n    const [ icon, setIcon ] = React.useState(playIcon)\n\n    //\n    // toggle music\n    //\n    \n    const loadAndPlay = () => {\n        console.log( `[load-and-play-music]` )\n        audioPlayer.unload()\n        audioPlayer.onAudioPlaying = () => { \n            console.log( `audioPlayer.onAudioPlaying` )\n            setIcon( pauseIcon )\n        }\n        audioPlayer.onAudioPausing = () => { \n            console.log( `audioPlayer.onAudioPausing` )\n            setIcon( playIcon )\n        }\n        audioPlayer.onAudioLoading = () => { \n            console.log( `audioPlayer.onAudioLoading` )\n            setIcon( downloadingIcon )\n        }\n        audioPlayer.onAudioLoaded = () => { \n            console.log( `audioPlayer.onAudioLoaded` )\n            setLoaded( true )\n        }\n        audioPlayer.onAudioUnload = () => { \n            console.log( `audioPlayer.onAudioUnload` )\n            setIcon( playIcon )\n            setLoaded( false )\n        }\n        audioPlayer.loadAndPlay( music.mp3Url )\n    }\n\n    const pauseMusic = () => { \n        console.log( `[pause-music]` )\n        audioPlayer.pause()\n    }\n\n    const toggleMusic = () => { \n        console.log( `[toggle-music]` )\n        audioPlayer.toggle()\n    }\n\n    //\n    // on click\n    //\n\n    const onClick = onUserEvent( () => {\n        if ( loaded ) {\n            toggleMusic()\n        } else if ( !loaded ) {\n            loadAndPlay()\n        }\n    } )\n\n\n\n    return (\n        <div \n            style={{ \n                width: `${width}px`, \n                height: `${height}px`, \n                cursor: 'auto', \n                marginRight: '0px', \n                border: 'none',\n                background: `no-repeat url(${getImgUrl( music )})`,\n                backgroundSize: `${width}px ${height}px`,\n                backgroundColor: '#999',\n                borderRadius: `5%`,\n            }} \n            onClick={onClick}\n        >\n\n            <Box \n                sx={{\n                    width: `${width}px`,\n                    height: `${height}px`, \n                    position: 'relative',\n                    display: 'inline-flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    opacity: '0.8',\n                    cursor: 'pointer',\n                }}\n            >\n\n                { icon }\n\n            </Box>\n\n        </div>\n    )\n}\n\nexport default MusicButton","// //////////////////////////////////////////////////\n// import\n\nimport { Music } from \"../data/Music\"\n\nimport { JsonMusic, ToMusic } from \"./JsonMusic\"\n\n// //////////////////////////////////////////////////\n// search music\n\nexport async function SearchMusic( search: string, limit: number ): Promise<Music[]> {\n\n    let url = `${process.env.REACT_APP_API_ROOT_URI}/deezer/music?search=${search}&limit=${limit}`\n    console.log(`[client] requestURL = ${url}`)\n\n    const response = await fetch(url, {\n        method: 'GET',\n    })\n    if (!response.ok) {\n        const message = `An error has occured while searching music: ${response.status} ${response.body}`;\n        throw new Error(message);\n    }\n\n    const jsonResponse = await response.json() as JsonSearchMusicResponse;\n    if (!jsonResponse.success) {\n        const message = `Unable to search music: ${response.status} ${response.body}`;\n        throw new Error(message);\n    }\n\n    return jsonResponse.musics.map( jsonMusic => ToMusic( jsonMusic ) )\n}\n\nexport interface JsonSearchMusicResponse {\n    success: boolean\n    musics: JsonMusic[]\n}","// //////////////////////////////////////////////////\n// import\n\nimport { Playlist } from \"../data/Playlist\"\n\nimport { JsonPlaylist, ToPlaylist } from \"./JsonPlaylist\"\n\n// //////////////////////////////////////////////////\n// fetch theme\n\nexport async function FetchPlaylist( playlistId: number ): Promise<Playlist> {\n\n    let requestURL = `${process.env.REACT_APP_API_ROOT_URI}/deezer/playlist/${playlistId}`\n    console.log(`[api] requestURL = ${requestURL}`)\n\n    const response = await fetch(requestURL, {method: 'GET'})\n    if (!response.ok) {\n        const message = `An error has occured while fetching playlist: ${response.status} ${response.body}`;\n        throw new Error(message);\n    }\n\n    const jsonResponse = await response.json() as JsonGetPlaylistResponse;\n    if (!jsonResponse.success) {\n        const message = `Unable to fetch playlist: ${response.status} ${response.body}`;\n        throw new Error(message);\n    }\n\n    return ToPlaylist( jsonResponse.playlist )\n}\n\nexport interface JsonGetPlaylistResponse {\n    success: boolean\n    playlist: JsonPlaylist\n}","import React from 'react'\n\nimport { IconButton, Typography } from '@mui/material';\nimport CheckIcon from '@mui/icons-material/Check';\nimport CloseIcon from '@mui/icons-material/Close';\nimport AddIcon from '@mui/icons-material/Add';\nimport SearchIcon from '@mui/icons-material/Search';\nimport SearchOffIcon from '@mui/icons-material/SearchOff';\n\nimport { Box, Grid, Modal, Button, TextField } from '@mui/material';\nimport { DataGrid, GridColDef } from '@mui/x-data-grid';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport { SearchMusic } from '../client/SearchMusic';\nimport { FetchPlaylist } from '../client/FetchPlaylist';\n\nimport { Music } from '../data/Music';\nimport { Playlist, getImgUrl } from '../data/Playlist';\nimport { AudioPlayerInterface } from '../data/AudioPlayer';\nimport { onUserEvent, onValueEvent } from '../data/Util';\n\nimport MusicButton from './MusicButton'\n\ninterface Props {\n    open: boolean\n    closeModal: () => void\n    isMusicIncluded: (music: Music) => boolean\n    addMusic: (music: Music) => void\n    removeMusic: (music: Music) => void\n    audioPlayer: AudioPlayerInterface\n    playlistId?: number\n}\n\nconst SearchMusicModal = ( props: Props ) => {\n    const { open, closeModal, isMusicIncluded, addMusic, removeMusic, audioPlayer, playlistId } = props\n\n    const [ search, SetSearch ] = React.useState<string>(\"\")\n    const [ submit, SetSubmit ] = React.useState<boolean>(false)\n    const [ loading, SetLoading ] = React.useState<boolean>(false)\n    const [ musics, SetMusics ] = React.useState<Music[]>()\n    const [ playlist, SetPlaylist ] = React.useState<Playlist>()\n\n    const handleChange = onValueEvent((value) => {\n        console.log(`search: ${value}`)\n        SetSearch(value);\n    })\n\n    const onSubmit = onUserEvent(() => {\n        console.log(`submit: true`)\n        SetSubmit(true);\n    })\n\n    const onClear = onUserEvent(() => {\n        console.log(`onClear`)\n        SetSearch(\"\")\n        SetMusics(undefined)\n    })\n    \n    const onClose = onUserEvent(() => {\n        console.log(`onClose`)\n        SetSearch(\"\")\n        SetMusics(undefined)\n        closeModal()\n    })\n\n    React.useEffect(() => {\n        console.log(`submit: ${submit} / search: ${search} / playlistId: ${playlistId}`)\n        if ( submit && search ) {\n            SetLoading(true)\n            SearchMusic(search,100)\n            .then((musics) => {\n                SetMusics(musics)\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n            .finally(() => {\n                SetLoading(false)\n                SetSubmit(false)\n            })\n        }\n    }, [submit])\n\n    React.useEffect(() => {\n        console.log(`playlistId: ${playlistId}`)\n        if ( playlistId ) {\n            SetLoading(true)\n            FetchPlaylist(playlistId)\n            .then((playlist) => {\n                SetPlaylist(playlist)\n                SetMusics(playlist.musics)\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n            .finally(() => {\n                SetLoading(false)\n                SetSubmit(false)\n            })\n        }\n    }, [playlistId])\n\n    const columns: GridColDef[] = [\n        {\n            field: 'music',\n            headerName: ' ',\n            width: 56,\n            sortable: false,\n            disableColumnMenu: true,\n            cellClassName: 'music-button-cell',\n            renderCell: (params) => {\n                if (params.row == null) {\n                    return null\n                }\n                return <MusicButton audioPlayer={audioPlayer} music={params.row} size={56}/>\n            },\n        },\n        {\n          field: 'name',\n          headerName: 'Title',\n          flex: 1,\n          renderCell: (params) => {\n            const artist = params.row.artist ? params.row.artist.name : '-';\n            const album = params.row.album ? params.row.album.name : '-';\n            return <div style={{ justifyContent: 'left' }}>\n                <Typography align='left'><b>{params.row.name}</b></Typography>\n                <Typography align='left' color=\"textSecondary\">{artist} / {album}</Typography>\n            </div>  \n          },\n        },\n        {\n            field: 'actions',\n            headerName: ' ',\n            width: 50,\n            sortable: false,\n            disableColumnMenu: true,\n            renderCell: (params) => {\n                if ( isMusicIncluded(params.row) ) {\n                    return <IconButton\n                            aria-label=\"Remove\"\n                            onClick={onUserEvent(() => { \n                                removeMusic(params.row)\n                                audioPlayer.unload()\n                            })}>\n                        <CheckIcon />\n                    </IconButton>\n                }\n                return <IconButton\n                            aria-label=\"Add\"\n                            onClick={onUserEvent(() => { \n                                addMusic(params.row)\n                                audioPlayer.unload()\n                            })}\n                        >\n                            <AddIcon />\n                        </IconButton>\n            },\n        },\n      ];\n\n    \n    const style = {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: '90%',\n        maxWidth: '700px',\n        bgcolor: 'background.paper',\n        borderRadius: '10px',\n        boxShadow: 24,\n        p: 4,\n    };\n\n    return (\n        <Modal\n            open={open}\n            onClose={closeModal}\n            aria-labelledby=\"modal-modal-title\"\n            aria-describedby=\"modal-modal-description\"\n        > \n            <Box sx={style}>\n                <Grid container spacing={2} style={{ alignItems: 'center' }}>\n                    \n                    <Grid item xs={10} style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-start', marginTop: '0px', marginBottom: '10px' }}>\n\n                            {(playlistId && !playlist) && <>\n                                <Typography variant=\"caption\" display=\"block\" gutterBottom>Loading Playlist #{playlistId}...</Typography>\n                            </>}\n                            {(playlistId && playlist) && <>\n                                <img\n                                    src={getImgUrl(playlist)}\n                                    width=\"56\" \n                                    height=\"56\"\n                                    style={{marginRight: '10px' }}\n                                />\n                                <Typography variant=\"overline\" display=\"block\" gutterBottom>{playlist.name}</Typography>\n                            </>}\n                            {!playlistId && <>\n                                <TextField\n                                    defaultValue={search}\n                                    value={search}\n                                    onChange={handleChange}\n                                    id=\"outlined-name\"\n                                    label=\"Search music\"\n                                    margin=\"normal\"\n                                    variant=\"outlined\"\n                                    style={{minWidth:'200px'}}\n                                    type=\"text\"\n                                    size=\"small\"\n                                    disabled={loading}\n                                    />\n                                <IconButton aria-label=\"Search\" onClick={onSubmit} disabled={loading || !search}>\n                                    <SearchIcon />\n                                </IconButton>\n                                <IconButton aria-label=\"Clear\" onClick={onClear} disabled={loading || !search}>\n                                    <SearchOffIcon />\n                                </IconButton>\n                            </>}\n\n                    </Grid>\n\n                    <Grid item xs={2} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-end' }}>\n                    \n                        <IconButton aria-label=\"Close\" onClick={onClose} size=\"small\">\n                            <CloseIcon />\n                        </IconButton>\n\n                    </Grid>\n\n                </Grid>\n\n                {/* musics */}\n                \n                <Grid item xs={12} container spacing={1} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}> \n\n                    <Box sx={{ height: 400, width: '100%' }}>\n                    {loading && <CircularProgress style={{ margin: '50px' }}/>} \n                    {(!loading && musics) &&\n                        <DataGrid\n                            density='compact'\n                            rows={musics}\n                            rowHeight={76}\n                            columns={columns}\n                            initialState={{\n                                pagination: {\n                                    paginationModel: {\n                                        pageSize: 100,\n                                    },\n                                },\n                            }}\n                            pageSizeOptions={[100]}\n                            disableRowSelectionOnClick\n                            getRowId={(row) => { return row.deezerId}}\n                            />}\n                    </Box>\n\n                </Grid>\n            </Box>\n\n        </Modal>\n    )\n}\n\nexport default SearchMusicModal","import React from 'react'\n\nimport { IconButton, Typography } from '@mui/material';\nimport CheckIcon from '@mui/icons-material/Check';\nimport CloseIcon from '@mui/icons-material/Close';\nimport AddIcon from '@mui/icons-material/Add';\nimport SaveIcon from '@mui/icons-material/Save';\nimport SearchIcon from '@mui/icons-material/Search';\n\nimport { Box, Grid, Modal, Button, TextField } from '@mui/material';\nimport { DataGrid, GridColDef } from '@mui/x-data-grid';\n\nimport { ThemeQuestion } from '../data/ThemeQuestion';\nimport { onUserEvent, onValueEvent } from '../data/Util';\n\ninterface Props {\n    open: boolean\n    closeModal: () => void\n    question?: ThemeQuestion\n    updateQuestion: (question: ThemeQuestion) => void\n}\n\nconst UpdateQuestionModal = ( props: Props ) => {\n    const { open, closeModal, question, updateQuestion } = props\n\n    if ( !question ) {\n        return null\n    }\n\n    const [ text, SetText ] = React.useState<string>(\"\")\n    const [ hint, SetHint ] = React.useState<string>(\"\")\n\n    const handleTextChange = onValueEvent((value) => {\n        console.log(`text: ${value}`)\n        SetText(value);\n    })\n\n    const handleHintChange = onValueEvent((value) => {\n        console.log(`hint: ${value}`)\n        SetHint(value);\n    })\n\n    const onSubmit = onUserEvent(() => {\n        console.log(`[update-question] text: ${text} / hint: ${hint}`)\n        updateQuestion({ ...question, text: text, hint: hint});\n        closeModal();\n    })\n\n    React.useEffect(() => {\n        SetText(question.text)\n        SetHint(question.hint)\n    }, [question])\n\n    const style = {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: '90%',\n        maxWidth: '700px',\n        bgcolor: 'background.paper',\n        borderRadius: '10px',\n        boxShadow: 24,\n        p: 4,\n    };\n\n    return (\n        <Modal\n            open={open}\n            onClose={closeModal}\n            aria-labelledby=\"modal-modal-title\"\n            aria-describedby=\"modal-modal-description\"\n        > \n        \n            <Box sx={style}>\n\n                <Grid container spacing={0} style={{ alignItems: 'center' }}>\n                    \n                    <Grid item xs={12} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-end' }}>\n                        <IconButton aria-label=\"Close\" onClick={onSubmit}>\n                            <CloseIcon />\n                        </IconButton>\n                    </Grid>\n\n                    <Grid item xs={12} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', marginTop: '5px', marginBottom: '10px' }}>\n                        <TextField\n                            onChange={handleTextChange}\n                            id=\"theme-title\"\n                            label=\"Text\"\n                            margin=\"dense\"\n                            variant=\"outlined\"\n                            style={{width:'100%'}}\n                            type=\"text\"\n                            value={text}\n                            />\n                    </Grid>\n\n                    <Grid item xs={12} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', marginTop: '5px', marginBottom: '10px' }}>\n                    <TextField\n                            onChange={handleHintChange}\n                            id=\"theme-title\"\n                            label=\"Hint\"\n                            margin=\"dense\"\n                            variant=\"outlined\"\n                            style={{width:'100%'}}\n                            type=\"text\"\n                            value={hint}\n                            />\n                    </Grid>\n\n                    <Grid item xs={12} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', marginTop: '5px', marginBottom: '10px' }}>\n                        <Button aria-label=\"Save\" onClick={onSubmit}>\n                            <SaveIcon />\n                        </Button>\n                    </Grid>\n\n                </Grid>\n\n            </Box>\n\n        </Modal>\n    )\n}\n\nexport default UpdateQuestionModal","import React from 'react'\nimport { useParams } from 'react-router'\nimport { useNavigate } from 'react-router-dom'\n\nimport { Grid, Alert, AlertTitle, Box, IconButton, Typography, TextField } from '@mui/material';\nimport { DataGrid, GridColDef } from '@mui/x-data-grid'\nimport MusicNoteIcon from '@mui/icons-material/MusicNote'\nimport QueueMusicIcon from '@mui/icons-material/QueueMusic'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport EditIcon from '@mui/icons-material/Edit'\nimport SaveIcon from '@mui/icons-material/Save'\nimport CheckIcon from '@mui/icons-material/Check'\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\n\nimport { FetchTheme } from '../client/FetchTheme'\nimport { AddMusicToTheme } from '../client/AddMusicToTheme'\nimport { RemoveThemeQuestion } from '../client/RemoveThemeQuestion'\nimport { UpdateThemeQuestion } from '../client/UpdateThemeQuestion'\nimport { UpdateTheme } from '../client/UpdateTheme'\n\nimport { AdminStep } from '../data/Admin'\nimport { Theme, updateTitle, updateImgUrl, updateLanguageLabel, updateCategoryLabel } from '../data/Theme'\nimport { Language, Category, languageToLabel, categoryToLabel }  from '../data/ThemeLabels'\nimport { Music } from '../data/Music'\nimport { Playlist } from '../data/Playlist'\nimport { ThemeQuestion } from '../data/ThemeQuestion'\nimport { toAdminThemesPage } from '../data/Navigate'\nimport { onUserEvent, onValueEvent } from '../data/Util'\nimport { AudioPlayer } from '../data/AudioPlayer'\n\nimport AdminPage from '../component/AdminPage'\nimport MusicButton from '../component/MusicButton'\nimport SearchMusicModal from '../component/SearchMusicModal'\nimport SearchPlaylistModal from '../component/SearchPlaylistModal'\nimport UpdateQuestionModal from '../component/UpdateQuestionModal'\n\ninterface Props {\n}\n\nconst AdminThemePage = ( props: Props ) => {\n\n    const navigate = useNavigate()\n\n    const { themeId } = useParams()\n    \n    if ( !themeId ) {\n        return null\n    }\n    const id = parseInt(themeId,10)\n\n    const [theme, setTheme] = React.useState<Theme>();\n    const [needSave, setNeedSave] = React.useState<boolean>(false);\n    const [error, setError] = React.useState<Error>();\n    const [question, setQuestion] = React.useState<ThemeQuestion>();\n    const [ playlistId, SetPlaylistId ] = React.useState<number>();\n\n    const handleTitleChange = onValueEvent((value) => {\n        console.log(`theme: updateTitle: ${value}`)\n        if ( theme ) {\n            setTheme(updateTitle(value)(theme))\n            setNeedSave(true)\n        }\n    })\n\n    const handleImgUrlChange = onValueEvent((value) => {\n        console.log(`theme: updateImgUrl: ${value}`)\n        if ( theme ) {\n            setTheme(updateImgUrl(value)(theme))\n            setNeedSave(true)\n        }\n    })\n\n    const handleLanguageLabelChange = onValueEvent((value) => {\n        console.log(`theme: updateLanguageLabel: ${value}`)\n        if ( theme ) {\n            setTheme(updateLanguageLabel(value !== '' ? value as Language : undefined)(theme))\n            setNeedSave(true)\n        }\n    })\n\n    const handleCategoryLabelChange = onValueEvent((value) => {\n        console.log(`theme: updateCategoryLabel: ${value}`)\n        if ( theme ) {\n            setTheme(updateCategoryLabel(value as Category)(theme))\n            setNeedSave(true)\n        }\n    })\n    \n    const [ updateQuestionModal, setUpdateQuestionModal ] = React.useState( false )\n    const openUpdateQuestionModal = () => {\n        audioPlayer.pause()\n        setUpdateQuestionModal(true)\n    }\n    const closeUpdateQuestionModal = () => {\n        audioPlayer.pause()\n        setUpdateQuestionModal(false)\n    }\n\n    const audioPlayer = new AudioPlayer()\n    \n    const [ searchMusicModal, setSearchMusicModal ] = React.useState( false )\n    const openSearchMusicModal = () => {\n        audioPlayer.pause()\n        setSearchMusicModal(true)\n    }\n    const closeSearchMusicModal = () => {\n        audioPlayer.pause()\n        setSearchMusicModal(false)\n        SetPlaylistId(undefined)\n    }\n    const isMusicIncluded = (music: Music) => {\n        if ( theme && theme.questions ) {\n            for ( var question of theme.questions ) {\n                if ( question.music && question.music.deezerId == music.deezerId ) {\n                    return true\n                }\n            }\n        }\n        return false\n    }\n    const addMusic = (music: Music) => {\n        if ( music.deezerId ) {\n            AddMusicToTheme(id,music.deezerId).then(setTheme).catch(console.log)\n        } else {\n            console.log(\"missing deezer id!\", music)\n        }\n    }\n    \n    const removeMusic = (music: Music) => {\n        if ( theme ) {\n            for ( var question of theme.questions ) {\n                if ( question.music && question.music.id && question.music.deezerId == music.deezerId ) {\n                    RemoveThemeQuestion(id,question.id).then(setTheme).catch(console.log)\n                }\n            }\n        }\n    }\n\n    const [ searchPlaylistModal, setSearchPlaylistModal ] = React.useState( false )\n    const openSearchPlaylistModal = () => {\n        audioPlayer.pause()\n        setSearchPlaylistModal(true)\n    }\n    const closeSearchPlaylistModal = () => {\n        audioPlayer.pause()\n        setSearchPlaylistModal(false)\n    }\n    const selectPlaylist = (playlist: Playlist) => {\n        console.log(\"select playlist\", playlist)\n        closeSearchPlaylistModal()\n        if ( playlist.deezerId ) {\n            SetPlaylistId(playlist.deezerId)\n            openSearchMusicModal()\n        } else {\n            SetPlaylistId(undefined)\n        }\n    }\n\n    const editQuestion = (question: ThemeQuestion) => {\n        return onUserEvent(() => {\n            console.log(\"click >>> pause music\")\n            audioPlayer.pause()\n            console.log(\"click >>> edit question\", question.id )\n            if ( question.id ) {\n                setQuestion(question)\n                openUpdateQuestionModal()\n            } else {\n                console.log(\"missing question id!\", question)\n            }\n        })\n    }\n\n    const updateTheme = () => {\n        if ( theme ) {\n            UpdateTheme(theme).then((theme) => {\n                setTheme(theme)\n                setNeedSave(false)\n            }).catch(console.log)\n        }\n    }\n\n    const updateQuestion = (question: ThemeQuestion) => {\n        UpdateThemeQuestion(id,question).then(setTheme).catch(console.log)\n    }\n\n    const removeQuestion = (question: ThemeQuestion) => {\n        return onUserEvent(() => {\n            console.log(\"click >>> pause music\" )\n            audioPlayer.pause()\n            console.log(\"click >>> remove question\", question.id )\n            if ( question.id ) {\n                if (window.confirm('Are you sure you wish to delete this question?')) {\n                    RemoveThemeQuestion(id,question.id).then(setTheme).catch(console.log)\n                }\n            } else {\n                console.log(\"missing question id!\", question)\n            }\n        })\n    }\n\n    React.useEffect(() => {\n        FetchTheme(id)\n            .then((theme) => setTheme(theme))\n            .catch((err) => {\n                console.error(err)\n                setError(err)\n            });\n      }, [])\n\n    console.log(error)\n    if ( error !== undefined ) {\n        return <Alert severity=\"error\">\n                    <AlertTitle>Error</AlertTitle>\n                    <strong>{error.message}</strong>\n                </Alert>\n    }\n    console.log(theme)\n    if ( theme === undefined ) {\n        return null\n    }\n\n    const toThemes = () => {\n        console.log( `[to-themes]` )\n        navigate( toAdminThemesPage() )\n    }\n\n    const columns: GridColDef[] = [\n        {\n            field: 'music',\n            headerName: ' ',\n            width: 56,\n            cellClassName: 'music-button-cell',\n            disableColumnMenu: true,\n            sortable: false,\n            renderCell: (params) => {\n                if (params.value == null) {\n                    return null\n                }\n                return <MusicButton audioPlayer={audioPlayer} music={params.value} size={56}/>\n            },\n        },\n        {\n          field: 'text',\n          headerName: 'Questions',\n          editable: true,\n          hideable: false,\n          flex: 1,\n          renderCell: (params) => {\n            const artist = params.row.artist ? params.row.artist.name : '-';\n            const album = params.row.album ? params.row.album.name : '-';\n            return <div style={{ justifyContent: 'left' }}>\n                <Typography align='left'><b>{params.row.text ? params.row.text : \"-\"}</b></Typography>\n                <Typography align='left' color=\"textSecondary\">{params.row.hint ? params.row.hint : \"-\"}</Typography>\n            </div>  \n          },\n        },\n        {\n            field: 'actions',\n            headerName: ' ',\n            width: 100,\n            disableColumnMenu: true,\n            sortable: false,\n            renderHeader(params) {\n                return <>\n                    <IconButton \n                        color=\"primary\"\n                        aria-label=\"Add from playlist\"\n                        onClick={openSearchPlaylistModal}\n                    >\n                        <QueueMusicIcon />\n                    </IconButton>\n\n                    <IconButton \n                        color=\"primary\"\n                        aria-label=\"Add\"\n                        onClick={openSearchMusicModal}\n                    >\n                        <MusicNoteIcon />\n                    </IconButton>\n                </>\n            },\n            renderCell: (params) => {\n                return <>\n                    <IconButton\n                        aria-label=\"Edit\"\n                        onClick={editQuestion(params.row)}\n                    >\n                        <EditIcon />\n                    </IconButton>\n                    <IconButton\n                        aria-label=\"Delete\"\n                        onClick={removeQuestion(params.row)}\n                    >\n                        <DeleteIcon />\n                    </IconButton>\n                </>\n            },\n        },\n      ];\n\n    return (\n        <AdminPage title={`Theme #${theme.id} - ${theme.title}`} step={AdminStep.THEME} onBack={toThemes}>\n            <Grid container spacing={0} style={{ alignItems: 'center' }}>\n                <Grid item xs={10} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-start' }}>\n                    <TextField\n                        margin='dense'\n                        onChange={handleTitleChange}\n                        id=\"theme-title\"\n                        label=\"Title\"\n                        variant=\"outlined\"\n                        style={{width:'100%'}}\n                        type=\"text\"\n                        value={theme.title}\n                        size=\"small\"\n                        />\n                </Grid>\n                <Grid item xs={2} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                    {needSave && <IconButton color=\"primary\" aria-label=\"Save\" onClick={updateTheme}><SaveIcon /></IconButton>}\n                    {!needSave && <IconButton disabled aria-label=\"Saved\"><CheckIcon /></IconButton>}\n                </Grid>\n\n                <Grid item xs={10} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-start' }}>\n                    <TextField\n                        margin='dense'\n                        onChange={handleImgUrlChange}\n                        id=\"theme-img-url\"\n                        label=\"Image URL\"\n                        variant=\"outlined\"\n                        style={{width:'100%'}}\n                        type=\"text\"\n                        value={theme.imgUrl}\n                        size=\"small\"\n                        />\n                </Grid>\n                <Grid item xs={2} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-start' }}>\n                    {theme.imgUrl && <img src={theme.imgUrl} style={{ height: '56px', margin: '0 auto' }}/>}\n                </Grid>\n\n                <Grid item xs={5} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-start' }}>\n                    <FormControl sx={{ m: 1, minWidth: 120 }} size=\"small\">\n                        <InputLabel id=\"select-language-label\">Language</InputLabel>\n                        <Select\n                            labelId=\"select-language-label\"\n                            id=\"select-language\"\n                            value={theme.labels && theme.labels.language ? theme.labels.language : \"\"}\n                            label=\"Language\"\n                            onChange={handleLanguageLabelChange}\n                        >\n                            <MenuItem value=\"\"><em>None</em></MenuItem>\n                            <MenuItem value={Language.French}>{languageToLabel(Language.French)}</MenuItem>\n                            <MenuItem value={Language.English}>{languageToLabel(Language.English)}</MenuItem>\n                        </Select>\n                    </FormControl>\n                </Grid>\n\n                <Grid item xs={5} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-start' }}>\n                    <FormControl sx={{ m: 1, minWidth: 120 }} size=\"small\">\n                        <InputLabel id=\"select-category-label\">Category</InputLabel>\n                        <Select\n                            labelId=\"select-category-label\"\n                            id=\"select-category\"\n                            value={theme.labels && theme.labels.category? theme.labels.category : \"\"}\n                            label=\"Category\"\n                            onChange={handleCategoryLabelChange}\n                            \n                        >\n                            <MenuItem value=\"\"><em>None</em></MenuItem>\n                            <MenuItem value={Category.Genre}>{categoryToLabel(Category.Genre)}</MenuItem>\n                            <MenuItem value={Category.Top}>{categoryToLabel(Category.Top)}</MenuItem>\n                            <MenuItem value={Category.Decade}>{categoryToLabel(Category.Decade)}</MenuItem>\n                            <MenuItem value={Category.Year}>{categoryToLabel(Category.Year)}</MenuItem>\n                        </Select>\n                    </FormControl>\n                </Grid>\n                \n                <Grid item xs={12} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-end' }}>\n                    \n                    <UpdateQuestionModal\n                        open={updateQuestionModal}\n                        closeModal={closeUpdateQuestionModal}\n                        question={question}\n                        updateQuestion={updateQuestion}\n                    />\n                    \n                    <SearchPlaylistModal\n                        open={searchPlaylistModal}\n                        closeModal={closeSearchPlaylistModal}\n                        selectPlaylist={selectPlaylist}\n                    />\n                    \n                    <SearchMusicModal\n                        open={searchMusicModal}\n                        closeModal={closeSearchMusicModal}\n                        isMusicIncluded={isMusicIncluded}\n                        addMusic={addMusic}\n                        removeMusic={removeMusic}\n                        audioPlayer={audioPlayer}\n                        playlistId={playlistId}\n                    />\n\n                    <Box sx={{ height: 500, width: '100%' }}>\n                        <DataGrid\n                            density='compact'\n                            rows={theme.questions || []}\n                            rowHeight={76}\n                            columns={columns}\n                            initialState={{\n                                pagination: {\n                                    paginationModel: {\n                                        pageSize: 25,\n                                    },\n                                },\n                            }}\n                            pageSizeOptions={[25]}\n                            disableRowSelectionOnClick\n                            disableColumnSelector\n                            />\n                    </Box>\n                </Grid>\n            </Grid>\n\n        </AdminPage>\n        \n    )\n}\n\nexport default AdminThemePage","// //////////////////////////////////////////////////\n// import\n\nimport { ThemeQuestion } from './ThemeQuestion'\nimport { ThemeLabels, Language, Category, updateLanguage, updateCategory } from './ThemeLabels'\n\n// //////////////////////////////////////////////////\n// theme\n\nexport interface Theme {\n    id: number\n    title: string\n    imgUrl: string\n    labels: ThemeLabels\n    questions: ThemeQuestion[]\n}\n\n// //////////////////////////////////////////////////\n// update\n\nexport type ThemeUpdater = ( theme: Theme ) => Theme\n\nexport function updateTitle( title: string ): ThemeUpdater {\n    return ( theme: Theme ): Theme => {\n        return { ...theme, title: title }\n    }\n}\n\nexport function updateImgUrl( imgUrl: string ): ThemeUpdater {\n    return ( theme: Theme ): Theme => {\n        return { ...theme, imgUrl: imgUrl }\n    }\n}\n\nexport function updateLanguageLabel( language?: Language ): ThemeUpdater {\n    return ( theme: Theme ): Theme => {\n        return { ...theme, labels: updateLanguage(language)(theme.labels) }\n    }\n}\n\nexport function updateCategoryLabel( category?: Category ): ThemeUpdater {\n    return ( theme: Theme ): Theme => {\n        return { ...theme, labels: updateCategory(category)(theme.labels) }\n    }\n}","import React from 'react'\n\nimport Grid from '@mui/material/Grid';\n\nimport Page from '../component/Page'\n\nimport { CardSymbol, CardSize, CardColor } from '../data/Card'\nimport PlayingCard from '../component/PlayingCard';\n\ninterface Props {}\n\nconst PlayingCardsPage = ( props: Props ) => {\n\n    return (\n        <Page>\n            \n            <h3>Playing Cards</h3>\n\n            <Grid container spacing={2}>\n\n                { Object.keys( CardSymbol ).map(symbol => {\n\n                    return (\n                        <Grid key={symbol} item xs={12} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n                            {\n                                Object.keys( CardSize ).map(size => {\n                                    return (\n                                        <>\n                                            <PlayingCard key={`${symbol}-${size}-black`} card={{\n                                                    symbol: symbol as CardSymbol,\n                                                    color: CardColor.BLACK,\n                                                    size: size as CardSize,\n                                                    number: 2,\n                                                }} \n                                                onClick={() => {}} \n                                            />\n                                            <PlayingCard key={`${symbol}-${size}-red`} card={{\n                                                    symbol: symbol as CardSymbol,\n                                                    color: CardColor.RED,\n                                                    size: size as CardSize,\n                                                    number: 2,\n                                                }} \n                                                onClick={() => {}} \n                                            />\n                                        </>\n                                    )\n                                })\n                            }\n                        </Grid>\n                    )\n                } ) }\n\n            </Grid>\n\n        </Page>\n    )\n}\n\nexport default PlayingCardsPage","import React from 'react'\n\nimport { HashRouter, Route, Routes, Navigate } from \"react-router-dom\"\n\nimport HomePage from './page/HomePage'\nimport SettingsPage from './page/SettingsPage'\nimport PlayersPage from './page/PlayersPage'\nimport StartPage from './page/StartPage'\nimport QuestionPage from './page/QuestionPage'\nimport ScoresPage from './page/ScoresPage'\nimport AvatarsPage from './page/AvatarsPage'\nimport AdminThemesPage from './page/AdminThemesPage'\nimport AdminThemePage from './page/AdminThemePage'\n\nimport { Game, GameUpdater, loadGames, storeGames, clearGames, GameId } from './data/Game'\n\nimport './App.css';\nimport PlayingCardsPage from './page/PlayingCardsPage';\nimport { QuestionId, QuestionUpdater } from './data/Question'\nimport { loadingButtonClasses } from '@mui/lab'\n\nfunction App() {\n\n  //\n  // global state \n  //\n\n  const [ games, setGames ] = React.useState( loadGames() )\n\n  function addGame( game: Game ) {\n      console.log( `[add-game] ${game.id}` )\n      setGames( prev => {\n        const newGames = [ game, ...prev ]\n        return storeGames( newGames )\n      } )\n  }\n\n  function deleteGame( game: Game ) {\n      console.log( `[delete-game] ${game.id}` )\n      setGames( prev => {\n        const newGames = prev.filter( g => g.id !== game.id ) \n        return storeGames( newGames )\n      } )\n  }\n\n  function deleteGames( gameIds: GameId[] ) {\n      console.log( `[delete-games]` )\n      setGames( prev => {\n        for ( const gameId of gameIds ) {\n          console.log( `[todo] ${gameId}` )\n        }\n        for ( const game of prev ) {\n          console.log( `[before] ${game.id}` )\n        }\n        const newGames = prev.filter( game => gameIds.indexOf( game.id ) === -1 )\n        for ( const game of newGames ) {\n          console.log( `[after] ${game.id}` )\n        }\n        return storeGames( newGames )\n      } )\n  }\n\n  function updateGame( gameId: GameId, update: GameUpdater ) {\n    console.log( `[update-game] ${gameId}` )\n    setGames( prev => {\n      const newGames = prev.map( game => game.id === gameId ? update( game ) : game )\n      return storeGames( newGames )\n    } )\n  }\n\n  function updateQuestion( gameId: GameId, questionId: QuestionId, update: QuestionUpdater ) {\n    console.log( `[update-question] ${gameId} - ${questionId}` )\n    setGames( prev => {\n      const newGames = prev.map( game => {\n        if ( game.id != gameId ) {\n          return game\n        }\n        game.questions = game.questions.map( question => question.id === questionId ? update( question ) : question )\n        return game        \n      } )\n      return storeGames( newGames )\n    } )\n  }\n\n  // GREG console.log( '[render] app' )\n  // <Route path=\"*\" element={<>page not found</>} />\n\n  return (\n    <div className=\"app app-amnezic\">\n\n      <HashRouter>\n        <Routes>\n          <Route path=\"/\" element={<HomePage games={games} addGame={addGame} updateGame={updateGame} deleteGames={deleteGames}/>}/>\n          <Route path=\"/game/:gameId/settings\" element={<SettingsPage games={games} updateGame={updateGame} />} />\n          <Route path=\"/game/:gameId/players\" element={<PlayersPage games={games} updateGame={updateGame} />} />\n          <Route path=\"/game/:gameId/start\" element={<StartPage games={games} updateGame={updateGame} />} />\n          <Route path=\"/game/:gameId/question/:questionNumber\" element={<QuestionPage games={games} updateGame={updateGame} updateQuestion={updateQuestion}/>} />\n          <Route path=\"/game/:gameId/scores\" element={<ScoresPage games={games} updateGame={updateGame} addGame={addGame} />} />\n          <Route path=\"/avatars\" element={<AvatarsPage />} />\n          <Route path=\"/cards\" element={<PlayingCardsPage />} />\n          <Route path=\"/admin/theme\" element={<AdminThemesPage />} />\n          <Route path=\"/admin/theme/:themeId\" element={<AdminThemePage />} />\n          <Route path=\"*\" element={<Navigate to=\"/\" replace />}/>\n        </Routes>\n      </HashRouter>\n\n    </div>\n  );\n}\n\nexport default App;\n","\"use client\";\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nif (module.hot) {\n  module.hot.accept();\n}"],"sourceRoot":""}